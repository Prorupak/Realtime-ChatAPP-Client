/// <reference types="react" />
import { ReactionEmoji } from '../Channel/emojiData';
import type { NimbleEmojiProps } from 'emoji-mart';
import type { ReactionResponse } from 'stream-chat';
import type { ReactEventHandler } from '../Message/types';
import type { DefaultAttachmentType, DefaultChannelType, DefaultMessageType, DefaultReactionType, DefaultUserType } from '../../types/types';
export declare type ReactionsListProps<Re extends DefaultReactionType = DefaultReactionType, Us extends DefaultUserType<Us> = DefaultUserType> = {
    /** Additional props to be passed to the [NimbleEmoji](https://github.com/missive/emoji-mart/blob/master/src/components/emoji/nimble-emoji.js) component from `emoji-mart` */
    additionalEmojiProps?: Partial<NimbleEmojiProps>;
    /** Custom on click handler for an individual reaction, defaults to `onReactionListClick` from the `MessageContext` */
    onClick?: ReactEventHandler;
    /** An object that keeps track of the count of each type of reaction on a message */
    reaction_counts?: {
        [key: string]: number;
    };
    /** A list of the currently supported reactions on a message */
    reactionOptions?: ReactionEmoji[];
    /** An array of the reaction objects to display in the list */
    reactions?: ReactionResponse<Re, Us>[];
    /** Display the reactions in the list in reverse order, defaults to false */
    reverse?: boolean;
};
/**
 * Component that displays a list of reactions on a message.
 */
export declare const ReactionsList: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends import("stream-chat").LiteralStringForUnion = import("stream-chat").LiteralStringForUnion, Ev extends import("../../types/types").UnknownType = import("../../types/types").UnknownType, Me extends DefaultMessageType = DefaultMessageType, Re extends import("../../types/types").UnknownType = import("../../types/types").UnknownType, Us extends DefaultUserType<Us> = DefaultUserType<import("../../types/types").DefaultUserTypeInternal>>(props: ReactionsListProps<Re, Us>) => JSX.Element | null;
//# sourceMappingURL=ReactionsList.d.ts.map