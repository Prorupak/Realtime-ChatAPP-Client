/// <reference types="react" />
import type { StreamMessage } from '../../../context/ChannelStateContext';
import type { DefaultAttachmentType, DefaultChannelType, DefaultCommandType, DefaultEventType, DefaultMessageType, DefaultReactionType, DefaultUserType } from '../../../types/types';
export declare function useNewMessageNotification<At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends DefaultCommandType = DefaultCommandType, Ev extends DefaultEventType = DefaultEventType, Me extends DefaultMessageType = DefaultMessageType, Re extends DefaultReactionType = DefaultReactionType, Us extends DefaultUserType<Us> = DefaultUserType>(messages: StreamMessage<At, Ch, Co, Ev, Me, Re, Us>[], currentUserId?: string): {
    atBottom: import("react").MutableRefObject<boolean>;
    newMessagesNotification: boolean;
    setNewMessagesNotification: import("react").Dispatch<import("react").SetStateAction<boolean>>;
};
//# sourceMappingURL=useNewMessageNotification.d.ts.map