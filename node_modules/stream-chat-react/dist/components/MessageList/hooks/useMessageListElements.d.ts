import React from 'react';
import { GroupStyle } from '../utils';
import type { UserResponse } from 'stream-chat';
import type { MessageProps } from '../../Message/types';
import type { StreamMessage } from '../../../context/ChannelStateContext';
import type { DefaultAttachmentType, DefaultChannelType, DefaultCommandType, DefaultEventType, DefaultMessageType, DefaultReactionType, DefaultUserType } from '../../../types/types';
declare type MessagePropsToOmit = 'channel' | 'groupStyles' | 'initialMessage' | 'lastReceivedId' | 'message' | 'readBy' | 'threadList';
declare type UseMessageListElementsProps<At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends DefaultCommandType = DefaultCommandType, Ev extends DefaultEventType = DefaultEventType, Me extends DefaultMessageType = DefaultMessageType, Re extends DefaultReactionType = DefaultReactionType, Us extends DefaultUserType<Us> = DefaultUserType> = {
    enrichedMessages: StreamMessage<At, Ch, Co, Ev, Me, Re, Us>[];
    internalMessageProps: Omit<MessageProps<At, Ch, Co, Ev, Me, Re, Us>, MessagePropsToOmit>;
    messageGroupStyles: Record<string, GroupStyle>;
    onMessageLoadCaptured: (event: React.SyntheticEvent<HTMLLIElement, Event>) => void;
    returnAllReadData: boolean;
    threadList: boolean;
    read?: Record<string, {
        last_read: Date;
        user: UserResponse<Us>;
    }>;
};
export declare const useMessageListElements: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends import("stream-chat").LiteralStringForUnion = import("stream-chat").LiteralStringForUnion, Ev extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Me extends DefaultMessageType = DefaultMessageType, Re extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(props: UseMessageListElementsProps<At, Ch, Co, Ev, Me, Re, Us>) => JSX.Element[];
export {};
//# sourceMappingURL=useMessageListElements.d.ts.map