/// <reference types="react" />
import type { StreamMessage } from '../../../context/ChannelStateContext';
import type { DefaultAttachmentType, DefaultChannelType, DefaultMessageType, DefaultUserType } from '../../../types/types';
export declare const useGiphyPreview: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends import("stream-chat").LiteralStringForUnion = import("stream-chat").LiteralStringForUnion, Ev extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Me extends DefaultMessageType = DefaultMessageType, Re extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(separateGiphyPreview: boolean) => {
    giphyPreviewMessage: StreamMessage<At, Ch, Co, Ev, Me, Re, Us> | undefined;
    setGiphyPreviewMessage: import("react").Dispatch<import("react").SetStateAction<StreamMessage<At, Ch, Co, Ev, Me, Re, Us> | undefined>>;
};
//# sourceMappingURL=useGiphyPreview.d.ts.map