import type { StreamMessage } from '../../../context/ChannelStateContext';
import type { DefaultAttachmentType, DefaultChannelType, DefaultCommandType, DefaultEventType, DefaultMessageType, DefaultReactionType, DefaultUserType } from '../../../types/types';
export declare type ContainerMeasures = {
    offsetHeight: number;
    scrollHeight: number;
};
export declare type UseMessageListScrollManagerParams<At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends DefaultCommandType = DefaultCommandType, Ev extends DefaultEventType = DefaultEventType, Me extends DefaultMessageType = DefaultMessageType, Re extends DefaultReactionType = DefaultReactionType, Us extends DefaultUserType<Us> = DefaultUserType> = {
    messages: StreamMessage<At, Ch, Co, Ev, Me, Re, Us>[];
    onScrollBy: (scrollBy: number) => void;
    scrollContainerMeasures: () => ContainerMeasures;
    scrolledUpThreshold: number;
    scrollToBottom: () => void;
    showNewMessages: () => void;
};
export declare function useMessageListScrollManager<At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends DefaultCommandType = DefaultCommandType, Ev extends DefaultEventType = DefaultEventType, Me extends DefaultMessageType = DefaultMessageType, Re extends DefaultReactionType = DefaultReactionType, Us extends DefaultUserType<Us> = DefaultUserType>(params: UseMessageListScrollManagerParams<At, Ch, Co, Ev, Me, Re, Us>): (scrollTopValue: number) => void;
//# sourceMappingURL=useMessageListScrollManager.d.ts.map