/// <reference types="react" />
import type { StreamMessage } from '../../context/ChannelStateContext';
import type { DefaultAttachmentType, DefaultChannelType, DefaultCommandType, DefaultEventType, DefaultMessageType, DefaultReactionType, DefaultUserType } from '../../types/types';
export declare type GiphyPreviewMessageProps<At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends DefaultCommandType = DefaultCommandType, Ev extends DefaultEventType = DefaultEventType, Me extends DefaultMessageType = DefaultMessageType, Re extends DefaultReactionType = DefaultReactionType, Us extends DefaultUserType<Us> = DefaultUserType> = {
    message: StreamMessage<At, Ch, Co, Ev, Me, Re, Us>;
};
export declare const GiphyPreviewMessage: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends import("stream-chat").LiteralStringForUnion = import("stream-chat").LiteralStringForUnion, Ev extends import("../../types/types").UnknownType = import("../../types/types").UnknownType, Me extends DefaultMessageType = DefaultMessageType, Re extends import("../../types/types").UnknownType = import("../../types/types").UnknownType, Us extends DefaultUserType<Us> = DefaultUserType<import("../../types/types").DefaultUserTypeInternal>>(props: GiphyPreviewMessageProps<At, Ch, Co, Ev, Me, Re, Us>) => JSX.Element;
//# sourceMappingURL=GiphyPreviewMessage.d.ts.map