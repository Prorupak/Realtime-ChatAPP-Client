import type React from 'react';
import type { UserResponse } from 'stream-chat';
import type { ReactEventHandler } from '../types';
import type { StreamMessage } from '../../../context/ChannelStateContext';
import type { DefaultAttachmentType, DefaultChannelType, DefaultMessageType, DefaultUserType } from '../../../types/types';
export declare type CustomMentionHandler<Us extends DefaultUserType<Us> = DefaultUserType> = (event: React.BaseSyntheticEvent, mentioned_users: UserResponse<Us>[]) => void;
export declare type MentionedUserEventHandler<Us extends DefaultUserType<Us> = DefaultUserType> = (event: React.BaseSyntheticEvent, mentionedUsers: UserResponse<Us>[]) => void;
export declare const useMentionsHandler: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends import("stream-chat").LiteralStringForUnion = import("stream-chat").LiteralStringForUnion, Ev extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Me extends DefaultMessageType = DefaultMessageType, Re extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(message?: StreamMessage<At, Ch, Co, Ev, Me, Re, Us> | undefined, customMentionHandler?: {
    onMentionsClick?: CustomMentionHandler<Us> | undefined;
    onMentionsHover?: CustomMentionHandler<Us> | undefined;
} | undefined) => {
    onMentionsClick: ReactEventHandler;
    onMentionsHover: ReactEventHandler;
};
//# sourceMappingURL=useMentionsHandler.d.ts.map