/// <reference types="react" />
import type { User } from 'stream-chat';
import type { ReactEventHandler } from '../types';
import type { StreamMessage } from '../../../context/ChannelStateContext';
import type { DefaultAttachmentType, DefaultChannelType, DefaultMessageType, DefaultUserType } from '../../../types/types';
export declare type UserEventHandler<Us extends DefaultUserType<Us> = DefaultUserType> = (event: React.BaseSyntheticEvent, user: User<Us>) => void;
export declare const useUserHandler: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends import("stream-chat").LiteralStringForUnion = import("stream-chat").LiteralStringForUnion, Ev extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Me extends DefaultMessageType = DefaultMessageType, Re extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(message?: StreamMessage<At, Ch, Co, Ev, Me, Re, Us> | undefined, eventHandlers?: {
    onUserClickHandler?: UserEventHandler<Us> | undefined;
    onUserHoverHandler?: UserEventHandler<Us> | undefined;
} | undefined) => {
    onUserClick: ReactEventHandler;
    onUserHover: ReactEventHandler;
};
//# sourceMappingURL=useUserHandler.d.ts.map