import type { ImageUpload } from 'react-file-utils';
import type { UserResponse } from 'stream-chat';
import type { ChannelActionContextValue } from '../../../context/ChannelActionContext';
import type { ChatContextValue } from '../../../context/ChatContext';
import type { TranslationContextValue } from '../../../context/TranslationContext';
import type { DefaultAttachmentType, DefaultChannelType, DefaultCommandType, DefaultEventType, DefaultMessageType, DefaultReactionType, DefaultUserType } from '../../../types/types';
export declare const accentsMap: {
    [key: string]: string;
};
export declare const removeDiacritics: (text?: string | undefined) => string;
export declare const calculateLevenshtein: (query: string, name: string) => number;
export declare type SearchLocalUserParams<Us extends DefaultUserType<Us> = DefaultUserType> = {
    ownUserId: string | undefined;
    query: string;
    text: string;
    users: UserResponse<Us>[];
    useMentionsTransliteration?: boolean;
};
export declare const searchLocalUsers: <Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(params: SearchLocalUserParams<Us>) => UserResponse<Us>[];
declare type CheckUploadPermissionsParams<At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends DefaultCommandType = DefaultCommandType, Ev extends DefaultEventType = DefaultEventType, Me extends DefaultMessageType = DefaultMessageType, Re extends DefaultReactionType = DefaultReactionType, Us extends DefaultUserType<Us> = DefaultUserType> = {
    addNotification: ChannelActionContextValue<At, Ch, Co, Ev, Me, Re, Us>['addNotification'];
    file: ImageUpload['file'];
    getAppSettings: ChatContextValue<At, Ch, Co, Ev, Me, Re, Us>['getAppSettings'];
    t: TranslationContextValue['t'];
    uploadType: 'image' | 'file';
};
export declare const checkUploadPermissions: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends import("stream-chat").LiteralStringForUnion = import("stream-chat").LiteralStringForUnion, Ev extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Me extends DefaultMessageType = DefaultMessageType, Re extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(params: CheckUploadPermissionsParams<At, Ch, Co, Ev, Me, Re, Us>) => Promise<boolean>;
export {};
//# sourceMappingURL=utils.d.ts.map