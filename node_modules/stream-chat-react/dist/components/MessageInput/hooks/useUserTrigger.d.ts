import type { SearchQueryParams } from '../../ChannelSearch/ChannelSearch';
import type { UserResponse } from 'stream-chat';
import type { UserTriggerSetting } from '../../MessageInput/DefaultTriggerProvider';
import type { DefaultAttachmentType, DefaultChannelType, DefaultMessageType, DefaultUserType } from '../../../types/types';
export declare type UserTriggerParams<Us extends DefaultUserType<Us> = DefaultUserType> = {
    onSelectUser: (item: UserResponse<Us>) => void;
    disableMentions?: boolean;
    mentionAllAppUsers?: boolean;
    mentionQueryParams?: SearchQueryParams<Us>['userFilters'];
    useMentionsTransliteration?: boolean;
};
export declare const useUserTrigger: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends import("stream-chat").LiteralStringForUnion = import("stream-chat").LiteralStringForUnion, Ev extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Me extends DefaultMessageType = DefaultMessageType, Re extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(params: UserTriggerParams<Us>) => UserTriggerSetting<Us>;
//# sourceMappingURL=useUserTrigger.d.ts.map