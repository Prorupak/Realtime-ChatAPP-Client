import type { MessageInputContextValue } from '../../../context/MessageInputContext';
import type { CustomTrigger, DefaultAttachmentType, DefaultChannelType, DefaultMessageType, DefaultUserType } from '../../../types/types';
export declare const useCreateMessageInputContext: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends import("stream-chat").LiteralStringForUnion = import("stream-chat").LiteralStringForUnion, Ev extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Me extends DefaultMessageType = DefaultMessageType, Re extends import("../../../types/types").UnknownType = import("../../../types/types").UnknownType, Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>, V extends CustomTrigger = CustomTrigger>(value: MessageInputContextValue<At, Ch, Co, Ev, Me, Re, Us, V>) => MessageInputContextValue<At, Ch, Co, Ev, Me, Re, Us, V>;
//# sourceMappingURL=useCreateMessageInputContext.d.ts.map