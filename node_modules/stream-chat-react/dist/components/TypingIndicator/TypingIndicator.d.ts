import React from 'react';
import { AvatarProps } from '../Avatar';
import type { DefaultAttachmentType, DefaultChannelType, DefaultMessageType, DefaultUserType } from '../../types/types';
export declare type TypingIndicatorProps<Us extends DefaultUserType<Us> = DefaultUserType> = {
    /** Custom UI component to display user avatar, defaults to and accepts same props as: [Avatar](https://github.com/GetStream/stream-chat-react/blob/master/src/components/Avatar/Avatar.tsx) */
    Avatar?: React.ComponentType<AvatarProps<Us>>;
    /** Avatar size in pixels, @default 32px */
    avatarSize?: number;
    /** Whether or not the typing indicator is in a thread */
    threadList?: boolean;
};
export declare const TypingIndicator: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends import("stream-chat").LiteralStringForUnion = import("stream-chat").LiteralStringForUnion, Ev extends import("../../types/types").UnknownType = import("../../types/types").UnknownType, Me extends DefaultMessageType = DefaultMessageType, Re extends import("../../types/types").UnknownType = import("../../types/types").UnknownType, Us extends DefaultUserType<Us> = DefaultUserType<import("../../types/types").DefaultUserTypeInternal>>(props: TypingIndicatorProps<Us>) => JSX.Element | null;
//# sourceMappingURL=TypingIndicator.d.ts.map