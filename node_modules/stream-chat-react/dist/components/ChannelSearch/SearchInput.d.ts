import React from 'react';
import type { ChannelOrUserResponse } from './utils';
import type { DefaultAttachmentType, DefaultChannelType, DefaultCommandType, DefaultEventType, DefaultMessageType, DefaultReactionType, DefaultUserType } from '../../types/types';
export declare type ChannelSearchFunctionParams<At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends DefaultCommandType = DefaultCommandType, Ev extends DefaultEventType = DefaultEventType, Me extends DefaultMessageType = DefaultMessageType, Re extends DefaultReactionType = DefaultReactionType, Us extends DefaultUserType<Us> = DefaultUserType> = {
    setQuery: React.Dispatch<React.SetStateAction<string>>;
    setResults: React.Dispatch<React.SetStateAction<Array<ChannelOrUserResponse<At, Ch, Co, Ev, Me, Re, Us>>>>;
    setResultsOpen: React.Dispatch<React.SetStateAction<boolean>>;
    setSearching: React.Dispatch<React.SetStateAction<boolean>>;
};
export declare type SearchInputProps<At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends DefaultCommandType = DefaultCommandType, Ev extends DefaultEventType = DefaultEventType, Me extends DefaultMessageType = DefaultMessageType, Re extends DefaultReactionType = DefaultReactionType, Us extends DefaultUserType<Us> = DefaultUserType> = {
    channelSearchParams: {
        setQuery: React.Dispatch<React.SetStateAction<string>>;
        setResults: React.Dispatch<React.SetStateAction<ChannelOrUserResponse<At, Ch, Co, Ev, Me, Re, Us>[]>>;
        setResultsOpen: React.Dispatch<React.SetStateAction<boolean>>;
        setSearching: React.Dispatch<React.SetStateAction<boolean>>;
    };
    inputRef: React.RefObject<HTMLInputElement>;
    onSearch: (event: React.BaseSyntheticEvent) => void;
    query: string;
    searchFunction?: (params: ChannelSearchFunctionParams<At, Ch, Co, Ev, Me, Re, Us>, event: React.BaseSyntheticEvent) => Promise<void> | void;
};
export declare const SearchInput: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends import("stream-chat").LiteralStringForUnion = import("stream-chat").LiteralStringForUnion, Ev extends import("../../types/types").UnknownType = import("../../types/types").UnknownType, Me extends DefaultMessageType = DefaultMessageType, Re extends import("../../types/types").UnknownType = import("../../types/types").UnknownType, Us extends DefaultUserType<Us> = DefaultUserType<import("../../types/types").DefaultUserTypeInternal>>(props: SearchInputProps<At, Ch, Co, Ev, Me, Re, Us>) => JSX.Element;
//# sourceMappingURL=SearchInput.d.ts.map