import type { Event, LiteralStringForUnion, Mute } from 'stream-chat';
export declare type UnknownType = Record<string, unknown>;
export declare type CustomTrigger = {
    [key: string]: {
        componentProps: UnknownType;
        data: UnknownType;
    };
};
export declare type DefaultAttachmentType = UnknownType & {
    asset_url?: string;
    file_size?: number;
    id?: string;
    images?: Array<{
        image_url?: string;
        thumb_url?: string;
    }>;
    mime_type?: string;
};
export declare type DefaultChannelType = UnknownType & {
    frozen?: boolean;
    image?: string;
    member_count?: number;
    subtitle?: string;
};
export declare type DefaultCommandType = LiteralStringForUnion;
export declare type DefaultEventType = UnknownType;
export declare type DefaultMessageType = UnknownType & {
    customType?: 'channel.intro' | 'message.date';
    date?: string | Date;
    errorStatusCode?: number;
    event?: Event<DefaultAttachmentType, DefaultChannelType, DefaultCommandType, DefaultEventType, DefaultMessageType, DefaultReactionType, DefaultUserType>;
    unread?: boolean;
};
export declare type DefaultReactionType = UnknownType;
export declare type DefaultUserTypeInternal = {
    image?: string;
    status?: string;
};
export declare type DefaultUserType<UserType extends DefaultUserTypeInternal = DefaultUserTypeInternal> = UnknownType & DefaultUserTypeInternal & {
    mutes?: Array<Mute<UserType>>;
};
//# sourceMappingURL=types.d.ts.map