{"ast":null,"code":"import { useCallback, useLayoutEffect, useRef, useState } from 'react';\nimport { useMessageListScrollManager } from './useMessageListScrollManager';\nexport var useScrollLocationLogic = function useScrollLocationLogic(params) {\n  var _a = params.messages,\n      messages = _a === void 0 ? [] : _a,\n      _b = params.scrolledUpThreshold,\n      scrolledUpThreshold = _b === void 0 ? 200 : _b;\n\n  var _c = useState(false),\n      hasNewMessages = _c[0],\n      setHasNewMessages = _c[1];\n\n  var _d = useState(),\n      wrapperRect = _d[0],\n      setWrapperRect = _d[1];\n\n  var closeToBottom = useRef(false);\n  var closeToTop = useRef(false);\n  var listRef = useRef(null);\n  var scrollToBottom = useCallback(function () {\n    var _a, _b;\n\n    if (!((_a = listRef.current) === null || _a === void 0 ? void 0 : _a.scrollTo)) return;\n    (_b = listRef.current) === null || _b === void 0 ? void 0 : _b.scrollTo({\n      top: listRef.current.scrollHeight\n    });\n    setHasNewMessages(false); // this is hacky and unreliable, but that was the current implementation so not breaking it\n\n    setTimeout(function () {\n      var _a;\n\n      (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.scrollTo({\n        top: listRef.current.scrollHeight\n      });\n    }, 200);\n  }, [listRef]);\n  useLayoutEffect(function () {\n    if (listRef === null || listRef === void 0 ? void 0 : listRef.current) {\n      setWrapperRect(listRef.current.getBoundingClientRect());\n      scrollToBottom();\n    }\n  }, [listRef]);\n  var updateScrollTop = useMessageListScrollManager({\n    messages: messages,\n    onScrollBy: function onScrollBy(scrollBy) {\n      var _a;\n\n      return (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.scrollBy({\n        top: scrollBy\n      });\n    },\n    scrollContainerMeasures: function scrollContainerMeasures() {\n      var _a, _b;\n\n      return {\n        offsetHeight: ((_a = listRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0,\n        scrollHeight: ((_b = listRef.current) === null || _b === void 0 ? void 0 : _b.scrollHeight) || 0\n      };\n    },\n    scrolledUpThreshold: scrolledUpThreshold,\n    scrollToBottom: scrollToBottom,\n    showNewMessages: function showNewMessages() {\n      return setHasNewMessages(true);\n    }\n  });\n  var onScroll = useCallback(function (event) {\n    var element = event.target;\n    var scrollTop = element.scrollTop;\n    updateScrollTop(scrollTop);\n    var offsetHeight = element.offsetHeight;\n    var scrollHeight = element.scrollHeight;\n    closeToBottom.current = scrollHeight - (scrollTop + offsetHeight) < scrolledUpThreshold;\n    closeToTop.current = scrollTop < scrolledUpThreshold;\n\n    if (closeToBottom.current) {\n      setHasNewMessages(false);\n    }\n  }, [updateScrollTop, closeToTop, closeToBottom, scrolledUpThreshold]);\n  var onMessageLoadCaptured = useCallback(function () {\n    /**\n     * A load event (emitted by e.g. an <img>) was captured on a message.\n     * In some cases, the loaded asset is larger than the placeholder, which means we have to scroll down.\n     */\n    if (closeToBottom.current && !closeToTop.current) {\n      scrollToBottom();\n    }\n  }, [closeToTop, closeToBottom, scrollToBottom]);\n  return {\n    hasNewMessages: hasNewMessages,\n    listRef: listRef,\n    onMessageLoadCaptured: onMessageLoadCaptured,\n    onScroll: onScroll,\n    scrollToBottom: scrollToBottom,\n    wrapperRect: wrapperRect\n  };\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/MessageList/hooks/useScrollLocationLogic.js"],"names":["useCallback","useLayoutEffect","useRef","useState","useMessageListScrollManager","useScrollLocationLogic","params","_a","messages","_b","scrolledUpThreshold","_c","hasNewMessages","setHasNewMessages","_d","wrapperRect","setWrapperRect","closeToBottom","closeToTop","listRef","scrollToBottom","current","scrollTo","top","scrollHeight","setTimeout","getBoundingClientRect","updateScrollTop","onScrollBy","scrollBy","scrollContainerMeasures","offsetHeight","showNewMessages","onScroll","event","element","target","scrollTop","onMessageLoadCaptured"],"mappings":"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","sourcesContent":["import { useCallback, useLayoutEffect, useRef, useState } from 'react';\nimport { useMessageListScrollManager } from './useMessageListScrollManager';\nexport var useScrollLocationLogic = function (params) {\n    var _a = params.messages, messages = _a === void 0 ? [] : _a, _b = params.scrolledUpThreshold, scrolledUpThreshold = _b === void 0 ? 200 : _b;\n    var _c = useState(false), hasNewMessages = _c[0], setHasNewMessages = _c[1];\n    var _d = useState(), wrapperRect = _d[0], setWrapperRect = _d[1];\n    var closeToBottom = useRef(false);\n    var closeToTop = useRef(false);\n    var listRef = useRef(null);\n    var scrollToBottom = useCallback(function () {\n        var _a, _b;\n        if (!((_a = listRef.current) === null || _a === void 0 ? void 0 : _a.scrollTo))\n            return;\n        (_b = listRef.current) === null || _b === void 0 ? void 0 : _b.scrollTo({\n            top: listRef.current.scrollHeight,\n        });\n        setHasNewMessages(false);\n        // this is hacky and unreliable, but that was the current implementation so not breaking it\n        setTimeout(function () {\n            var _a;\n            (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.scrollTo({\n                top: listRef.current.scrollHeight,\n            });\n        }, 200);\n    }, [listRef]);\n    useLayoutEffect(function () {\n        if (listRef === null || listRef === void 0 ? void 0 : listRef.current) {\n            setWrapperRect(listRef.current.getBoundingClientRect());\n            scrollToBottom();\n        }\n    }, [listRef]);\n    var updateScrollTop = useMessageListScrollManager({\n        messages: messages,\n        onScrollBy: function (scrollBy) { var _a; return (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.scrollBy({ top: scrollBy }); },\n        scrollContainerMeasures: function () {\n            var _a, _b;\n            return ({\n                offsetHeight: ((_a = listRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0,\n                scrollHeight: ((_b = listRef.current) === null || _b === void 0 ? void 0 : _b.scrollHeight) || 0,\n            });\n        },\n        scrolledUpThreshold: scrolledUpThreshold,\n        scrollToBottom: scrollToBottom,\n        showNewMessages: function () { return setHasNewMessages(true); },\n    });\n    var onScroll = useCallback(function (event) {\n        var element = event.target;\n        var scrollTop = element.scrollTop;\n        updateScrollTop(scrollTop);\n        var offsetHeight = element.offsetHeight;\n        var scrollHeight = element.scrollHeight;\n        closeToBottom.current = scrollHeight - (scrollTop + offsetHeight) < scrolledUpThreshold;\n        closeToTop.current = scrollTop < scrolledUpThreshold;\n        if (closeToBottom.current) {\n            setHasNewMessages(false);\n        }\n    }, [updateScrollTop, closeToTop, closeToBottom, scrolledUpThreshold]);\n    var onMessageLoadCaptured = useCallback(function () {\n        /**\n         * A load event (emitted by e.g. an <img>) was captured on a message.\n         * In some cases, the loaded asset is larger than the placeholder, which means we have to scroll down.\n         */\n        if (closeToBottom.current && !closeToTop.current) {\n            scrollToBottom();\n        }\n    }, [closeToTop, closeToBottom, scrollToBottom]);\n    return {\n        hasNewMessages: hasNewMessages,\n        listRef: listRef,\n        onMessageLoadCaptured: onMessageLoadCaptured,\n        onScroll: onScroll,\n        scrollToBottom: scrollToBottom,\n        wrapperRect: wrapperRect,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}