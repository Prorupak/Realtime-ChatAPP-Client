{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from 'react';\nimport { ImageDropzone } from 'react-file-utils';\nimport { useCooldownTimer } from './hooks/useCooldownTimer';\nimport { useCreateMessageInputContext } from './hooks/useCreateMessageInputContext';\nimport { useMessageInputState } from './hooks/useMessageInputState';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { MessageInputContextProvider, useMessageInputContext } from '../../context/MessageInputContext';\n\nvar DropzoneInner = function DropzoneInner(_a) {\n  var children = _a.children;\n\n  var _b = useChannelStateContext('DropzoneProvider'),\n      acceptedFiles = _b.acceptedFiles,\n      multipleUploads = _b.multipleUploads;\n\n  var _c = useMessageInputContext('DropzoneProvider'),\n      cooldownRemaining = _c.cooldownRemaining,\n      isUploadEnabled = _c.isUploadEnabled,\n      maxFilesLeft = _c.maxFilesLeft,\n      uploadNewFiles = _c.uploadNewFiles;\n\n  return React.createElement(ImageDropzone, {\n    accept: acceptedFiles,\n    disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining,\n    handleFiles: uploadNewFiles,\n    maxNumberOfFiles: maxFilesLeft,\n    multiple: multipleUploads\n  }, children);\n};\n\nexport var DropzoneProvider = function DropzoneProvider(props) {\n  var cooldownTimerState = useCooldownTimer();\n  var messageInputState = useMessageInputState(props);\n  var messageInputContextValue = useCreateMessageInputContext(__assign(__assign(__assign({}, cooldownTimerState), messageInputState), props));\n  return React.createElement(MessageInputContextProvider, {\n    value: messageInputContextValue\n  }, React.createElement(DropzoneInner, null, props.children));\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/MessageInput/DropzoneProvider.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","ImageDropzone","useCooldownTimer","useCreateMessageInputContext","useMessageInputState","useChannelStateContext","MessageInputContextProvider","useMessageInputContext","DropzoneInner","_a","children","_b","acceptedFiles","multipleUploads","_c","cooldownRemaining","isUploadEnabled","maxFilesLeft","uploadNewFiles","createElement","accept","disabled","handleFiles","maxNumberOfFiles","multiple","DropzoneProvider","props","cooldownTimerState","messageInputState","messageInputContextValue","value"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd;AAAiB,YAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AADJ;AAEH;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAOO,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,4BAAT,QAA6C,sCAA7C;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,2BAAT,EAAsCC,sBAAtC,QAAqE,mCAArE;;AACA,IAAIC,aAAa,GAAG,SAAhBA,aAAgB,CAAUC,EAAV,EAAc;AAC9B,MAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;;AACA,MAAIC,EAAE,GAAGN,sBAAsB,CAAC,kBAAD,CAA/B;AAAA,MAAqDO,aAAa,GAAGD,EAAE,CAACC,aAAxE;AAAA,MAAuFC,eAAe,GAAGF,EAAE,CAACE,eAA5G;;AACA,MAAIC,EAAE,GAAGP,sBAAsB,CAAC,kBAAD,CAA/B;AAAA,MAAqDQ,iBAAiB,GAAGD,EAAE,CAACC,iBAA5E;AAAA,MAA+FC,eAAe,GAAGF,EAAE,CAACE,eAApH;AAAA,MAAqIC,YAAY,GAAGH,EAAE,CAACG,YAAvJ;AAAA,MAAqKC,cAAc,GAAGJ,EAAE,CAACI,cAAzL;;AACA,SAAQlB,KAAK,CAACmB,aAAN,CAAoBlB,aAApB,EAAmC;AAAEmB,IAAAA,MAAM,EAAER,aAAV;AAAyBS,IAAAA,QAAQ,EAAE,CAACL,eAAD,IAAoBC,YAAY,KAAK,CAArC,IAA0C,CAAC,CAACF,iBAA/E;AAAkGO,IAAAA,WAAW,EAAEJ,cAA/G;AAA+HK,IAAAA,gBAAgB,EAAEN,YAAjJ;AAA+JO,IAAAA,QAAQ,EAAEX;AAAzK,GAAnC,EAA+NH,QAA/N,CAAR;AACH,CALD;;AAMA,OAAO,IAAIe,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUC,KAAV,EAAiB;AAC3C,MAAIC,kBAAkB,GAAGzB,gBAAgB,EAAzC;AACA,MAAI0B,iBAAiB,GAAGxB,oBAAoB,CAACsB,KAAD,CAA5C;AACA,MAAIG,wBAAwB,GAAG1B,4BAA4B,CAACjB,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKyC,kBAAL,CAAT,EAAmCC,iBAAnC,CAAT,EAAgEF,KAAhE,CAAT,CAA3D;AACA,SAAQ1B,KAAK,CAACmB,aAAN,CAAoBb,2BAApB,EAAiD;AAAEwB,IAAAA,KAAK,EAAED;AAAT,GAAjD,EACJ7B,KAAK,CAACmB,aAAN,CAAoBX,aAApB,EAAmC,IAAnC,EAAyCkB,KAAK,CAAChB,QAA/C,CADI,CAAR;AAEH,CANM","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { ImageDropzone } from 'react-file-utils';\nimport { useCooldownTimer } from './hooks/useCooldownTimer';\nimport { useCreateMessageInputContext } from './hooks/useCreateMessageInputContext';\nimport { useMessageInputState } from './hooks/useMessageInputState';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { MessageInputContextProvider, useMessageInputContext, } from '../../context/MessageInputContext';\nvar DropzoneInner = function (_a) {\n    var children = _a.children;\n    var _b = useChannelStateContext('DropzoneProvider'), acceptedFiles = _b.acceptedFiles, multipleUploads = _b.multipleUploads;\n    var _c = useMessageInputContext('DropzoneProvider'), cooldownRemaining = _c.cooldownRemaining, isUploadEnabled = _c.isUploadEnabled, maxFilesLeft = _c.maxFilesLeft, uploadNewFiles = _c.uploadNewFiles;\n    return (React.createElement(ImageDropzone, { accept: acceptedFiles, disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining, handleFiles: uploadNewFiles, maxNumberOfFiles: maxFilesLeft, multiple: multipleUploads }, children));\n};\nexport var DropzoneProvider = function (props) {\n    var cooldownTimerState = useCooldownTimer();\n    var messageInputState = useMessageInputState(props);\n    var messageInputContextValue = useCreateMessageInputContext(__assign(__assign(__assign({}, cooldownTimerState), messageInputState), props));\n    return (React.createElement(MessageInputContextProvider, { value: messageInputContextValue },\n        React.createElement(DropzoneInner, null, props.children)));\n};\n"]},"metadata":{},"sourceType":"module"}