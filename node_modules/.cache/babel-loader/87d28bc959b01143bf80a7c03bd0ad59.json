{"ast":null,"code":"import React from 'react';\nimport { archiveFileTypes, codeFileTypes, excelMimeTypes, powerpointMimeTypes, wordMimeTypes } from './dataTypes';\nimport { FileAltIcon, FileArchiveIcon, FileAudioIcon, FileCodeIcon, FileExcelIcon, FileFallbackIcon, FileImageIcon, FilePdfIcon, FilePowerPointIcon, FileVideoIcon, FileWordIcon } from './FileIconSet'; // Partially based on: https://stackoverflow.com/a/4212908/2570866\n\nvar mimeTypeToIconMap = {\n  'application/pdf': FilePdfIcon\n};\n\nfor (var _i = 0, wordMimeTypes_1 = wordMimeTypes; _i < wordMimeTypes_1.length; _i++) {\n  var type = wordMimeTypes_1[_i];\n  mimeTypeToIconMap[type] = FileWordIcon;\n}\n\nfor (var _a = 0, excelMimeTypes_1 = excelMimeTypes; _a < excelMimeTypes_1.length; _a++) {\n  var type = excelMimeTypes_1[_a];\n  mimeTypeToIconMap[type] = FileExcelIcon;\n}\n\nfor (var _b = 0, powerpointMimeTypes_1 = powerpointMimeTypes; _b < powerpointMimeTypes_1.length; _b++) {\n  var type = powerpointMimeTypes_1[_b];\n  mimeTypeToIconMap[type] = FilePowerPointIcon;\n}\n\nfor (var _c = 0, archiveFileTypes_1 = archiveFileTypes; _c < archiveFileTypes_1.length; _c++) {\n  var type = archiveFileTypes_1[_c];\n  mimeTypeToIconMap[type] = FileArchiveIcon;\n}\n\nfor (var _d = 0, codeFileTypes_1 = codeFileTypes; _d < codeFileTypes_1.length; _d++) {\n  var type = codeFileTypes_1[_d];\n  mimeTypeToIconMap[type] = FileCodeIcon;\n}\n\nfunction mimeTypeToIcon(mimeType) {\n  if (mimeType == null) return FileFallbackIcon;\n  var icon = mimeTypeToIconMap[mimeType];\n  if (icon) return icon;\n  if (mimeType.startsWith('audio/')) return FileAudioIcon;\n  if (mimeType.startsWith('video/')) return FileVideoIcon;\n  if (mimeType.startsWith('image/')) return FileImageIcon;\n  if (mimeType.startsWith('text/')) return FileAltIcon;\n  return FileFallbackIcon;\n}\n\nexport var FileIcon = function (props) {\n  var _a = props.big,\n      big = _a === void 0 ? false : _a,\n      mimeType = props.mimeType,\n      _b = props.size,\n      size = _b === void 0 ? 50 : _b,\n      _c = props.sizeSmall,\n      sizeSmall = _c === void 0 ? 20 : _c;\n  var Icon = mimeTypeToIcon(mimeType);\n  return React.createElement(Icon, {\n    size: big ? size : sizeSmall\n  });\n};","map":{"version":3,"sources":["/home/rupak/Desktop/Project/Chat Application/chatApp_client/node_modules/react-file-utils/dist/components/FileIcon.js"],"names":["React","archiveFileTypes","codeFileTypes","excelMimeTypes","powerpointMimeTypes","wordMimeTypes","FileAltIcon","FileArchiveIcon","FileAudioIcon","FileCodeIcon","FileExcelIcon","FileFallbackIcon","FileImageIcon","FilePdfIcon","FilePowerPointIcon","FileVideoIcon","FileWordIcon","mimeTypeToIconMap","_i","wordMimeTypes_1","length","type","_a","excelMimeTypes_1","_b","powerpointMimeTypes_1","_c","archiveFileTypes_1","_d","codeFileTypes_1","mimeTypeToIcon","mimeType","icon","startsWith","FileIcon","props","big","size","sizeSmall","Icon","createElement"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { archiveFileTypes, codeFileTypes, excelMimeTypes, powerpointMimeTypes, wordMimeTypes, } from './dataTypes';\nimport { FileAltIcon, FileArchiveIcon, FileAudioIcon, FileCodeIcon, FileExcelIcon, FileFallbackIcon, FileImageIcon, FilePdfIcon, FilePowerPointIcon, FileVideoIcon, FileWordIcon, } from './FileIconSet';\n// Partially based on: https://stackoverflow.com/a/4212908/2570866\nvar mimeTypeToIconMap = {\n    'application/pdf': FilePdfIcon,\n};\nfor (var _i = 0, wordMimeTypes_1 = wordMimeTypes; _i < wordMimeTypes_1.length; _i++) {\n    var type = wordMimeTypes_1[_i];\n    mimeTypeToIconMap[type] = FileWordIcon;\n}\nfor (var _a = 0, excelMimeTypes_1 = excelMimeTypes; _a < excelMimeTypes_1.length; _a++) {\n    var type = excelMimeTypes_1[_a];\n    mimeTypeToIconMap[type] = FileExcelIcon;\n}\nfor (var _b = 0, powerpointMimeTypes_1 = powerpointMimeTypes; _b < powerpointMimeTypes_1.length; _b++) {\n    var type = powerpointMimeTypes_1[_b];\n    mimeTypeToIconMap[type] = FilePowerPointIcon;\n}\nfor (var _c = 0, archiveFileTypes_1 = archiveFileTypes; _c < archiveFileTypes_1.length; _c++) {\n    var type = archiveFileTypes_1[_c];\n    mimeTypeToIconMap[type] = FileArchiveIcon;\n}\nfor (var _d = 0, codeFileTypes_1 = codeFileTypes; _d < codeFileTypes_1.length; _d++) {\n    var type = codeFileTypes_1[_d];\n    mimeTypeToIconMap[type] = FileCodeIcon;\n}\nfunction mimeTypeToIcon(mimeType) {\n    if (mimeType == null)\n        return FileFallbackIcon;\n    var icon = mimeTypeToIconMap[mimeType];\n    if (icon)\n        return icon;\n    if (mimeType.startsWith('audio/'))\n        return FileAudioIcon;\n    if (mimeType.startsWith('video/'))\n        return FileVideoIcon;\n    if (mimeType.startsWith('image/'))\n        return FileImageIcon;\n    if (mimeType.startsWith('text/'))\n        return FileAltIcon;\n    return FileFallbackIcon;\n}\nexport var FileIcon = function (props) {\n    var _a = props.big, big = _a === void 0 ? false : _a, mimeType = props.mimeType, _b = props.size, size = _b === void 0 ? 50 : _b, _c = props.sizeSmall, sizeSmall = _c === void 0 ? 20 : _c;\n    var Icon = mimeTypeToIcon(mimeType);\n    return React.createElement(Icon, { size: big ? size : sizeSmall });\n};\n"]},"metadata":{},"sourceType":"module"}