{"ast":null,"code":"import React from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { CooldownTimer as DefaultCooldownTimer } from './hooks/useCooldownTimer';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIconFlat as DefaultFileUploadIcon, SendButton as DefaultSendButton } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nexport var MessageInputSmall = function MessageInputSmall() {\n  var _a = useChannelStateContext('MessageInputSmall'),\n      acceptedFiles = _a.acceptedFiles,\n      multipleUploads = _a.multipleUploads;\n\n  var t = useTranslationContext('MessageInputSmall').t;\n\n  var _b = useMessageInputContext('MessageInputSmall'),\n      closeEmojiPicker = _b.closeEmojiPicker,\n      cooldownInterval = _b.cooldownInterval,\n      cooldownRemaining = _b.cooldownRemaining,\n      emojiPickerIsOpen = _b.emojiPickerIsOpen,\n      handleEmojiKeyDown = _b.handleEmojiKeyDown,\n      handleSubmit = _b.handleSubmit,\n      isUploadEnabled = _b.isUploadEnabled,\n      maxFilesLeft = _b.maxFilesLeft,\n      openEmojiPicker = _b.openEmojiPicker,\n      setCooldownRemaining = _b.setCooldownRemaining,\n      uploadNewFiles = _b.uploadNewFiles;\n\n  var _c = useComponentContext('MessageInputSmall'),\n      _d = _c.CooldownTimer,\n      CooldownTimer = _d === void 0 ? DefaultCooldownTimer : _d,\n      _e = _c.EmojiIcon,\n      EmojiIcon = _e === void 0 ? DefaultEmojiIcon : _e,\n      _f = _c.FileUploadIcon,\n      FileUploadIcon = _f === void 0 ? DefaultFileUploadIcon : _f,\n      _g = _c.SendButton,\n      SendButton = _g === void 0 ? DefaultSendButton : _g;\n\n  return React.createElement(\"div\", {\n    className: 'str-chat__small-message-input__wrapper'\n  }, React.createElement(ImageDropzone, {\n    accept: acceptedFiles,\n    disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining,\n    handleFiles: uploadNewFiles,\n    maxNumberOfFiles: maxFilesLeft,\n    multiple: multipleUploads\n  }, React.createElement(\"div\", {\n    className: \"str-chat__small-message-input \" + (SendButton ? 'str-chat__small-message-input--send-button-active' : null)\n  }, React.createElement(\"div\", {\n    className: 'str-chat__small-message-input--textarea-wrapper'\n  }, isUploadEnabled && React.createElement(UploadsPreview, null), React.createElement(ChatAutoComplete, null), cooldownRemaining ? React.createElement(\"div\", {\n    className: 'str-chat__input-small-cooldown'\n  }, React.createElement(CooldownTimer, {\n    cooldownInterval: cooldownInterval,\n    setCooldownRemaining: setCooldownRemaining\n  })) : React.createElement(React.Fragment, null, isUploadEnabled && React.createElement(\"div\", {\n    className: 'str-chat__fileupload-wrapper',\n    \"data-testid\": 'fileinput'\n  }, React.createElement(Tooltip, null, maxFilesLeft ? t('Attach files') : t(\"You've reached the maximum number of files\")), React.createElement(FileUploadButton, {\n    accepts: acceptedFiles,\n    disabled: maxFilesLeft === 0,\n    handleFiles: uploadNewFiles,\n    multiple: multipleUploads\n  }, React.createElement(\"span\", {\n    className: 'str-chat__small-message-input-fileupload'\n  }, React.createElement(FileUploadIcon, null)))), React.createElement(\"div\", {\n    className: 'str-chat__emojiselect-wrapper'\n  }, React.createElement(Tooltip, null, emojiPickerIsOpen ? t('Close emoji picker') : t('Open emoji picker')), React.createElement(\"span\", {\n    className: 'str-chat__small-message-input-emojiselect',\n    onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker,\n    onKeyDown: handleEmojiKeyDown,\n    role: 'button',\n    tabIndex: 0\n  }, React.createElement(EmojiIcon, null)))), React.createElement(EmojiPicker, {\n    small: true\n  })), !cooldownRemaining && React.createElement(SendButton, {\n    sendMessage: handleSubmit\n  }))));\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/MessageInput/MessageInputSmall.js"],"names":["React","FileUploadButton","ImageDropzone","EmojiPicker","CooldownTimer","DefaultCooldownTimer","EmojiIconSmall","DefaultEmojiIcon","FileUploadIconFlat","DefaultFileUploadIcon","SendButton","DefaultSendButton","UploadsPreview","ChatAutoComplete","Tooltip","useChannelStateContext","useTranslationContext","useMessageInputContext","useComponentContext","MessageInputSmall","_a","acceptedFiles","multipleUploads","t","_b","closeEmojiPicker","cooldownInterval","cooldownRemaining","emojiPickerIsOpen","handleEmojiKeyDown","handleSubmit","isUploadEnabled","maxFilesLeft","openEmojiPicker","setCooldownRemaining","uploadNewFiles","_c","_d","_e","EmojiIcon","_f","FileUploadIcon","_g","createElement","className","accept","disabled","handleFiles","maxNumberOfFiles","multiple","Fragment","accepts","onClick","onKeyDown","role","tabIndex","small","sendMessage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { CooldownTimer as DefaultCooldownTimer } from './hooks/useCooldownTimer';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIconFlat as DefaultFileUploadIcon, SendButton as DefaultSendButton, } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nexport var MessageInputSmall = function () {\n    var _a = useChannelStateContext('MessageInputSmall'), acceptedFiles = _a.acceptedFiles, multipleUploads = _a.multipleUploads;\n    var t = useTranslationContext('MessageInputSmall').t;\n    var _b = useMessageInputContext('MessageInputSmall'), closeEmojiPicker = _b.closeEmojiPicker, cooldownInterval = _b.cooldownInterval, cooldownRemaining = _b.cooldownRemaining, emojiPickerIsOpen = _b.emojiPickerIsOpen, handleEmojiKeyDown = _b.handleEmojiKeyDown, handleSubmit = _b.handleSubmit, isUploadEnabled = _b.isUploadEnabled, maxFilesLeft = _b.maxFilesLeft, openEmojiPicker = _b.openEmojiPicker, setCooldownRemaining = _b.setCooldownRemaining, uploadNewFiles = _b.uploadNewFiles;\n    var _c = useComponentContext('MessageInputSmall'), _d = _c.CooldownTimer, CooldownTimer = _d === void 0 ? DefaultCooldownTimer : _d, _e = _c.EmojiIcon, EmojiIcon = _e === void 0 ? DefaultEmojiIcon : _e, _f = _c.FileUploadIcon, FileUploadIcon = _f === void 0 ? DefaultFileUploadIcon : _f, _g = _c.SendButton, SendButton = _g === void 0 ? DefaultSendButton : _g;\n    return (React.createElement(\"div\", { className: 'str-chat__small-message-input__wrapper' },\n        React.createElement(ImageDropzone, { accept: acceptedFiles, disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining, handleFiles: uploadNewFiles, maxNumberOfFiles: maxFilesLeft, multiple: multipleUploads },\n            React.createElement(\"div\", { className: \"str-chat__small-message-input \" + (SendButton ? 'str-chat__small-message-input--send-button-active' : null) },\n                React.createElement(\"div\", { className: 'str-chat__small-message-input--textarea-wrapper' },\n                    isUploadEnabled && React.createElement(UploadsPreview, null),\n                    React.createElement(ChatAutoComplete, null),\n                    cooldownRemaining ? (React.createElement(\"div\", { className: 'str-chat__input-small-cooldown' },\n                        React.createElement(CooldownTimer, { cooldownInterval: cooldownInterval, setCooldownRemaining: setCooldownRemaining }))) : (React.createElement(React.Fragment, null,\n                        isUploadEnabled && (React.createElement(\"div\", { className: 'str-chat__fileupload-wrapper', \"data-testid\": 'fileinput' },\n                            React.createElement(Tooltip, null, maxFilesLeft\n                                ? t('Attach files')\n                                : t(\"You've reached the maximum number of files\")),\n                            React.createElement(FileUploadButton, { accepts: acceptedFiles, disabled: maxFilesLeft === 0, handleFiles: uploadNewFiles, multiple: multipleUploads },\n                                React.createElement(\"span\", { className: 'str-chat__small-message-input-fileupload' },\n                                    React.createElement(FileUploadIcon, null))))),\n                        React.createElement(\"div\", { className: 'str-chat__emojiselect-wrapper' },\n                            React.createElement(Tooltip, null, emojiPickerIsOpen ? t('Close emoji picker') : t('Open emoji picker')),\n                            React.createElement(\"span\", { className: 'str-chat__small-message-input-emojiselect', onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker, onKeyDown: handleEmojiKeyDown, role: 'button', tabIndex: 0 },\n                                React.createElement(EmojiIcon, null))))),\n                    React.createElement(EmojiPicker, { small: true })),\n                !cooldownRemaining && React.createElement(SendButton, { sendMessage: handleSubmit })))));\n};\n"]},"metadata":{},"sourceType":"module"}