{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { getWholeChar } from '../../utils';\n/**\n * A round avatar image with fallback to username's first letter\n */\n\nexport var Avatar = function (props) {\n  var image = props.image,\n      name = props.name,\n      _a = props.onClick,\n      onClick = _a === void 0 ? function () {\n    return undefined;\n  } : _a,\n      _b = props.onMouseOver,\n      onMouseOver = _b === void 0 ? function () {\n    return undefined;\n  } : _b,\n      _c = props.shape,\n      shape = _c === void 0 ? 'circle' : _c,\n      _d = props.size,\n      size = _d === void 0 ? 32 : _d;\n\n  var _e = useState(false),\n      error = _e[0],\n      setError = _e[1];\n\n  var _f = useState(false),\n      loaded = _f[0],\n      setLoaded = _f[1];\n\n  useEffect(function () {\n    setError(false);\n    setLoaded(false);\n  }, [image]);\n  var nameStr = (name === null || name === void 0 ? void 0 : name.toString()) || '';\n  var initials = getWholeChar(nameStr, 0);\n  return React.createElement(\"div\", {\n    className: \"str-chat__avatar str-chat__avatar--\" + shape,\n    \"data-testid\": 'avatar',\n    onClick: onClick,\n    onMouseOver: onMouseOver,\n    style: {\n      flexBasis: size + \"px\",\n      fontSize: size / 2 + \"px\",\n      height: size + \"px\",\n      lineHeight: size + \"px\",\n      width: size + \"px\"\n    },\n    title: name\n  }, image && !error ? React.createElement(\"img\", {\n    alt: initials,\n    className: \"str-chat__avatar-image\" + (loaded ? ' str-chat__avatar-image--loaded' : ''),\n    \"data-testid\": 'avatar-img',\n    onError: function () {\n      return setError(true);\n    },\n    onLoad: function () {\n      return setLoaded(true);\n    },\n    src: image,\n    style: {\n      flexBasis: size + \"px\",\n      height: size + \"px\",\n      objectFit: 'cover',\n      width: size + \"px\"\n    }\n  }) : React.createElement(\"div\", {\n    className: 'str-chat__avatar-fallback',\n    \"data-testid\": 'avatar-fallback'\n  }, initials));\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/Avatar/Avatar.js"],"names":["React","useEffect","useState","getWholeChar","Avatar","props","image","name","_a","onClick","undefined","_b","onMouseOver","_c","shape","_d","size","_e","error","setError","_f","loaded","setLoaded","nameStr","toString","initials","createElement","className","style","flexBasis","fontSize","height","lineHeight","width","title","alt","onError","onLoad","src","objectFit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getWholeChar } from '../../utils';\n/**\n * A round avatar image with fallback to username's first letter\n */\nexport var Avatar = function (props) {\n    var image = props.image, name = props.name, _a = props.onClick, onClick = _a === void 0 ? function () { return undefined; } : _a, _b = props.onMouseOver, onMouseOver = _b === void 0 ? function () { return undefined; } : _b, _c = props.shape, shape = _c === void 0 ? 'circle' : _c, _d = props.size, size = _d === void 0 ? 32 : _d;\n    var _e = useState(false), error = _e[0], setError = _e[1];\n    var _f = useState(false), loaded = _f[0], setLoaded = _f[1];\n    useEffect(function () {\n        setError(false);\n        setLoaded(false);\n    }, [image]);\n    var nameStr = (name === null || name === void 0 ? void 0 : name.toString()) || '';\n    var initials = getWholeChar(nameStr, 0);\n    return (React.createElement(\"div\", { className: \"str-chat__avatar str-chat__avatar--\" + shape, \"data-testid\": 'avatar', onClick: onClick, onMouseOver: onMouseOver, style: {\n            flexBasis: size + \"px\",\n            fontSize: size / 2 + \"px\",\n            height: size + \"px\",\n            lineHeight: size + \"px\",\n            width: size + \"px\",\n        }, title: name }, image && !error ? (React.createElement(\"img\", { alt: initials, className: \"str-chat__avatar-image\" + (loaded ? ' str-chat__avatar-image--loaded' : ''), \"data-testid\": 'avatar-img', onError: function () { return setError(true); }, onLoad: function () { return setLoaded(true); }, src: image, style: {\n            flexBasis: size + \"px\",\n            height: size + \"px\",\n            objectFit: 'cover',\n            width: size + \"px\",\n        } })) : (React.createElement(\"div\", { className: 'str-chat__avatar-fallback', \"data-testid\": 'avatar-fallback' }, initials))));\n};\n"]},"metadata":{},"sourceType":"module"}