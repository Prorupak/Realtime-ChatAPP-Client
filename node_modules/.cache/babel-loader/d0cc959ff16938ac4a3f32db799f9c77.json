{"ast":null,"code":"import { CommandItem } from '../../CommandItem/CommandItem';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nexport var useCommandTrigger = function useCommandTrigger() {\n  var channelConfig = useChannelStateContext('useCommandTrigger').channelConfig;\n  var commands = channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.commands;\n  return {\n    component: CommandItem,\n    dataProvider: function dataProvider(query, text, onReady) {\n      if (text.indexOf('/') !== 0 || !commands) {\n        return [];\n      }\n\n      var selectedCommands = commands.filter(function (command) {\n        var _a;\n\n        return ((_a = command.name) === null || _a === void 0 ? void 0 : _a.indexOf(query)) !== -1;\n      }); // sort alphabetically unless the you're matching the first char\n\n      selectedCommands.sort(function (a, b) {\n        var _a, _b;\n\n        var nameA = (_a = a.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n        var nameB = (_b = b.name) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n\n        if ((nameA === null || nameA === void 0 ? void 0 : nameA.indexOf(query)) === 0) {\n          nameA = \"0\" + nameA;\n        }\n\n        if ((nameB === null || nameB === void 0 ? void 0 : nameB.indexOf(query)) === 0) {\n          nameB = \"0\" + nameB;\n        } // Should confirm possible null / undefined when TS is fully implemented\n\n\n        if (nameA != null && nameB != null) {\n          if (nameA < nameB) {\n            return -1;\n          }\n\n          if (nameA > nameB) {\n            return 1;\n          }\n        }\n\n        return 0;\n      });\n      var result = selectedCommands.slice(0, 10);\n      if (onReady) onReady(result.filter(function (result) {\n        return result.name !== undefined;\n      }), query);\n      return result;\n    },\n    output: function output(entity) {\n      return {\n        caretPosition: 'next',\n        key: entity.name,\n        text: \"/\" + entity.name\n      };\n    }\n  };\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useCommandTrigger.js"],"names":["CommandItem","useChannelStateContext","useCommandTrigger","channelConfig","commands","component","dataProvider","query","text","onReady","indexOf","selectedCommands","filter","command","_a","name","sort","a","b","_b","nameA","toLowerCase","nameB","result","slice","undefined","output","entity","caretPosition","key"],"mappings":"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","sourcesContent":["import { CommandItem } from '../../CommandItem/CommandItem';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nexport var useCommandTrigger = function () {\n    var channelConfig = useChannelStateContext('useCommandTrigger').channelConfig;\n    var commands = channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.commands;\n    return {\n        component: CommandItem,\n        dataProvider: function (query, text, onReady) {\n            if (text.indexOf('/') !== 0 || !commands) {\n                return [];\n            }\n            var selectedCommands = commands.filter(function (command) { var _a; return ((_a = command.name) === null || _a === void 0 ? void 0 : _a.indexOf(query)) !== -1; });\n            // sort alphabetically unless the you're matching the first char\n            selectedCommands.sort(function (a, b) {\n                var _a, _b;\n                var nameA = (_a = a.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n                var nameB = (_b = b.name) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n                if ((nameA === null || nameA === void 0 ? void 0 : nameA.indexOf(query)) === 0) {\n                    nameA = \"0\" + nameA;\n                }\n                if ((nameB === null || nameB === void 0 ? void 0 : nameB.indexOf(query)) === 0) {\n                    nameB = \"0\" + nameB;\n                }\n                // Should confirm possible null / undefined when TS is fully implemented\n                if (nameA != null && nameB != null) {\n                    if (nameA < nameB) {\n                        return -1;\n                    }\n                    if (nameA > nameB) {\n                        return 1;\n                    }\n                }\n                return 0;\n            });\n            var result = selectedCommands.slice(0, 10);\n            if (onReady)\n                onReady(result.filter(function (result) { return result.name !== undefined; }), query);\n            return result;\n        },\n        output: function (entity) { return ({\n            caretPosition: 'next',\n            key: entity.name,\n            text: \"/\" + entity.name,\n        }); },\n    };\n};\n"]},"metadata":{},"sourceType":"module"}