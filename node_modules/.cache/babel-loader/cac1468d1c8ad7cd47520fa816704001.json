{"ast":null,"code":"import React from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\n/**\n * UI component for mentions rendered in suggestion list\n */\n\nvar UnMemoizedUserItem = function (props) {\n  var _a = props.Avatar,\n      Avatar = _a === void 0 ? DefaultAvatar : _a,\n      entity = props.entity;\n  var hasEntity = Object.keys(entity).length;\n  var itemParts = entity === null || entity === void 0 ? void 0 : entity.itemNameParts;\n\n  var renderName = function () {\n    if (!hasEntity) return null;\n    return hasEntity && itemParts.parts.map(function (part, i) {\n      return part.toLowerCase() === itemParts.match.toLowerCase() ? React.createElement(\"span\", {\n        className: 'str-chat__emoji-item--highlight',\n        key: \"part-\" + i\n      }, part) : React.createElement(\"span\", {\n        className: 'str-chat__emoji-item--part',\n        key: \"part-\" + i\n      }, part);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: 'str-chat__user-item'\n  }, React.createElement(Avatar, {\n    image: entity.image,\n    name: entity.name || entity.id,\n    size: 20\n  }), React.createElement(\"span\", {\n    className: 'str-chat__user-item--name',\n    \"data-testid\": 'user-item-name'\n  }, renderName()));\n};\n\nexport var UserItem = React.memo(UnMemoizedUserItem);","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/UserItem/UserItem.js"],"names":["React","Avatar","DefaultAvatar","UnMemoizedUserItem","props","_a","entity","hasEntity","Object","keys","length","itemParts","itemNameParts","renderName","parts","map","part","i","toLowerCase","match","createElement","className","key","image","name","id","size","UserItem","memo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAM,IAAIC,aAAnB,QAAwC,WAAxC;AACA;AACA;AACA;;AACA,IAAIC,kBAAkB,GAAG,UAAUC,KAAV,EAAiB;AACtC,MAAIC,EAAE,GAAGD,KAAK,CAACH,MAAf;AAAA,MAAuBA,MAAM,GAAGI,EAAE,KAAK,KAAK,CAAZ,GAAgBH,aAAhB,GAAgCG,EAAhE;AAAA,MAAoEC,MAAM,GAAGF,KAAK,CAACE,MAAnF;AACA,MAAIC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,MAApC;AACA,MAAIC,SAAS,GAAGL,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACM,aAAvE;;AACA,MAAIC,UAAU,GAAG,YAAY;AACzB,QAAI,CAACN,SAAL,EACI,OAAO,IAAP;AACJ,WAAQA,SAAS,IACbI,SAAS,CAACG,KAAV,CAAgBC,GAAhB,CAAoB,UAAUC,IAAV,EAAgBC,CAAhB,EAAmB;AACnC,aAAOD,IAAI,CAACE,WAAL,OAAuBP,SAAS,CAACQ,KAAV,CAAgBD,WAAhB,EAAvB,GAAwDlB,KAAK,CAACoB,aAAN,CAAoB,MAApB,EAA4B;AAAEC,QAAAA,SAAS,EAAE,iCAAb;AAAgDC,QAAAA,GAAG,EAAE,UAAUL;AAA/D,OAA5B,EAAgGD,IAAhG,CAAxD,GAAkKhB,KAAK,CAACoB,aAAN,CAAoB,MAApB,EAA4B;AAAEC,QAAAA,SAAS,EAAE,4BAAb;AAA2CC,QAAAA,GAAG,EAAE,UAAUL;AAA1D,OAA5B,EAA2FD,IAA3F,CAAzK;AACH,KAFD,CADJ;AAIH,GAPD;;AAQA,SAAQhB,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACJrB,KAAK,CAACoB,aAAN,CAAoBnB,MAApB,EAA4B;AAAEsB,IAAAA,KAAK,EAAEjB,MAAM,CAACiB,KAAhB;AAAuBC,IAAAA,IAAI,EAAElB,MAAM,CAACkB,IAAP,IAAelB,MAAM,CAACmB,EAAnD;AAAuDC,IAAAA,IAAI,EAAE;AAA7D,GAA5B,CADI,EAEJ1B,KAAK,CAACoB,aAAN,CAAoB,MAApB,EAA4B;AAAEC,IAAAA,SAAS,EAAE,2BAAb;AAA0C,mBAAe;AAAzD,GAA5B,EAAyGR,UAAU,EAAnH,CAFI,CAAR;AAGH,CAfD;;AAgBA,OAAO,IAAIc,QAAQ,GAAG3B,KAAK,CAAC4B,IAAN,CAAWzB,kBAAX,CAAf","sourcesContent":["import React from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\n/**\n * UI component for mentions rendered in suggestion list\n */\nvar UnMemoizedUserItem = function (props) {\n    var _a = props.Avatar, Avatar = _a === void 0 ? DefaultAvatar : _a, entity = props.entity;\n    var hasEntity = Object.keys(entity).length;\n    var itemParts = entity === null || entity === void 0 ? void 0 : entity.itemNameParts;\n    var renderName = function () {\n        if (!hasEntity)\n            return null;\n        return (hasEntity &&\n            itemParts.parts.map(function (part, i) {\n                return part.toLowerCase() === itemParts.match.toLowerCase() ? (React.createElement(\"span\", { className: 'str-chat__emoji-item--highlight', key: \"part-\" + i }, part)) : (React.createElement(\"span\", { className: 'str-chat__emoji-item--part', key: \"part-\" + i }, part));\n            }));\n    };\n    return (React.createElement(\"div\", { className: 'str-chat__user-item' },\n        React.createElement(Avatar, { image: entity.image, name: entity.name || entity.id, size: 20 }),\n        React.createElement(\"span\", { className: 'str-chat__user-item--name', \"data-testid\": 'user-item-name' }, renderName())));\n};\nexport var UserItem = React.memo(UnMemoizedUserItem);\n"]},"metadata":{},"sourceType":"module"}