{"ast":null,"code":"import React, { useRef } from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\n\nvar UnMemoizedChannelPreviewMessenger = function (props) {\n  var _a, _b;\n\n  var active = props.active,\n      _c = props.Avatar,\n      Avatar = _c === void 0 ? DefaultAvatar : _c,\n      channel = props.channel,\n      displayImage = props.displayImage,\n      displayTitle = props.displayTitle,\n      latestMessage = props.latestMessage,\n      setActiveChannel = props.setActiveChannel,\n      unread = props.unread,\n      watchers = props.watchers;\n  var channelPreviewButton = useRef(null);\n  var activeClass = active ? 'str-chat__channel-preview-messenger--active' : '';\n  var unreadClass = unread && unread >= 1 ? 'str-chat__channel-preview-messenger--unread' : '';\n  var avatarName = displayTitle || ((_b = (_a = channel.state.messages[channel.state.messages.length - 1]) === null || _a === void 0 ? void 0 : _a.user) === null || _b === void 0 ? void 0 : _b.id);\n\n  var onSelectChannel = function () {\n    if (setActiveChannel) {\n      setActiveChannel(channel, watchers);\n    }\n\n    if (channelPreviewButton === null || channelPreviewButton === void 0 ? void 0 : channelPreviewButton.current) {\n      channelPreviewButton.current.blur();\n    }\n  };\n\n  return React.createElement(\"button\", {\n    className: \"str-chat__channel-preview-messenger \" + unreadClass + \" \" + activeClass,\n    \"data-testid\": 'channel-preview-button',\n    onClick: onSelectChannel,\n    ref: channelPreviewButton\n  }, React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--left'\n  }, React.createElement(Avatar, {\n    image: displayImage,\n    name: avatarName,\n    size: 40\n  })), React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--right'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--name'\n  }, React.createElement(\"span\", null, displayTitle)), React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--last-message'\n  }, latestMessage)));\n};\n/**\n * Used as preview component for channel item in [ChannelList](#channellist) component.\n * Its best suited for messenger type chat.\n */\n\n\nexport var ChannelPreviewMessenger = React.memo(UnMemoizedChannelPreviewMessenger);","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/ChannelPreview/ChannelPreviewMessenger.js"],"names":["React","useRef","Avatar","DefaultAvatar","UnMemoizedChannelPreviewMessenger","props","_a","_b","active","_c","channel","displayImage","displayTitle","latestMessage","setActiveChannel","unread","watchers","channelPreviewButton","activeClass","unreadClass","avatarName","state","messages","length","user","id","onSelectChannel","current","blur","createElement","className","onClick","ref","image","name","size","ChannelPreviewMessenger","memo"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nvar UnMemoizedChannelPreviewMessenger = function (props) {\n    var _a, _b;\n    var active = props.active, _c = props.Avatar, Avatar = _c === void 0 ? DefaultAvatar : _c, channel = props.channel, displayImage = props.displayImage, displayTitle = props.displayTitle, latestMessage = props.latestMessage, setActiveChannel = props.setActiveChannel, unread = props.unread, watchers = props.watchers;\n    var channelPreviewButton = useRef(null);\n    var activeClass = active ? 'str-chat__channel-preview-messenger--active' : '';\n    var unreadClass = unread && unread >= 1 ? 'str-chat__channel-preview-messenger--unread' : '';\n    var avatarName = displayTitle || ((_b = (_a = channel.state.messages[channel.state.messages.length - 1]) === null || _a === void 0 ? void 0 : _a.user) === null || _b === void 0 ? void 0 : _b.id);\n    var onSelectChannel = function () {\n        if (setActiveChannel) {\n            setActiveChannel(channel, watchers);\n        }\n        if (channelPreviewButton === null || channelPreviewButton === void 0 ? void 0 : channelPreviewButton.current) {\n            channelPreviewButton.current.blur();\n        }\n    };\n    return (React.createElement(\"button\", { className: \"str-chat__channel-preview-messenger \" + unreadClass + \" \" + activeClass, \"data-testid\": 'channel-preview-button', onClick: onSelectChannel, ref: channelPreviewButton },\n        React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--left' },\n            React.createElement(Avatar, { image: displayImage, name: avatarName, size: 40 })),\n        React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--right' },\n            React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--name' },\n                React.createElement(\"span\", null, displayTitle)),\n            React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--last-message' }, latestMessage))));\n};\n/**\n * Used as preview component for channel item in [ChannelList](#channellist) component.\n * Its best suited for messenger type chat.\n */\nexport var ChannelPreviewMessenger = React.memo(UnMemoizedChannelPreviewMessenger);\n"]},"metadata":{},"sourceType":"module"}