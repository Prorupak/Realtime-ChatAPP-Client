{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useEffect, useRef } from 'react';\nimport { FixedHeightMessage } from '../Message/FixedHeightMessage';\nimport { Message } from '../Message/Message';\nimport { MessageInput } from '../MessageInput/MessageInput';\nimport { MessageInputSmall } from '../MessageInput/MessageInputSmall';\nimport { MessageList } from '../MessageList/MessageList';\nimport { VirtualizedMessageList } from '../MessageList/VirtualizedMessageList';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\n/**\n * The Thread component renders a parent Message with a list of replies\n */\n\nexport var Thread = function Thread(props) {\n  var _a = useChannelStateContext('Thread'),\n      channel = _a.channel,\n      channelConfig = _a.channelConfig,\n      thread = _a.thread;\n\n  if (!thread || (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.replies) === false) return null; // The wrapper ensures a key variable is set and the component recreates on thread switch\n\n  return React.createElement(ThreadInner, __assign({}, props, {\n    key: \"thread-\" + thread.id + \"-\" + (channel === null || channel === void 0 ? void 0 : channel.cid)\n  }));\n};\n\nvar DefaultThreadHeader = function DefaultThreadHeader(props) {\n  var closeThread = props.closeThread,\n      thread = props.thread;\n  var t = useTranslationContext('Thread').t;\n\n  var getReplyCount = function getReplyCount() {\n    if (!thread.reply_count) return '';\n    if (thread.reply_count === 1) return t('1 reply');\n    return t('{{ replyCount }} replies', {\n      replyCount: thread.reply_count\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: 'str-chat__thread-header'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__thread-header-details'\n  }, React.createElement(\"strong\", null, t('Thread')), React.createElement(\"small\", null, getReplyCount())), React.createElement(\"button\", {\n    className: 'str-chat__square-button',\n    \"data-testid\": 'close-button',\n    onClick: function onClick(event) {\n      return closeThread(event);\n    }\n  }, React.createElement(\"svg\", {\n    height: '10',\n    width: '10',\n    xmlns: 'http://www.w3.org/2000/svg'\n  }, React.createElement(\"path\", {\n    d: 'M9.916 1.027L8.973.084 5 4.058 1.027.084l-.943.943L4.058 5 .084 8.973l.943.943L5 5.942l3.973 3.974.943-.943L5.942 5z',\n    fillRule: 'evenodd'\n  }))));\n};\n\nvar DefaultThreadStart = function DefaultThreadStart() {\n  var t = useTranslationContext('Thread').t;\n  return React.createElement(\"div\", {\n    className: 'str-chat__thread-start'\n  }, t('Start of a new thread'));\n};\n\nvar ThreadInner = function ThreadInner(props) {\n  var additionalMessageInputProps = props.additionalMessageInputProps,\n      additionalMessageListProps = props.additionalMessageListProps,\n      additionalParentMessageProps = props.additionalParentMessageProps,\n      additionalVirtualizedMessageListProps = props.additionalVirtualizedMessageListProps,\n      _a = props.autoFocus,\n      autoFocus = _a === void 0 ? true : _a,\n      _b = props.fullWidth,\n      fullWidth = _b === void 0 ? false : _b,\n      PropInput = props.Input,\n      PropMessage = props.Message,\n      virtualized = props.virtualized;\n\n  var _c = useChannelStateContext('Thread'),\n      thread = _c.thread,\n      threadHasMore = _c.threadHasMore,\n      threadLoadingMore = _c.threadLoadingMore,\n      threadMessages = _c.threadMessages;\n\n  var _d = useChannelActionContext('Thread'),\n      closeThread = _d.closeThread,\n      loadMoreThread = _d.loadMoreThread;\n\n  var customClasses = useChatContext('Thread').customClasses;\n\n  var _e = useComponentContext('Thread'),\n      ContextInput = _e.ThreadInput,\n      ContextMessage = _e.Message,\n      _f = _e.ThreadHeader,\n      ThreadHeader = _f === void 0 ? DefaultThreadHeader : _f,\n      _g = _e.ThreadStart,\n      ThreadStart = _g === void 0 ? DefaultThreadStart : _g,\n      _h = _e.VirtualMessage,\n      VirtualMessage = _h === void 0 ? FixedHeightMessage : _h;\n\n  var messageList = useRef(null);\n  var ThreadInput = PropInput || (additionalMessageInputProps === null || additionalMessageInputProps === void 0 ? void 0 : additionalMessageInputProps.Input) || ContextInput || MessageInputSmall;\n  var ThreadMessage = PropMessage || (additionalMessageListProps === null || additionalMessageListProps === void 0 ? void 0 : additionalMessageListProps.Message);\n  var FallbackMessage = virtualized ? VirtualMessage : ContextMessage;\n  var ThreadMessageList = virtualized ? VirtualizedMessageList : MessageList;\n  useEffect(function () {\n    if ((thread === null || thread === void 0 ? void 0 : thread.id) && (thread === null || thread === void 0 ? void 0 : thread.reply_count)) {\n      loadMoreThread();\n    }\n  }, []);\n  useEffect(function () {\n    if (messageList.current && (threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length)) {\n      var _a = messageList.current,\n          clientHeight = _a.clientHeight,\n          scrollHeight = _a.scrollHeight,\n          scrollTop = _a.scrollTop;\n      var scrollDown = clientHeight + scrollTop !== scrollHeight;\n\n      if (scrollDown) {\n        messageList.current.scrollTop = scrollHeight - clientHeight;\n      }\n    }\n  }, [threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length]);\n  if (!thread) return null;\n  var threadClass = (customClasses === null || customClasses === void 0 ? void 0 : customClasses.thread) || 'str-chat__thread';\n  return React.createElement(\"div\", {\n    className: threadClass + \" \" + (fullWidth ? 'str-chat__thread--full' : '')\n  }, React.createElement(ThreadHeader, {\n    closeThread: closeThread,\n    thread: thread\n  }), React.createElement(\"div\", {\n    className: 'str-chat__thread-list',\n    ref: messageList\n  }, React.createElement(Message, __assign({\n    initialMessage: true,\n    message: thread,\n    Message: ThreadMessage || FallbackMessage,\n    threadList: true\n  }, additionalParentMessageProps)), React.createElement(ThreadStart, null), React.createElement(ThreadMessageList, __assign({\n    hasMore: threadHasMore,\n    loadingMore: threadLoadingMore,\n    loadMore: loadMoreThread,\n    Message: ThreadMessage || FallbackMessage,\n    messages: threadMessages || [],\n    threadList: true\n  }, virtualized ? additionalVirtualizedMessageListProps : additionalMessageListProps))), React.createElement(MessageInput, __assign({\n    focus: autoFocus,\n    Input: ThreadInput,\n    parent: thread,\n    publishTypingEvent: false\n  }, additionalMessageInputProps)));\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/Thread/Thread.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useEffect","useRef","FixedHeightMessage","Message","MessageInput","MessageInputSmall","MessageList","VirtualizedMessageList","useChannelActionContext","useChannelStateContext","useChatContext","useComponentContext","useTranslationContext","Thread","props","_a","channel","channelConfig","thread","replies","createElement","ThreadInner","key","id","cid","DefaultThreadHeader","closeThread","getReplyCount","reply_count","replyCount","className","onClick","event","height","width","xmlns","d","fillRule","DefaultThreadStart","additionalMessageInputProps","additionalMessageListProps","additionalParentMessageProps","additionalVirtualizedMessageListProps","autoFocus","_b","fullWidth","PropInput","Input","PropMessage","virtualized","_c","threadHasMore","threadLoadingMore","threadMessages","_d","loadMoreThread","customClasses","_e","ContextInput","ThreadInput","ContextMessage","_f","ThreadHeader","_g","ThreadStart","_h","VirtualMessage","messageList","ThreadMessage","FallbackMessage","ThreadMessageList","current","clientHeight","scrollHeight","scrollTop","scrollDown","threadClass","ref","initialMessage","message","threadList","hasMore","loadingMore","loadMore","messages","focus","parent","publishTypingEvent"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useEffect, useRef } from 'react';\nimport { FixedHeightMessage } from '../Message/FixedHeightMessage';\nimport { Message } from '../Message/Message';\nimport { MessageInput } from '../MessageInput/MessageInput';\nimport { MessageInputSmall } from '../MessageInput/MessageInputSmall';\nimport { MessageList } from '../MessageList/MessageList';\nimport { VirtualizedMessageList, } from '../MessageList/VirtualizedMessageList';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\n/**\n * The Thread component renders a parent Message with a list of replies\n */\nexport var Thread = function (props) {\n    var _a = useChannelStateContext('Thread'), channel = _a.channel, channelConfig = _a.channelConfig, thread = _a.thread;\n    if (!thread || (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.replies) === false)\n        return null;\n    // The wrapper ensures a key variable is set and the component recreates on thread switch\n    return React.createElement(ThreadInner, __assign({}, props, { key: \"thread-\" + thread.id + \"-\" + (channel === null || channel === void 0 ? void 0 : channel.cid) }));\n};\nvar DefaultThreadHeader = function (props) {\n    var closeThread = props.closeThread, thread = props.thread;\n    var t = useTranslationContext('Thread').t;\n    var getReplyCount = function () {\n        if (!thread.reply_count)\n            return '';\n        if (thread.reply_count === 1)\n            return t('1 reply');\n        return t('{{ replyCount }} replies', {\n            replyCount: thread.reply_count,\n        });\n    };\n    return (React.createElement(\"div\", { className: 'str-chat__thread-header' },\n        React.createElement(\"div\", { className: 'str-chat__thread-header-details' },\n            React.createElement(\"strong\", null, t('Thread')),\n            React.createElement(\"small\", null, getReplyCount())),\n        React.createElement(\"button\", { className: 'str-chat__square-button', \"data-testid\": 'close-button', onClick: function (event) { return closeThread(event); } },\n            React.createElement(\"svg\", { height: '10', width: '10', xmlns: 'http://www.w3.org/2000/svg' },\n                React.createElement(\"path\", { d: 'M9.916 1.027L8.973.084 5 4.058 1.027.084l-.943.943L4.058 5 .084 8.973l.943.943L5 5.942l3.973 3.974.943-.943L5.942 5z', fillRule: 'evenodd' })))));\n};\nvar DefaultThreadStart = function () {\n    var t = useTranslationContext('Thread').t;\n    return React.createElement(\"div\", { className: 'str-chat__thread-start' }, t('Start of a new thread'));\n};\nvar ThreadInner = function (props) {\n    var additionalMessageInputProps = props.additionalMessageInputProps, additionalMessageListProps = props.additionalMessageListProps, additionalParentMessageProps = props.additionalParentMessageProps, additionalVirtualizedMessageListProps = props.additionalVirtualizedMessageListProps, _a = props.autoFocus, autoFocus = _a === void 0 ? true : _a, _b = props.fullWidth, fullWidth = _b === void 0 ? false : _b, PropInput = props.Input, PropMessage = props.Message, virtualized = props.virtualized;\n    var _c = useChannelStateContext('Thread'), thread = _c.thread, threadHasMore = _c.threadHasMore, threadLoadingMore = _c.threadLoadingMore, threadMessages = _c.threadMessages;\n    var _d = useChannelActionContext('Thread'), closeThread = _d.closeThread, loadMoreThread = _d.loadMoreThread;\n    var customClasses = useChatContext('Thread').customClasses;\n    var _e = useComponentContext('Thread'), ContextInput = _e.ThreadInput, ContextMessage = _e.Message, _f = _e.ThreadHeader, ThreadHeader = _f === void 0 ? DefaultThreadHeader : _f, _g = _e.ThreadStart, ThreadStart = _g === void 0 ? DefaultThreadStart : _g, _h = _e.VirtualMessage, VirtualMessage = _h === void 0 ? FixedHeightMessage : _h;\n    var messageList = useRef(null);\n    var ThreadInput = PropInput || (additionalMessageInputProps === null || additionalMessageInputProps === void 0 ? void 0 : additionalMessageInputProps.Input) || ContextInput || MessageInputSmall;\n    var ThreadMessage = PropMessage || (additionalMessageListProps === null || additionalMessageListProps === void 0 ? void 0 : additionalMessageListProps.Message);\n    var FallbackMessage = virtualized ? VirtualMessage : ContextMessage;\n    var ThreadMessageList = virtualized ? VirtualizedMessageList : MessageList;\n    useEffect(function () {\n        if ((thread === null || thread === void 0 ? void 0 : thread.id) && (thread === null || thread === void 0 ? void 0 : thread.reply_count)) {\n            loadMoreThread();\n        }\n    }, []);\n    useEffect(function () {\n        if (messageList.current && (threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length)) {\n            var _a = messageList.current, clientHeight = _a.clientHeight, scrollHeight = _a.scrollHeight, scrollTop = _a.scrollTop;\n            var scrollDown = clientHeight + scrollTop !== scrollHeight;\n            if (scrollDown) {\n                messageList.current.scrollTop = scrollHeight - clientHeight;\n            }\n        }\n    }, [threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length]);\n    if (!thread)\n        return null;\n    var threadClass = (customClasses === null || customClasses === void 0 ? void 0 : customClasses.thread) || 'str-chat__thread';\n    return (React.createElement(\"div\", { className: threadClass + \" \" + (fullWidth ? 'str-chat__thread--full' : '') },\n        React.createElement(ThreadHeader, { closeThread: closeThread, thread: thread }),\n        React.createElement(\"div\", { className: 'str-chat__thread-list', ref: messageList },\n            React.createElement(Message, __assign({ initialMessage: true, message: thread, Message: ThreadMessage || FallbackMessage, threadList: true }, additionalParentMessageProps)),\n            React.createElement(ThreadStart, null),\n            React.createElement(ThreadMessageList, __assign({ hasMore: threadHasMore, loadingMore: threadLoadingMore, loadMore: loadMoreThread, Message: ThreadMessage || FallbackMessage, messages: threadMessages || [], threadList: true }, (virtualized ? additionalVirtualizedMessageListProps : additionalMessageListProps)))),\n        React.createElement(MessageInput, __assign({ focus: autoFocus, Input: ThreadInput, parent: thread, publishTypingEvent: false }, additionalMessageInputProps))));\n};\n"]},"metadata":{},"sourceType":"module"}