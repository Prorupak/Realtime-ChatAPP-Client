{"ast":null,"code":"import _slicedToArray from\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState}from'react';import{ChannelList,useChatContext}from'stream-chat-react';import{ChannelSearch,TeamChannelList,TeamChannelPreview}from'./';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var customChannelTeamFilter=function customChannelTeamFilter(channels){return channels.filter(function(channel){return channel.type==='team';});};var customChannelMessagingFilter=function customChannelMessagingFilter(channels){return channels.filter(function(channel){return channel.type==='messaging';});};var ChannelListContent=function ChannelListContent(_ref){var isCreating=_ref.isCreating,setIsCreating=_ref.setIsCreating,setCreateType=_ref.setCreateType,setIsEditing=_ref.setIsEditing,setToggleContainer=_ref.setToggleContainer;var _useChatContext=useChatContext(),client=_useChatContext.client;var filters={members:{$in:[client.userID]}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"channel-list__list__wrapper\",children:[/*#__PURE__*/_jsx(ChannelSearch,{setToggleContainer:setToggleContainer}),/*#__PURE__*/_jsx(ChannelList,{filters:filters,channelRenderFilterFn:customChannelTeamFilter,List:function List(listProps){return/*#__PURE__*/_jsx(TeamChannelList,_objectSpread(_objectSpread({},listProps),{},{type:\"team\",isCreating:isCreating,setIsCreating:setIsCreating,setCreateType:setCreateType,setIsEditing:setIsEditing,setToggleContainer:setToggleContainer}));},Preview:function Preview(previewProps){return/*#__PURE__*/_jsx(TeamChannelPreview,_objectSpread(_objectSpread({},previewProps),{},{setIsCreating:setIsCreating,setIsEditing:setIsEditing,setToggleContainer:setToggleContainer,type:\"team\"}));}}),/*#__PURE__*/_jsx(ChannelList,{filters:filters,channelRenderFilterFn:customChannelMessagingFilter,List:function List(listProps){return/*#__PURE__*/_jsx(TeamChannelList,_objectSpread(_objectSpread({},listProps),{},{type:\"messaging\",isCreating:isCreating,setIsCreating:setIsCreating,setCreateType:setCreateType,setIsEditing:setIsEditing,setToggleContainer:setToggleContainer}));},Preview:function Preview(previewProps){return/*#__PURE__*/_jsx(TeamChannelPreview,_objectSpread(_objectSpread({},previewProps),{},{setIsCreating:setIsCreating,setIsEditing:setIsEditing,setToggleContainer:setToggleContainer,type:\"messaging\"}));}})]})});};var ChannelListContainer=function ChannelListContainer(_ref2){var setCreateType=_ref2.setCreateType,setIsCreating=_ref2.setIsCreating,setIsEditing=_ref2.setIsEditing;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggleContainer=_useState2[0],setToggleContainer=_useState2[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"channel-list__container\",children:/*#__PURE__*/_jsx(ChannelListContent,{setIsCreating:setIsCreating,setCreateType:setCreateType,setIsEditing:setIsEditing})}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel-list__container-responsive\",style:{left:toggleContainer?\"0%\":\"-89%\",backgroundColor:\"#005fff\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"channel-list__container-toggle\",onClick:function onClick(){return setToggleContainer(function(prevToggleContainer){return!prevToggleContainer;});}}),/*#__PURE__*/_jsx(ChannelListContent,{setIsCreating:setIsCreating,setCreateType:setCreateType,setIsEditing:setIsEditing,setToggleContainer:setToggleContainer})]})]});};export default ChannelListContainer;","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/src/components/ChannelListContainer.jsx"],"names":["React","useState","ChannelList","useChatContext","ChannelSearch","TeamChannelList","TeamChannelPreview","customChannelTeamFilter","channels","filter","channel","type","customChannelMessagingFilter","ChannelListContent","isCreating","setIsCreating","setCreateType","setIsEditing","setToggleContainer","client","filters","members","$in","userID","listProps","previewProps","ChannelListContainer","toggleContainer","left","backgroundColor","prevToggleContainer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { ChannelList, useChatContext } from 'stream-chat-react';\n\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\n\n\n\nconst customChannelTeamFilter = (channels) => {\n    return channels.filter((channel) => channel.type === 'team');\n}\n\nconst customChannelMessagingFilter = (channels) => {\n    return channels.filter((channel) => channel.type === 'messaging');\n}\n\nconst ChannelListContent = ({ isCreating, setIsCreating, setCreateType, setIsEditing, setToggleContainer }) => {\n    const { client } = useChatContext();\n\n\n\n    const filters = { members: { $in: [client.userID] } };\n\n    return (\n        <>\n            <div className=\"channel-list__list__wrapper\">\n                \n                <ChannelSearch setToggleContainer={setToggleContainer} />\n                <ChannelList \n                    filters={filters}\n                    channelRenderFilterFn={customChannelTeamFilter}\n                    List={(listProps) => (\n                        <TeamChannelList \n                            {...listProps}\n                            type=\"team\"\n                            isCreating={isCreating}\n                            setIsCreating={setIsCreating}\n                            setCreateType={setCreateType} \n                            setIsEditing={setIsEditing}\n                            setToggleContainer={setToggleContainer}\n                        />\n                    )}\n                    Preview={(previewProps) => (\n                        <TeamChannelPreview \n                            {...previewProps}\n                            setIsCreating={setIsCreating}\n                            setIsEditing={setIsEditing}\n                            setToggleContainer={setToggleContainer}\n                            type=\"team\"\n                        />\n                    )}\n                />\n                <ChannelList \n                    filters={filters}\n                    channelRenderFilterFn={customChannelMessagingFilter}\n                    List={(listProps) => (\n                        <TeamChannelList \n                            {...listProps}\n                            type=\"messaging\"\n                            isCreating={isCreating}\n                            setIsCreating={setIsCreating}\n                            setCreateType={setCreateType} \n                            setIsEditing={setIsEditing}\n                            setToggleContainer={setToggleContainer}\n                        />\n                    )}\n                    Preview={(previewProps) => (\n                        <TeamChannelPreview \n                            {...previewProps}\n                            setIsCreating={setIsCreating}\n                            setIsEditing={setIsEditing}\n                            setToggleContainer={setToggleContainer}\n                            type=\"messaging\"\n                        />\n                    )}\n                />\n            </div>\n            {/* <SideBar logout={logout} /> */}\n\n        </>\n    );\n}\n\nconst ChannelListContainer = ({ setCreateType, setIsCreating, setIsEditing }) => {\n    const [toggleContainer, setToggleContainer] = useState(false);\n\n    return (\n        <>\n            <div className=\"channel-list__container\">\n              <ChannelListContent \n                setIsCreating={setIsCreating} \n                setCreateType={setCreateType} \n                setIsEditing={setIsEditing} \n              />\n            </div>\n\n            <div className=\"channel-list__container-responsive\"\n                style={{ left: toggleContainer ? \"0%\" : \"-89%\", backgroundColor: \"#005fff\"}}\n            >\n                <div className=\"channel-list__container-toggle\" onClick={() => setToggleContainer((prevToggleContainer) => !prevToggleContainer)}>\n                </div>\n                <ChannelListContent \n                setIsCreating={setIsCreating} \n                setCreateType={setCreateType} \n                setIsEditing={setIsEditing}\n                setToggleContainer={setToggleContainer}\n              />\n            </div>\n        </>\n    )\n\n}\n\nexport default ChannelListContainer;\n"]},"metadata":{},"sourceType":"module"}