{"ast":null,"code":"import _regeneratorRuntime from\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useChatContext}from'stream-chat-react';import{UserList}from'./';import{CloseCreateChannel}from'../assets';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChannelNameInput=function ChannelNameInput(_ref){var _ref$channelName=_ref.channelName,channelName=_ref$channelName===void 0?'':_ref$channelName,setChannelName=_ref.setChannelName;var handleChange=function handleChange(event){event.preventDefault();setChannelName(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"channel-name-input__wrapper\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{value:channelName,onChange:handleChange,placeholder:\"channel-name\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Add Members\"})]});};var CreateChannel=function CreateChannel(_ref2){var createType=_ref2.createType,setIsCreating=_ref2.setIsCreating;var _useChatContext=useChatContext(),client=_useChatContext.client,setActiveChannel=_useChatContext.setActiveChannel;var _useState=useState([client.userID||'']),_useState2=_slicedToArray(_useState,2),selectedUsers=_useState2[0],setSelectedUsers=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),channelName=_useState4[0],setChannelName=_useState4[1];var createChannel=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var newChannel;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;_context.next=4;return client.channel(createType,channelName,{name:channelName,members:selectedUsers});case 4:newChannel=_context.sent;_context.next=7;return newChannel.watch();case 7:setChannelName('');setIsCreating(false);setSelectedUsers([client.userID]);setActiveChannel(newChannel);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return function createChannel(_x){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"create-channel__container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"create-channel__header\",children:[/*#__PURE__*/_jsx(\"p\",{children:createType==='team'?'Create a New Channel':'Send a Direct Message'}),/*#__PURE__*/_jsx(CloseCreateChannel,{setIsCreating:setIsCreating})]}),createType==='team'&&/*#__PURE__*/_jsx(ChannelNameInput,{channelName:channelName,setChannelName:setChannelName}),/*#__PURE__*/_jsx(UserList,{setSelectedUsers:setSelectedUsers}),/*#__PURE__*/_jsx(\"div\",{className:\"create-channel__button-wrapper\",onClick:createChannel,children:/*#__PURE__*/_jsx(\"p\",{children:createType==='team'?'Create Channel':'Create Message Group'})})]});};export default CreateChannel;","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/src/components/CreateChannel.jsx"],"names":["React","useState","useChatContext","UserList","CloseCreateChannel","ChannelNameInput","channelName","setChannelName","handleChange","event","preventDefault","target","value","CreateChannel","createType","setIsCreating","client","setActiveChannel","userID","selectedUsers","setSelectedUsers","createChannel","e","channel","name","members","newChannel","watch","console","log"],"mappings":"ghBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,mBAA/B,CAEA,OAASC,QAAT,KAAyB,IAAzB,CACA,OAASC,kBAAT,KAAmC,WAAnC,C,wFAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAA0C,2BAAvCC,WAAuC,CAAvCA,WAAuC,2BAAzB,EAAyB,kBAArBC,cAAqB,MAArBA,cAAqB,CAC/D,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5BA,KAAK,CAACC,cAAN,GAEAH,cAAc,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAd,CACH,CAJD,CAMA,mBACI,aAAK,SAAS,CAAC,6BAAf,wBACI,2BADJ,cAEI,cAAO,KAAK,CAAEN,WAAd,CAA2B,QAAQ,CAAEE,YAArC,CAAmD,WAAW,CAAC,cAA/D,EAFJ,cAGI,kCAHJ,GADJ,CAOH,CAdD,CAgBA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,OAAmC,IAAhCC,CAAAA,UAAgC,OAAhCA,UAAgC,CAApBC,aAAoB,OAApBA,aAAoB,qBAChBb,cAAc,EADE,CAC7Cc,MAD6C,iBAC7CA,MAD6C,CACrCC,gBADqC,iBACrCA,gBADqC,eAEXhB,QAAQ,CAAC,CAACe,MAAM,CAACE,MAAP,EAAiB,EAAlB,CAAD,CAFG,wCAE9CC,aAF8C,eAE/BC,gBAF+B,8BAGfnB,QAAQ,CAAC,EAAD,CAHO,yCAG9CK,WAH8C,eAGjCC,cAHiC,eAKrD,GAAMc,CAAAA,aAAa,2FAAG,iBAAOC,CAAP,iIAClBA,CAAC,CAACZ,cAAF,GADkB,sCAIWM,CAAAA,MAAM,CAACO,OAAP,CAAeT,UAAf,CAA2BR,WAA3B,CAAwC,CAC7DkB,IAAI,CAAElB,WADuD,CAC1CmB,OAAO,CAAEN,aADiC,CAAxC,CAJX,QAIRO,UAJQ,qCAQRA,CAAAA,UAAU,CAACC,KAAX,EARQ,QAUdpB,cAAc,CAAC,EAAD,CAAd,CACAQ,aAAa,CAAC,KAAD,CAAb,CACAK,gBAAgB,CAAC,CAACJ,MAAM,CAACE,MAAR,CAAD,CAAhB,CACAD,gBAAgB,CAACS,UAAD,CAAhB,CAbc,iFAedE,OAAO,CAACC,GAAR,cAfc,qEAAH,kBAAbR,CAAAA,aAAa,6CAAnB,CAmBA,mBACI,aAAK,SAAS,CAAC,2BAAf,wBACI,aAAK,SAAS,CAAC,wBAAf,wBACI,mBAAIP,UAAU,GAAK,MAAf,CAAwB,sBAAxB,CAAiD,uBAArD,EADJ,cAEI,KAAC,kBAAD,EAAoB,aAAa,CAAEC,aAAnC,EAFJ,GADJ,CAKKD,UAAU,GAAK,MAAf,eAAyB,KAAC,gBAAD,EAAkB,WAAW,CAAER,WAA/B,CAA4C,cAAc,CAAEC,cAA5D,EAL9B,cAMI,KAAC,QAAD,EAAU,gBAAgB,CAAEa,gBAA5B,EANJ,cAOI,YAAK,SAAS,CAAC,gCAAf,CAAgD,OAAO,CAAEC,aAAzD,uBACI,mBAAIP,UAAU,GAAK,MAAf,CAAwB,gBAAxB,CAA2C,sBAA/C,EADJ,EAPJ,GADJ,CAaH,CArCD,CAuCA,cAAeD,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nimport { UserList } from './';\nimport { CloseCreateChannel } from '../assets';\n\nconst ChannelNameInput = ({ channelName = '', setChannelName }) => {\n    const handleChange = (event) => {\n        event.preventDefault();\n\n        setChannelName(event.target.value);\n    }\n\n    return (\n        <div className=\"channel-name-input__wrapper\">\n            <p>Name</p>\n            <input value={channelName} onChange={handleChange} placeholder=\"channel-name\" />\n            <p>Add Members</p>\n        </div>\n    )\n}\n\nconst CreateChannel = ({ createType, setIsCreating }) => {\n    const { client, setActiveChannel } = useChatContext();\n    const [selectedUsers, setSelectedUsers] = useState([client.userID || ''])\n    const [channelName, setChannelName] = useState('');\n\n    const createChannel = async (e) => {\n        e.preventDefault();\n\n        try {\n            const newChannel = await client.channel(createType, channelName, {\n                name: channelName, members: selectedUsers\n            });\n\n            await newChannel.watch();\n\n            setChannelName('');\n            setIsCreating(false);\n            setSelectedUsers([client.userID]);\n            setActiveChannel(newChannel);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div className=\"create-channel__container\">\n            <div className=\"create-channel__header\">\n                <p>{createType === 'team' ? 'Create a New Channel' : 'Send a Direct Message'}</p>\n                <CloseCreateChannel setIsCreating={setIsCreating} />\n            </div>\n            {createType === 'team' && <ChannelNameInput channelName={channelName} setChannelName={setChannelName}/>}\n            <UserList setSelectedUsers={setSelectedUsers} />\n            <div className=\"create-channel__button-wrapper\" onClick={createChannel}>\n                <p>{createType === 'team' ? 'Create Channel' : 'Create Message Group'}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateChannel\n"]},"metadata":{},"sourceType":"module"}