{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Doctype = exports.CDATA = exports.Tag = exports.Style = exports.Script = exports.Comment = exports.Directive = exports.Text = exports.Root = exports.isTag = void 0;\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\n\nfunction isTag(elem) {\n  return elem.type === \"tag\"\n  /* Tag */\n  || elem.type === \"script\"\n  /* Script */\n  || elem.type === \"style\"\n  /* Style */\n  ;\n}\n\nexports.isTag = isTag; // Exports for backwards compatibility\n\n/** Type for the root element of a document */\n\nexports.Root = \"root\"\n/* Root */\n;\n/** Type for Text */\n\nexports.Text = \"text\"\n/* Text */\n;\n/** Type for <? ... ?> */\n\nexports.Directive = \"directive\"\n/* Directive */\n;\n/** Type for <!-- ... --> */\n\nexports.Comment = \"comment\"\n/* Comment */\n;\n/** Type for <script> tags */\n\nexports.Script = \"script\"\n/* Script */\n;\n/** Type for <style> tags */\n\nexports.Style = \"style\"\n/* Style */\n;\n/** Type for Any tag */\n\nexports.Tag = \"tag\"\n/* Tag */\n;\n/** Type for <![CDATA[ ... ]]> */\n\nexports.CDATA = \"cdata\"\n/* CDATA */\n;\n/** Type for <!doctype ...> */\n\nexports.Doctype = \"doctype\"\n/* Doctype */\n;","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/htmlparser2/node_modules/domelementtype/lib/index.js"],"names":["Object","defineProperty","exports","value","Doctype","CDATA","Tag","Style","Script","Comment","Directive","Text","Root","isTag","elem","type"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,KAAR,GAAgBH,OAAO,CAACI,GAAR,GAAcJ,OAAO,CAACK,KAAR,GAAgBL,OAAO,CAACM,MAAR,GAAiBN,OAAO,CAACO,OAAR,GAAkBP,OAAO,CAACQ,SAAR,GAAoBR,OAAO,CAACS,IAAR,GAAeT,OAAO,CAACU,IAAR,GAAeV,OAAO,CAACW,KAAR,GAAgB,KAAK,CAA1K;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjB,SAAQA,IAAI,CAACC,IAAL,KAAc;AAAM;AAApB,KACJD,IAAI,CAACC,IAAL,KAAc;AAAS;AADnB,KAEJD,IAAI,CAACC,IAAL,KAAc;AAAQ;AAF1B;AAGH;;AACDb,OAAO,CAACW,KAAR,GAAgBA,KAAhB,C,CACA;;AACA;;AACAX,OAAO,CAACU,IAAR,GAAe;AAAO;AAAtB;AACA;;AACAV,OAAO,CAACS,IAAR,GAAe;AAAO;AAAtB;AACA;;AACAT,OAAO,CAACQ,SAAR,GAAoB;AAAY;AAAhC;AACA;;AACAR,OAAO,CAACO,OAAR,GAAkB;AAAU;AAA5B;AACA;;AACAP,OAAO,CAACM,MAAR,GAAiB;AAAS;AAA1B;AACA;;AACAN,OAAO,CAACK,KAAR,GAAgB;AAAQ;AAAxB;AACA;;AACAL,OAAO,CAACI,GAAR,GAAc;AAAM;AAApB;AACA;;AACAJ,OAAO,CAACG,KAAR,GAAgB;AAAQ;AAAxB;AACA;;AACAH,OAAO,CAACE,OAAR,GAAkB;AAAU;AAA5B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Doctype = exports.CDATA = exports.Tag = exports.Style = exports.Script = exports.Comment = exports.Directive = exports.Text = exports.Root = exports.isTag = void 0;\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nfunction isTag(elem) {\n    return (elem.type === \"tag\" /* Tag */ ||\n        elem.type === \"script\" /* Script */ ||\n        elem.type === \"style\" /* Style */);\n}\nexports.isTag = isTag;\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexports.Root = \"root\" /* Root */;\n/** Type for Text */\nexports.Text = \"text\" /* Text */;\n/** Type for <? ... ?> */\nexports.Directive = \"directive\" /* Directive */;\n/** Type for <!-- ... --> */\nexports.Comment = \"comment\" /* Comment */;\n/** Type for <script> tags */\nexports.Script = \"script\" /* Script */;\n/** Type for <style> tags */\nexports.Style = \"style\" /* Style */;\n/** Type for Any tag */\nexports.Tag = \"tag\" /* Tag */;\n/** Type for <![CDATA[ ... ]]> */\nexports.CDATA = \"cdata\" /* CDATA */;\n/** Type for <!doctype ...> */\nexports.Doctype = \"doctype\" /* Doctype */;\n"]},"metadata":{},"sourceType":"script"}