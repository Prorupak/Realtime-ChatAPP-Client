{"ast":null,"code":"'use strict';\n\nvar xtend = require('xtend');\n\nvar ReactMarkdown = require('./react-markdown');\n\nvar htmlParser = require('./plugins/html-parser');\n\nvar parseHtml = htmlParser();\n\nfunction ReactMarkdownWithHtml(props) {\n  var astPlugins = [parseHtml].concat(props.astPlugins || []);\n  return ReactMarkdown(xtend(props, {\n    astPlugins: astPlugins\n  }));\n}\n\nReactMarkdownWithHtml.defaultProps = ReactMarkdown.defaultProps;\nReactMarkdownWithHtml.propTypes = ReactMarkdown.propTypes;\nReactMarkdownWithHtml.types = ReactMarkdown.types;\nReactMarkdownWithHtml.renderers = ReactMarkdown.renderers;\nReactMarkdownWithHtml.uriTransformer = ReactMarkdown.uriTransformer;\nmodule.exports = ReactMarkdownWithHtml;","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/react-markdown/lib/with-html.js"],"names":["xtend","require","ReactMarkdown","htmlParser","parseHtml","ReactMarkdownWithHtml","props","astPlugins","concat","defaultProps","propTypes","types","renderers","uriTransformer","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAIC,aAAa,GAAGD,OAAO,CAAC,kBAAD,CAA3B;;AAEA,IAAIE,UAAU,GAAGF,OAAO,CAAC,uBAAD,CAAxB;;AAEA,IAAIG,SAAS,GAAGD,UAAU,EAA1B;;AAEA,SAASE,qBAAT,CAA+BC,KAA/B,EAAsC;AACpC,MAAIC,UAAU,GAAG,CAACH,SAAD,EAAYI,MAAZ,CAAmBF,KAAK,CAACC,UAAN,IAAoB,EAAvC,CAAjB;AACA,SAAOL,aAAa,CAACF,KAAK,CAACM,KAAD,EAAQ;AAChCC,IAAAA,UAAU,EAAEA;AADoB,GAAR,CAAN,CAApB;AAGD;;AAEDF,qBAAqB,CAACI,YAAtB,GAAqCP,aAAa,CAACO,YAAnD;AACAJ,qBAAqB,CAACK,SAAtB,GAAkCR,aAAa,CAACQ,SAAhD;AACAL,qBAAqB,CAACM,KAAtB,GAA8BT,aAAa,CAACS,KAA5C;AACAN,qBAAqB,CAACO,SAAtB,GAAkCV,aAAa,CAACU,SAAhD;AACAP,qBAAqB,CAACQ,cAAtB,GAAuCX,aAAa,CAACW,cAArD;AACAC,MAAM,CAACC,OAAP,GAAiBV,qBAAjB","sourcesContent":["'use strict';\n\nvar xtend = require('xtend');\n\nvar ReactMarkdown = require('./react-markdown');\n\nvar htmlParser = require('./plugins/html-parser');\n\nvar parseHtml = htmlParser();\n\nfunction ReactMarkdownWithHtml(props) {\n  var astPlugins = [parseHtml].concat(props.astPlugins || []);\n  return ReactMarkdown(xtend(props, {\n    astPlugins: astPlugins\n  }));\n}\n\nReactMarkdownWithHtml.defaultProps = ReactMarkdown.defaultProps;\nReactMarkdownWithHtml.propTypes = ReactMarkdown.propTypes;\nReactMarkdownWithHtml.types = ReactMarkdown.types;\nReactMarkdownWithHtml.renderers = ReactMarkdown.renderers;\nReactMarkdownWithHtml.uriTransformer = ReactMarkdown.uriTransformer;\nmodule.exports = ReactMarkdownWithHtml;"]},"metadata":{},"sourceType":"script"}