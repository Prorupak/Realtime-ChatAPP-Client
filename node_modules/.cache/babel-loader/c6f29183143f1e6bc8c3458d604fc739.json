{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { Suspense, useMemo, useState } from 'react';\nimport { getStrippedEmojiData } from '../Channel/emojiData';\nimport { useEmojiContext } from '../../context/EmojiContext';\nimport { useMessageContext } from '../../context/MessageContext';\n\nvar UnMemoizedSimpleReactionsList = function (props) {\n  var _a = props.additionalEmojiProps,\n      additionalEmojiProps = _a === void 0 ? {} : _a,\n      propHandleReaction = props.handleReaction,\n      propReactionCounts = props.reaction_counts,\n      propReactionOptions = props.reactionOptions,\n      propReactions = props.reactions;\n\n  var _b = useEmojiContext('SimpleReactionsList'),\n      Emoji = _b.Emoji,\n      emojiConfig = _b.emojiConfig;\n\n  var _c = useMessageContext('SimpleReactionsList'),\n      contextHandleReaction = _c.handleReaction,\n      message = _c.message;\n\n  var _d = emojiConfig || {},\n      defaultMinimalEmojis = _d.defaultMinimalEmojis,\n      fullEmojiData = _d.emojiData,\n      emojiSetDef = _d.emojiSetDef;\n\n  var _e = useState(undefined),\n      tooltipReactionType = _e[0],\n      setTooltipReactionType = _e[1];\n\n  var handleReaction = propHandleReaction || contextHandleReaction;\n  var reactions = propReactions || message.latest_reactions || [];\n  var reactionCounts = propReactionCounts || message.reaction_counts || {};\n  var reactionOptions = propReactionOptions || defaultMinimalEmojis;\n  var reactionsAreCustom = !!(propReactionOptions === null || propReactionOptions === void 0 ? void 0 : propReactionOptions.length);\n  var emojiData = useMemo(function () {\n    return reactionsAreCustom ? fullEmojiData : getStrippedEmojiData(fullEmojiData);\n  }, [fullEmojiData, reactionsAreCustom]);\n  if (!reactions.length) return null;\n\n  var getUsersPerReactionType = function (type) {\n    return reactions.map(function (reaction) {\n      var _a, _b;\n\n      if (reaction.type === type) {\n        return ((_a = reaction.user) === null || _a === void 0 ? void 0 : _a.name) || ((_b = reaction.user) === null || _b === void 0 ? void 0 : _b.id);\n      }\n\n      return null;\n    }).filter(Boolean);\n  };\n\n  var getTotalReactionCount = function () {\n    return Object.values(reactionCounts).reduce(function (total, count) {\n      return total + count;\n    }, 0);\n  };\n\n  var getCurrentMessageReactionTypes = function () {\n    var reactionTypes = [];\n    reactions.forEach(function (_a) {\n      var type = _a.type;\n\n      if (reactionTypes.indexOf(type) === -1) {\n        reactionTypes.push(type);\n      }\n    });\n    return reactionTypes;\n  };\n\n  var getEmojiByReactionType = function (type) {\n    var reactionEmoji = reactionOptions.find(function (option) {\n      return option.id === type;\n    });\n    return reactionEmoji;\n  };\n\n  var getSupportedReactionMap = function () {\n    var reactionMap = {};\n    reactionOptions.forEach(function (_a) {\n      var id = _a.id;\n      return reactionMap[id] = true;\n    });\n    return reactionMap;\n  };\n\n  var messageReactionTypes = getCurrentMessageReactionTypes();\n  var supportedReactionMap = getSupportedReactionMap();\n  var supportedReactionsArePresent = messageReactionTypes.some(function (type) {\n    return supportedReactionMap[type];\n  });\n  if (!supportedReactionsArePresent) return null;\n  return React.createElement(\"ul\", {\n    className: 'str-chat__simple-reactions-list',\n    \"data-testid\": 'simple-reaction-list',\n    onMouseLeave: function () {\n      return setTooltipReactionType(undefined);\n    }\n  }, messageReactionTypes.map(function (reactionType, i) {\n    var _a;\n\n    var emojiObject = getEmojiByReactionType(reactionType);\n    return emojiObject ? React.createElement(\"li\", {\n      className: 'str-chat__simple-reactions-list-item',\n      key: emojiObject.id + \"-\" + i,\n      onClick: function (event) {\n        return handleReaction(reactionType, event);\n      }\n    }, React.createElement(\"span\", {\n      onMouseEnter: function () {\n        return setTooltipReactionType(reactionType);\n      }\n    }, React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(Emoji, __assign({\n      data: emojiData,\n      emoji: emojiObject,\n      size: 13\n    }, reactionsAreCustom ? additionalEmojiProps : emojiSetDef))), \"\\u00A0\"), tooltipReactionType === emojiObject.id && React.createElement(\"div\", {\n      className: 'str-chat__simple-reactions-list-tooltip'\n    }, React.createElement(\"div\", {\n      className: 'arrow'\n    }), (_a = getUsersPerReactionType(tooltipReactionType)) === null || _a === void 0 ? void 0 : _a.join(', '))) : null;\n  }), React.createElement(\"li\", {\n    className: 'str-chat__simple-reactions-list-item--last-number'\n  }, getTotalReactionCount()));\n};\n\nexport var SimpleReactionsList = React.memo(UnMemoizedSimpleReactionsList);","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/Reactions/SimpleReactionsList.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","Suspense","useMemo","useState","getStrippedEmojiData","useEmojiContext","useMessageContext","UnMemoizedSimpleReactionsList","props","_a","additionalEmojiProps","propHandleReaction","handleReaction","propReactionCounts","reaction_counts","propReactionOptions","reactionOptions","propReactions","reactions","_b","Emoji","emojiConfig","_c","contextHandleReaction","message","_d","defaultMinimalEmojis","fullEmojiData","emojiData","emojiSetDef","_e","undefined","tooltipReactionType","setTooltipReactionType","latest_reactions","reactionCounts","reactionsAreCustom","getUsersPerReactionType","type","map","reaction","user","name","id","filter","Boolean","getTotalReactionCount","values","reduce","total","count","getCurrentMessageReactionTypes","reactionTypes","forEach","indexOf","push","getEmojiByReactionType","reactionEmoji","find","option","getSupportedReactionMap","reactionMap","messageReactionTypes","supportedReactionMap","supportedReactionsArePresent","some","createElement","className","onMouseLeave","reactionType","emojiObject","key","onClick","event","onMouseEnter","fallback","data","emoji","size","join","SimpleReactionsList","memo"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { Suspense, useMemo, useState } from 'react';\nimport { getStrippedEmojiData } from '../Channel/emojiData';\nimport { useEmojiContext } from '../../context/EmojiContext';\nimport { useMessageContext } from '../../context/MessageContext';\nvar UnMemoizedSimpleReactionsList = function (props) {\n    var _a = props.additionalEmojiProps, additionalEmojiProps = _a === void 0 ? {} : _a, propHandleReaction = props.handleReaction, propReactionCounts = props.reaction_counts, propReactionOptions = props.reactionOptions, propReactions = props.reactions;\n    var _b = useEmojiContext('SimpleReactionsList'), Emoji = _b.Emoji, emojiConfig = _b.emojiConfig;\n    var _c = useMessageContext('SimpleReactionsList'), contextHandleReaction = _c.handleReaction, message = _c.message;\n    var _d = emojiConfig || {}, defaultMinimalEmojis = _d.defaultMinimalEmojis, fullEmojiData = _d.emojiData, emojiSetDef = _d.emojiSetDef;\n    var _e = useState(undefined), tooltipReactionType = _e[0], setTooltipReactionType = _e[1];\n    var handleReaction = propHandleReaction || contextHandleReaction;\n    var reactions = propReactions || message.latest_reactions || [];\n    var reactionCounts = propReactionCounts || message.reaction_counts || {};\n    var reactionOptions = propReactionOptions || defaultMinimalEmojis;\n    var reactionsAreCustom = !!(propReactionOptions === null || propReactionOptions === void 0 ? void 0 : propReactionOptions.length);\n    var emojiData = useMemo(function () { return (reactionsAreCustom ? fullEmojiData : getStrippedEmojiData(fullEmojiData)); }, [fullEmojiData, reactionsAreCustom]);\n    if (!reactions.length)\n        return null;\n    var getUsersPerReactionType = function (type) {\n        return reactions\n            .map(function (reaction) {\n            var _a, _b;\n            if (reaction.type === type) {\n                return ((_a = reaction.user) === null || _a === void 0 ? void 0 : _a.name) || ((_b = reaction.user) === null || _b === void 0 ? void 0 : _b.id);\n            }\n            return null;\n        })\n            .filter(Boolean);\n    };\n    var getTotalReactionCount = function () {\n        return Object.values(reactionCounts).reduce(function (total, count) { return total + count; }, 0);\n    };\n    var getCurrentMessageReactionTypes = function () {\n        var reactionTypes = [];\n        reactions.forEach(function (_a) {\n            var type = _a.type;\n            if (reactionTypes.indexOf(type) === -1) {\n                reactionTypes.push(type);\n            }\n        });\n        return reactionTypes;\n    };\n    var getEmojiByReactionType = function (type) {\n        var reactionEmoji = reactionOptions.find(function (option) { return option.id === type; });\n        return reactionEmoji;\n    };\n    var getSupportedReactionMap = function () {\n        var reactionMap = {};\n        reactionOptions.forEach(function (_a) {\n            var id = _a.id;\n            return (reactionMap[id] = true);\n        });\n        return reactionMap;\n    };\n    var messageReactionTypes = getCurrentMessageReactionTypes();\n    var supportedReactionMap = getSupportedReactionMap();\n    var supportedReactionsArePresent = messageReactionTypes.some(function (type) { return supportedReactionMap[type]; });\n    if (!supportedReactionsArePresent)\n        return null;\n    return (React.createElement(\"ul\", { className: 'str-chat__simple-reactions-list', \"data-testid\": 'simple-reaction-list', onMouseLeave: function () { return setTooltipReactionType(undefined); } },\n        messageReactionTypes.map(function (reactionType, i) {\n            var _a;\n            var emojiObject = getEmojiByReactionType(reactionType);\n            return emojiObject ? (React.createElement(\"li\", { className: 'str-chat__simple-reactions-list-item', key: emojiObject.id + \"-\" + i, onClick: function (event) { return handleReaction(reactionType, event); } },\n                React.createElement(\"span\", { onMouseEnter: function () { return setTooltipReactionType(reactionType); } },\n                    React.createElement(Suspense, { fallback: null },\n                        React.createElement(Emoji, __assign({ data: emojiData, emoji: emojiObject, size: 13 }, (reactionsAreCustom ? additionalEmojiProps : emojiSetDef)))),\n                    \"\\u00A0\"),\n                tooltipReactionType === emojiObject.id && (React.createElement(\"div\", { className: 'str-chat__simple-reactions-list-tooltip' },\n                    React.createElement(\"div\", { className: 'arrow' }), (_a = getUsersPerReactionType(tooltipReactionType)) === null || _a === void 0 ? void 0 :\n                    _a.join(', '))))) : null;\n        }),\n        React.createElement(\"li\", { className: 'str-chat__simple-reactions-list-item--last-number' }, getTotalReactionCount())));\n};\nexport var SimpleReactionsList = React.memo(UnMemoizedSimpleReactionsList);\n"]},"metadata":{},"sourceType":"module"}