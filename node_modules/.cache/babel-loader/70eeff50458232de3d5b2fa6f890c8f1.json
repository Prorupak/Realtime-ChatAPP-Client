{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useCallback, useRef } from 'react';\nimport { useActionHandler, useDeleteHandler, useEditHandler, useFlagHandler, useMentionsHandler, useMuteHandler, useOpenThreadHandler, usePinHandler, useReactionClick, useReactionHandler, useRetryHandler, useUserHandler, useUserRole } from './hooks';\nimport { areMessagePropsEqual, getMessageActions, MESSAGE_ACTIONS } from './utils';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { MessageProvider } from '../../context/MessageContext';\n\nvar MessageWithContext = function (props) {\n  var canPin = props.canPin,\n      groupedByUser = props.groupedByUser,\n      propMessage = props.Message,\n      message = props.message,\n      _a = props.messageActions,\n      messageActions = _a === void 0 ? Object.keys(MESSAGE_ACTIONS) : _a,\n      propOnUserClick = props.onUserClick,\n      propOnUserHover = props.onUserHover,\n      userRoles = props.userRoles;\n  var contextMessage = useComponentContext('Message').Message;\n  var actionsEnabled = message.type === 'regular' && message.status === 'received';\n  var MessageUIComponent = propMessage || contextMessage;\n\n  var _b = useEditHandler(),\n      clearEdit = _b.clearEdit,\n      editing = _b.editing,\n      setEdit = _b.setEdit;\n\n  var _c = useUserHandler(message, {\n    onUserClickHandler: propOnUserClick,\n    onUserHoverHandler: propOnUserHover\n  }),\n      onUserClick = _c.onUserClick,\n      onUserHover = _c.onUserHover;\n\n  var canDelete = userRoles.canDelete,\n      canEdit = userRoles.canEdit,\n      canFlag = userRoles.canFlag,\n      canMute = userRoles.canMute,\n      canQuote = userRoles.canQuote,\n      canReact = userRoles.canReact,\n      canReply = userRoles.canReply,\n      isMyMessage = userRoles.isMyMessage;\n  var messageActionsHandler = useCallback(function () {\n    return getMessageActions(messageActions, {\n      canDelete: canDelete,\n      canEdit: canEdit,\n      canFlag: canFlag,\n      canMute: canMute,\n      canPin: canPin,\n      canQuote: canQuote,\n      canReact: canReact,\n      canReply: canReply\n    });\n  }, [canDelete, canEdit, canFlag, canMute, canPin, canQuote, canReact, canReply]);\n\n  var canPinPropToNotPass = props.canPin,\n      // eslint-disable-line @typescript-eslint/no-unused-vars\n  messageActionsPropToNotPass = props.messageActions,\n      // eslint-disable-line @typescript-eslint/no-unused-vars\n  onlySenderCanEditPropToNotPass = props.onlySenderCanEdit,\n      // eslint-disable-line @typescript-eslint/no-unused-vars\n  onUserClickPropToNotPass = props.onUserClick,\n      // eslint-disable-line @typescript-eslint/no-unused-vars\n  onUserHoverPropToNotPass = props.onUserHover,\n      // eslint-disable-line @typescript-eslint/no-unused-vars\n  userRolesPropToNotPass = props.userRoles,\n      // eslint-disable-line @typescript-eslint/no-unused-vars\n  rest = __rest(props, [\"canPin\", \"messageActions\", \"onlySenderCanEdit\", \"onUserClick\", \"onUserHover\", \"userRoles\"]);\n\n  var messageContextValue = __assign(__assign({}, rest), {\n    actionsEnabled: actionsEnabled,\n    clearEditingState: clearEdit,\n    editing: editing,\n    getMessageActions: messageActionsHandler,\n    handleEdit: setEdit,\n    isMyMessage: function () {\n      return isMyMessage;\n    },\n    onUserClick: onUserClick,\n    onUserHover: onUserHover,\n    setEditingState: setEdit\n  });\n\n  return React.createElement(MessageProvider, {\n    value: messageContextValue\n  }, React.createElement(MessageUIComponent, {\n    groupedByUser: groupedByUser\n  }));\n};\n\nvar MemoizedMessage = React.memo(MessageWithContext, areMessagePropsEqual);\n/**\n * The Message component is a context provider which implements all the logic required for rendering\n * an individual message. The actual UI of the message is delegated via the Message prop on Channel.\n */\n\nexport var Message = function (props) {\n  var closeReactionSelectorOnClick = props.closeReactionSelectorOnClick,\n      disableQuotedMessages = props.disableQuotedMessages,\n      getDeleteMessageErrorNotification = props.getDeleteMessageErrorNotification,\n      getFlagMessageErrorNotification = props.getFlagMessageErrorNotification,\n      getFlagMessageSuccessNotification = props.getFlagMessageSuccessNotification,\n      getMuteUserErrorNotification = props.getMuteUserErrorNotification,\n      getMuteUserSuccessNotification = props.getMuteUserSuccessNotification,\n      getPinMessageErrorNotification = props.getPinMessageErrorNotification,\n      message = props.message,\n      _a = props.onlySenderCanEdit,\n      onlySenderCanEdit = _a === void 0 ? false : _a,\n      propOnMentionsClick = props.onMentionsClick,\n      propOnMentionsHover = props.onMentionsHover,\n      propOpenThread = props.openThread,\n      pinPermissions = props.pinPermissions,\n      propRetrySendMessage = props.retrySendMessage;\n  var addNotification = useChannelActionContext('Message').addNotification;\n  var mutes = useChannelStateContext('Message').mutes;\n  var reactionSelectorRef = useRef(null);\n  var handleAction = useActionHandler(message);\n  var handleOpenThread = useOpenThreadHandler(message, propOpenThread);\n  var handleReaction = useReactionHandler(message);\n  var handleRetry = useRetryHandler(propRetrySendMessage);\n  var userRoles = useUserRole(message, onlySenderCanEdit, disableQuotedMessages);\n  var handleDelete = useDeleteHandler(message, {\n    getErrorNotification: getDeleteMessageErrorNotification,\n    notify: addNotification\n  });\n  var handleFlag = useFlagHandler(message, {\n    getErrorNotification: getFlagMessageErrorNotification,\n    getSuccessNotification: getFlagMessageSuccessNotification,\n    notify: addNotification\n  });\n  var handleMute = useMuteHandler(message, {\n    getErrorNotification: getMuteUserErrorNotification,\n    getSuccessNotification: getMuteUserSuccessNotification,\n    notify: addNotification\n  });\n\n  var _b = useMentionsHandler(message, {\n    onMentionsClick: propOnMentionsClick,\n    onMentionsHover: propOnMentionsHover\n  }),\n      onMentionsClick = _b.onMentionsClick,\n      onMentionsHover = _b.onMentionsHover;\n\n  var _c = usePinHandler(message, pinPermissions, {\n    getErrorNotification: getPinMessageErrorNotification,\n    notify: addNotification\n  }),\n      canPin = _c.canPin,\n      handlePin = _c.handlePin;\n\n  var _d = useReactionClick(message, reactionSelectorRef, undefined, closeReactionSelectorOnClick),\n      isReactionEnabled = _d.isReactionEnabled,\n      onReactionListClick = _d.onReactionListClick,\n      showDetailedReactions = _d.showDetailedReactions;\n\n  return React.createElement(MemoizedMessage, {\n    additionalMessageInputProps: props.additionalMessageInputProps,\n    canPin: canPin,\n    customMessageActions: props.customMessageActions,\n    disableQuotedMessages: props.disableQuotedMessages,\n    endOfGroup: props.endOfGroup,\n    firstOfGroup: props.firstOfGroup,\n    formatDate: props.formatDate,\n    groupedByUser: props.groupedByUser,\n    groupStyles: props.groupStyles,\n    handleAction: handleAction,\n    handleDelete: handleDelete,\n    handleFlag: handleFlag,\n    handleMute: handleMute,\n    handleOpenThread: handleOpenThread,\n    handlePin: handlePin,\n    handleReaction: handleReaction,\n    handleRetry: handleRetry,\n    initialMessage: props.initialMessage,\n    isReactionEnabled: isReactionEnabled,\n    lastReceivedId: props.lastReceivedId,\n    message: message,\n    Message: props.Message,\n    messageActions: props.messageActions,\n    messageListRect: props.messageListRect,\n    mutes: mutes,\n    onMentionsClickMessage: onMentionsClick,\n    onMentionsHoverMessage: onMentionsHover,\n    onReactionListClick: onReactionListClick,\n    onUserClick: props.onUserClick,\n    onUserHover: props.onUserHover,\n    pinPermissions: props.pinPermissions,\n    reactionSelectorRef: reactionSelectorRef,\n    readBy: props.readBy,\n    renderText: props.renderText,\n    showDetailedReactions: showDetailedReactions,\n    threadList: props.threadList,\n    unsafeHTML: props.unsafeHTML,\n    userRoles: userRoles\n  });\n};","map":{"version":3,"sources":["/home/rupak/Desktop/Project/Chat Application/chatApp_client/node_modules/stream-chat-react/dist/components/Message/Message.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useCallback","useRef","useActionHandler","useDeleteHandler","useEditHandler","useFlagHandler","useMentionsHandler","useMuteHandler","useOpenThreadHandler","usePinHandler","useReactionClick","useReactionHandler","useRetryHandler","useUserHandler","useUserRole","areMessagePropsEqual","getMessageActions","MESSAGE_ACTIONS","useChannelActionContext","useChannelStateContext","useComponentContext","MessageProvider","MessageWithContext","props","canPin","groupedByUser","propMessage","Message","message","_a","messageActions","keys","propOnUserClick","onUserClick","propOnUserHover","onUserHover","userRoles","contextMessage","actionsEnabled","type","status","MessageUIComponent","_b","clearEdit","editing","setEdit","_c","onUserClickHandler","onUserHoverHandler","canDelete","canEdit","canFlag","canMute","canQuote","canReact","canReply","isMyMessage","messageActionsHandler","canPinPropToNotPass","messageActionsPropToNotPass","onlySenderCanEditPropToNotPass","onlySenderCanEdit","onUserClickPropToNotPass","onUserHoverPropToNotPass","userRolesPropToNotPass","rest","messageContextValue","clearEditingState","handleEdit","setEditingState","createElement","value","MemoizedMessage","memo","closeReactionSelectorOnClick","disableQuotedMessages","getDeleteMessageErrorNotification","getFlagMessageErrorNotification","getFlagMessageSuccessNotification","getMuteUserErrorNotification","getMuteUserSuccessNotification","getPinMessageErrorNotification","propOnMentionsClick","onMentionsClick","propOnMentionsHover","onMentionsHover","propOpenThread","openThread","pinPermissions","propRetrySendMessage","retrySendMessage","addNotification","mutes","reactionSelectorRef","handleAction","handleOpenThread","handleReaction","handleRetry","handleDelete","getErrorNotification","notify","handleFlag","getSuccessNotification","handleMute","handlePin","_d","undefined","isReactionEnabled","onReactionListClick","showDetailedReactions","additionalMessageInputProps","customMessageActions","endOfGroup","firstOfGroup","formatDate","groupStyles","initialMessage","lastReceivedId","messageListRect","onMentionsClickMessage","onMentionsHoverMessage","readBy","renderText","threadList","unsafeHTML"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useCallback, useRef } from 'react';\nimport { useActionHandler, useDeleteHandler, useEditHandler, useFlagHandler, useMentionsHandler, useMuteHandler, useOpenThreadHandler, usePinHandler, useReactionClick, useReactionHandler, useRetryHandler, useUserHandler, useUserRole, } from './hooks';\nimport { areMessagePropsEqual, getMessageActions, MESSAGE_ACTIONS } from './utils';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { MessageProvider } from '../../context/MessageContext';\nvar MessageWithContext = function (props) {\n    var canPin = props.canPin, groupedByUser = props.groupedByUser, propMessage = props.Message, message = props.message, _a = props.messageActions, messageActions = _a === void 0 ? Object.keys(MESSAGE_ACTIONS) : _a, propOnUserClick = props.onUserClick, propOnUserHover = props.onUserHover, userRoles = props.userRoles;\n    var contextMessage = useComponentContext('Message').Message;\n    var actionsEnabled = message.type === 'regular' && message.status === 'received';\n    var MessageUIComponent = propMessage || contextMessage;\n    var _b = useEditHandler(), clearEdit = _b.clearEdit, editing = _b.editing, setEdit = _b.setEdit;\n    var _c = useUserHandler(message, {\n        onUserClickHandler: propOnUserClick,\n        onUserHoverHandler: propOnUserHover,\n    }), onUserClick = _c.onUserClick, onUserHover = _c.onUserHover;\n    var canDelete = userRoles.canDelete, canEdit = userRoles.canEdit, canFlag = userRoles.canFlag, canMute = userRoles.canMute, canQuote = userRoles.canQuote, canReact = userRoles.canReact, canReply = userRoles.canReply, isMyMessage = userRoles.isMyMessage;\n    var messageActionsHandler = useCallback(function () {\n        return getMessageActions(messageActions, {\n            canDelete: canDelete,\n            canEdit: canEdit,\n            canFlag: canFlag,\n            canMute: canMute,\n            canPin: canPin,\n            canQuote: canQuote,\n            canReact: canReact,\n            canReply: canReply,\n        });\n    }, [canDelete, canEdit, canFlag, canMute, canPin, canQuote, canReact, canReply]);\n    var canPinPropToNotPass = props.canPin, // eslint-disable-line @typescript-eslint/no-unused-vars\n    messageActionsPropToNotPass = props.messageActions, // eslint-disable-line @typescript-eslint/no-unused-vars\n    onlySenderCanEditPropToNotPass = props.onlySenderCanEdit, // eslint-disable-line @typescript-eslint/no-unused-vars\n    onUserClickPropToNotPass = props.onUserClick, // eslint-disable-line @typescript-eslint/no-unused-vars\n    onUserHoverPropToNotPass = props.onUserHover, // eslint-disable-line @typescript-eslint/no-unused-vars\n    userRolesPropToNotPass = props.userRoles, // eslint-disable-line @typescript-eslint/no-unused-vars\n    rest = __rest(props, [\"canPin\", \"messageActions\", \"onlySenderCanEdit\", \"onUserClick\", \"onUserHover\", \"userRoles\"]);\n    var messageContextValue = __assign(__assign({}, rest), { actionsEnabled: actionsEnabled, clearEditingState: clearEdit, editing: editing, getMessageActions: messageActionsHandler, handleEdit: setEdit, isMyMessage: function () { return isMyMessage; }, onUserClick: onUserClick, onUserHover: onUserHover, setEditingState: setEdit });\n    return (React.createElement(MessageProvider, { value: messageContextValue },\n        React.createElement(MessageUIComponent, { groupedByUser: groupedByUser })));\n};\nvar MemoizedMessage = React.memo(MessageWithContext, areMessagePropsEqual);\n/**\n * The Message component is a context provider which implements all the logic required for rendering\n * an individual message. The actual UI of the message is delegated via the Message prop on Channel.\n */\nexport var Message = function (props) {\n    var closeReactionSelectorOnClick = props.closeReactionSelectorOnClick, disableQuotedMessages = props.disableQuotedMessages, getDeleteMessageErrorNotification = props.getDeleteMessageErrorNotification, getFlagMessageErrorNotification = props.getFlagMessageErrorNotification, getFlagMessageSuccessNotification = props.getFlagMessageSuccessNotification, getMuteUserErrorNotification = props.getMuteUserErrorNotification, getMuteUserSuccessNotification = props.getMuteUserSuccessNotification, getPinMessageErrorNotification = props.getPinMessageErrorNotification, message = props.message, _a = props.onlySenderCanEdit, onlySenderCanEdit = _a === void 0 ? false : _a, propOnMentionsClick = props.onMentionsClick, propOnMentionsHover = props.onMentionsHover, propOpenThread = props.openThread, pinPermissions = props.pinPermissions, propRetrySendMessage = props.retrySendMessage;\n    var addNotification = useChannelActionContext('Message').addNotification;\n    var mutes = useChannelStateContext('Message').mutes;\n    var reactionSelectorRef = useRef(null);\n    var handleAction = useActionHandler(message);\n    var handleOpenThread = useOpenThreadHandler(message, propOpenThread);\n    var handleReaction = useReactionHandler(message);\n    var handleRetry = useRetryHandler(propRetrySendMessage);\n    var userRoles = useUserRole(message, onlySenderCanEdit, disableQuotedMessages);\n    var handleDelete = useDeleteHandler(message, {\n        getErrorNotification: getDeleteMessageErrorNotification,\n        notify: addNotification,\n    });\n    var handleFlag = useFlagHandler(message, {\n        getErrorNotification: getFlagMessageErrorNotification,\n        getSuccessNotification: getFlagMessageSuccessNotification,\n        notify: addNotification,\n    });\n    var handleMute = useMuteHandler(message, {\n        getErrorNotification: getMuteUserErrorNotification,\n        getSuccessNotification: getMuteUserSuccessNotification,\n        notify: addNotification,\n    });\n    var _b = useMentionsHandler(message, {\n        onMentionsClick: propOnMentionsClick,\n        onMentionsHover: propOnMentionsHover,\n    }), onMentionsClick = _b.onMentionsClick, onMentionsHover = _b.onMentionsHover;\n    var _c = usePinHandler(message, pinPermissions, {\n        getErrorNotification: getPinMessageErrorNotification,\n        notify: addNotification,\n    }), canPin = _c.canPin, handlePin = _c.handlePin;\n    var _d = useReactionClick(message, reactionSelectorRef, undefined, closeReactionSelectorOnClick), isReactionEnabled = _d.isReactionEnabled, onReactionListClick = _d.onReactionListClick, showDetailedReactions = _d.showDetailedReactions;\n    return (React.createElement(MemoizedMessage, { additionalMessageInputProps: props.additionalMessageInputProps, canPin: canPin, customMessageActions: props.customMessageActions, disableQuotedMessages: props.disableQuotedMessages, endOfGroup: props.endOfGroup, firstOfGroup: props.firstOfGroup, formatDate: props.formatDate, groupedByUser: props.groupedByUser, groupStyles: props.groupStyles, handleAction: handleAction, handleDelete: handleDelete, handleFlag: handleFlag, handleMute: handleMute, handleOpenThread: handleOpenThread, handlePin: handlePin, handleReaction: handleReaction, handleRetry: handleRetry, initialMessage: props.initialMessage, isReactionEnabled: isReactionEnabled, lastReceivedId: props.lastReceivedId, message: message, Message: props.Message, messageActions: props.messageActions, messageListRect: props.messageListRect, mutes: mutes, onMentionsClickMessage: onMentionsClick, onMentionsHoverMessage: onMentionsHover, onReactionListClick: onReactionListClick, onUserClick: props.onUserClick, onUserHover: props.onUserHover, pinPermissions: props.pinPermissions, reactionSelectorRef: reactionSelectorRef, readBy: props.readBy, renderText: props.renderText, showDetailedReactions: showDetailedReactions, threadList: props.threadList, unsafeHTML: props.unsafeHTML, userRoles: userRoles }));\n};\n"]},"metadata":{},"sourceType":"module"}