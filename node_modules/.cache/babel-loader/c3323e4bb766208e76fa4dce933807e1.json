{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = void 0;\n\nvar Tokenizer_1 = __importDefault(require(\"./Tokenizer\"));\n\nvar formTags = new Set([\"input\", \"option\", \"optgroup\", \"select\", \"button\", \"datalist\", \"textarea\"]);\nvar pTag = new Set([\"p\"]);\nvar tableSectionTags = new Set([\"thead\", \"tbody\"]);\nvar ddtTags = new Set([\"dd\", \"dt\"]);\nvar rtpTags = new Set([\"rt\", \"rp\"]);\nvar openImpliesClose = new Map([[\"tr\", new Set([\"tr\", \"th\", \"td\"])], [\"th\", new Set([\"th\"])], [\"td\", new Set([\"thead\", \"th\", \"td\"])], [\"body\", new Set([\"head\", \"link\", \"script\"])], [\"li\", new Set([\"li\"])], [\"p\", pTag], [\"h1\", pTag], [\"h2\", pTag], [\"h3\", pTag], [\"h4\", pTag], [\"h5\", pTag], [\"h6\", pTag], [\"select\", formTags], [\"input\", formTags], [\"output\", formTags], [\"button\", formTags], [\"datalist\", formTags], [\"textarea\", formTags], [\"option\", new Set([\"option\"])], [\"optgroup\", new Set([\"optgroup\", \"option\"])], [\"dd\", ddtTags], [\"dt\", ddtTags], [\"address\", pTag], [\"article\", pTag], [\"aside\", pTag], [\"blockquote\", pTag], [\"details\", pTag], [\"div\", pTag], [\"dl\", pTag], [\"fieldset\", pTag], [\"figcaption\", pTag], [\"figure\", pTag], [\"footer\", pTag], [\"form\", pTag], [\"header\", pTag], [\"hr\", pTag], [\"main\", pTag], [\"nav\", pTag], [\"ol\", pTag], [\"pre\", pTag], [\"section\", pTag], [\"table\", pTag], [\"ul\", pTag], [\"rt\", rtpTags], [\"rp\", rtpTags], [\"tbody\", tableSectionTags], [\"tfoot\", tableSectionTags]]);\nvar voidElements = new Set([\"area\", \"base\", \"basefont\", \"br\", \"col\", \"command\", \"embed\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"keygen\", \"link\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"]);\nvar foreignContextElements = new Set([\"math\", \"svg\"]);\nvar htmlIntegrationElements = new Set([\"mi\", \"mo\", \"mn\", \"ms\", \"mtext\", \"annotation-xml\", \"foreignobject\", \"desc\", \"title\"]);\nvar reNameEnd = /\\s|\\//;\n\nvar Parser =\n/** @class */\nfunction () {\n  function Parser(cbs, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _a, _b, _c, _d, _e;\n\n    this.options = options;\n    /** The start index of the last event. */\n\n    this.startIndex = 0;\n    /** The end index of the last event. */\n\n    this.endIndex = 0;\n    /**\n     * Store the start index of the current open tag,\n     * so we can update the start index for attributes.\n     */\n\n    this.openTagStart = 0;\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribvalue = \"\";\n    this.attribs = null;\n    this.stack = [];\n    this.foreignContext = [];\n    this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n    this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : !options.xmlMode;\n    this.lowerCaseAttributeNames = (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : !options.xmlMode;\n    this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : Tokenizer_1.default)(this.options, this);\n    (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 ? void 0 : _e.call(_d, this);\n  } // Tokenizer event handlers\n\n  /** @internal */\n\n\n  Parser.prototype.ontext = function (data) {\n    var _a, _b;\n\n    var idx = this.tokenizer.getAbsoluteIndex();\n    this.endIndex = idx - 1;\n    (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n    this.startIndex = idx;\n  };\n\n  Parser.prototype.isVoidElement = function (name) {\n    return !this.options.xmlMode && voidElements.has(name);\n  };\n  /** @internal */\n\n\n  Parser.prototype.onopentagname = function (name) {\n    this.endIndex = this.tokenizer.getAbsoluteIndex();\n\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n\n    this.emitOpenTag(name);\n  };\n\n  Parser.prototype.emitOpenTag = function (name) {\n    var _a, _b, _c, _d;\n\n    this.openTagStart = this.startIndex;\n    this.tagname = name;\n    var impliesClose = !this.options.xmlMode && openImpliesClose.get(name);\n\n    if (impliesClose) {\n      while (this.stack.length > 0 && impliesClose.has(this.stack[this.stack.length - 1])) {\n        var el = this.stack.pop();\n        (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, el, true);\n      }\n    }\n\n    if (!this.isVoidElement(name)) {\n      this.stack.push(name);\n\n      if (foreignContextElements.has(name)) {\n        this.foreignContext.push(true);\n      } else if (htmlIntegrationElements.has(name)) {\n        this.foreignContext.push(false);\n      }\n    }\n\n    (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n    if (this.cbs.onopentag) this.attribs = {};\n  };\n\n  Parser.prototype.endOpenTag = function (isImplied) {\n    var _a, _b;\n\n    this.startIndex = this.openTagStart;\n    this.endIndex = this.tokenizer.getAbsoluteIndex();\n\n    if (this.attribs) {\n      (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n      this.attribs = null;\n    }\n\n    if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n      this.cbs.onclosetag(this.tagname, true);\n    }\n\n    this.tagname = \"\";\n  };\n  /** @internal */\n\n\n  Parser.prototype.onopentagend = function () {\n    this.endOpenTag(false); // Set `startIndex` for next node\n\n    this.startIndex = this.endIndex + 1;\n  };\n  /** @internal */\n\n\n  Parser.prototype.onclosetag = function (name) {\n    var _a, _b, _c, _d, _e, _f;\n\n    this.endIndex = this.tokenizer.getAbsoluteIndex();\n\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n\n    if (foreignContextElements.has(name) || htmlIntegrationElements.has(name)) {\n      this.foreignContext.pop();\n    }\n\n    if (!this.isVoidElement(name)) {\n      var pos = this.stack.lastIndexOf(name);\n\n      if (pos !== -1) {\n        if (this.cbs.onclosetag) {\n          var count = this.stack.length - pos;\n\n          while (count--) {\n            // We know the stack has sufficient elements.\n            this.cbs.onclosetag(this.stack.pop(), count !== 0);\n          }\n        } else this.stack.length = pos;\n      } else if (!this.options.xmlMode && name === \"p\") {\n        this.emitOpenTag(name);\n        this.closeCurrentTag(true);\n      }\n    } else if (!this.options.xmlMode && name === \"br\") {\n      // We can't go through `emitOpenTag` here, as `br` would be implicitly closed.\n      (_b = (_a = this.cbs).onopentagname) === null || _b === void 0 ? void 0 : _b.call(_a, name);\n      (_d = (_c = this.cbs).onopentag) === null || _d === void 0 ? void 0 : _d.call(_c, name, {}, true);\n      (_f = (_e = this.cbs).onclosetag) === null || _f === void 0 ? void 0 : _f.call(_e, name, false);\n    } // Set `startIndex` for next node\n\n\n    this.startIndex = this.endIndex + 1;\n  };\n  /** @internal */\n\n\n  Parser.prototype.onselfclosingtag = function () {\n    if (this.options.xmlMode || this.options.recognizeSelfClosing || this.foreignContext[this.foreignContext.length - 1]) {\n      this.closeCurrentTag(false); // Set `startIndex` for next node\n\n      this.startIndex = this.endIndex + 1;\n    } else {\n      // Ignore the fact that the tag is self-closing.\n      this.onopentagend();\n    }\n  };\n\n  Parser.prototype.closeCurrentTag = function (isOpenImplied) {\n    var _a, _b;\n\n    var name = this.tagname;\n    this.endOpenTag(isOpenImplied); // Self-closing tags will be on the top of the stack\n\n    if (this.stack[this.stack.length - 1] === name) {\n      // If the opening tag isn't implied, the closing tag has to be implied.\n      (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n      this.stack.pop();\n    }\n  };\n  /** @internal */\n\n\n  Parser.prototype.onattribname = function (name) {\n    this.startIndex = this.tokenizer.getAbsoluteSectionStart();\n\n    if (this.lowerCaseAttributeNames) {\n      name = name.toLowerCase();\n    }\n\n    this.attribname = name;\n  };\n  /** @internal */\n\n\n  Parser.prototype.onattribdata = function (value) {\n    this.attribvalue += value;\n  };\n  /** @internal */\n\n\n  Parser.prototype.onattribend = function (quote) {\n    var _a, _b;\n\n    this.endIndex = this.tokenizer.getAbsoluteIndex();\n    (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote);\n\n    if (this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n      this.attribs[this.attribname] = this.attribvalue;\n    }\n\n    this.attribname = \"\";\n    this.attribvalue = \"\";\n  };\n\n  Parser.prototype.getInstructionName = function (value) {\n    var idx = value.search(reNameEnd);\n    var name = idx < 0 ? value : value.substr(0, idx);\n\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n\n    return name;\n  };\n  /** @internal */\n\n\n  Parser.prototype.ondeclaration = function (value) {\n    this.endIndex = this.tokenizer.getAbsoluteIndex();\n\n    if (this.cbs.onprocessinginstruction) {\n      var name_1 = this.getInstructionName(value);\n      this.cbs.onprocessinginstruction(\"!\" + name_1, \"!\" + value);\n    } // Set `startIndex` for next node\n\n\n    this.startIndex = this.endIndex + 1;\n  };\n  /** @internal */\n\n\n  Parser.prototype.onprocessinginstruction = function (value) {\n    this.endIndex = this.tokenizer.getAbsoluteIndex();\n\n    if (this.cbs.onprocessinginstruction) {\n      var name_2 = this.getInstructionName(value);\n      this.cbs.onprocessinginstruction(\"?\" + name_2, \"?\" + value);\n    } // Set `startIndex` for next node\n\n\n    this.startIndex = this.endIndex + 1;\n  };\n  /** @internal */\n\n\n  Parser.prototype.oncomment = function (value) {\n    var _a, _b, _c, _d;\n\n    this.endIndex = this.tokenizer.getAbsoluteIndex();\n    (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c); // Set `startIndex` for next node\n\n    this.startIndex = this.endIndex + 1;\n  };\n  /** @internal */\n\n\n  Parser.prototype.oncdata = function (value) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n    this.endIndex = this.tokenizer.getAbsoluteIndex();\n\n    if (this.options.xmlMode || this.options.recognizeCDATA) {\n      (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n      (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n      (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n    } else {\n      (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, \"[CDATA[\" + value + \"]]\");\n      (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n    } // Set `startIndex` for next node\n\n\n    this.startIndex = this.endIndex + 1;\n  };\n  /** @internal */\n\n\n  Parser.prototype.onerror = function (err) {\n    var _a, _b;\n\n    (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n  };\n  /** @internal */\n\n\n  Parser.prototype.onend = function () {\n    var _a, _b;\n\n    if (this.cbs.onclosetag) {\n      // Set the end index for all remaining tags\n      this.endIndex = this.startIndex;\n\n      for (var i = this.stack.length; i > 0; this.cbs.onclosetag(this.stack[--i], true));\n    }\n\n    (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n  };\n  /**\n   * Resets the parser to a blank state, ready to parse a new HTML document\n   */\n\n\n  Parser.prototype.reset = function () {\n    var _a, _b, _c, _d;\n\n    (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n    this.tokenizer.reset();\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribs = null;\n    this.stack = [];\n    this.startIndex = 0;\n    this.endIndex = 0;\n    (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n  };\n  /**\n   * Resets the parser, then parses a complete document and\n   * pushes it to the handler.\n   *\n   * @param data Document to parse.\n   */\n\n\n  Parser.prototype.parseComplete = function (data) {\n    this.reset();\n    this.end(data);\n  };\n  /**\n   * Parses a chunk of data and calls the corresponding callbacks.\n   *\n   * @param chunk Chunk to parse.\n   */\n\n\n  Parser.prototype.write = function (chunk) {\n    this.tokenizer.write(chunk);\n  };\n  /**\n   * Parses the end of the buffer and clears the stack, calls onend.\n   *\n   * @param chunk Optional final chunk to parse.\n   */\n\n\n  Parser.prototype.end = function (chunk) {\n    this.tokenizer.end(chunk);\n  };\n  /**\n   * Pauses parsing. The parser won't emit events until `resume` is called.\n   */\n\n\n  Parser.prototype.pause = function () {\n    this.tokenizer.pause();\n  };\n  /**\n   * Resumes parsing after `pause` was called.\n   */\n\n\n  Parser.prototype.resume = function () {\n    this.tokenizer.resume();\n  };\n  /**\n   * Alias of `write`, for backwards compatibility.\n   *\n   * @param chunk Chunk to parse.\n   * @deprecated\n   */\n\n\n  Parser.prototype.parseChunk = function (chunk) {\n    this.write(chunk);\n  };\n  /**\n   * Alias of `end`, for backwards compatibility.\n   *\n   * @param chunk Optional final chunk to parse.\n   * @deprecated\n   */\n\n\n  Parser.prototype.done = function (chunk) {\n    this.end(chunk);\n  };\n\n  return Parser;\n}();\n\nexports.Parser = Parser;","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/htmlparser2/lib/Parser.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Parser","Tokenizer_1","require","formTags","Set","pTag","tableSectionTags","ddtTags","rtpTags","openImpliesClose","Map","voidElements","foreignContextElements","htmlIntegrationElements","reNameEnd","cbs","options","_a","_b","_c","_d","_e","startIndex","endIndex","openTagStart","tagname","attribname","attribvalue","attribs","stack","foreignContext","lowerCaseTagNames","lowerCaseTags","xmlMode","lowerCaseAttributeNames","tokenizer","Tokenizer","default","onparserinit","call","prototype","ontext","data","idx","getAbsoluteIndex","isVoidElement","name","has","onopentagname","toLowerCase","emitOpenTag","impliesClose","get","length","el","pop","onclosetag","push","onopentag","endOpenTag","isImplied","onopentagend","_f","pos","lastIndexOf","count","closeCurrentTag","onselfclosingtag","recognizeSelfClosing","isOpenImplied","onattribname","getAbsoluteSectionStart","onattribdata","onattribend","quote","onattribute","hasOwnProperty","getInstructionName","search","substr","ondeclaration","onprocessinginstruction","name_1","name_2","oncomment","oncommentend","oncdata","_g","_h","_j","_k","recognizeCDATA","oncdatastart","oncdataend","onerror","err","onend","i","reset","onreset","parseComplete","end","write","chunk","pause","resume","parseChunk","done"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Parser = void 0;\nvar Tokenizer_1 = __importDefault(require(\"./Tokenizer\"));\nvar formTags = new Set([\n    \"input\",\n    \"option\",\n    \"optgroup\",\n    \"select\",\n    \"button\",\n    \"datalist\",\n    \"textarea\",\n]);\nvar pTag = new Set([\"p\"]);\nvar tableSectionTags = new Set([\"thead\", \"tbody\"]);\nvar ddtTags = new Set([\"dd\", \"dt\"]);\nvar rtpTags = new Set([\"rt\", \"rp\"]);\nvar openImpliesClose = new Map([\n    [\"tr\", new Set([\"tr\", \"th\", \"td\"])],\n    [\"th\", new Set([\"th\"])],\n    [\"td\", new Set([\"thead\", \"th\", \"td\"])],\n    [\"body\", new Set([\"head\", \"link\", \"script\"])],\n    [\"li\", new Set([\"li\"])],\n    [\"p\", pTag],\n    [\"h1\", pTag],\n    [\"h2\", pTag],\n    [\"h3\", pTag],\n    [\"h4\", pTag],\n    [\"h5\", pTag],\n    [\"h6\", pTag],\n    [\"select\", formTags],\n    [\"input\", formTags],\n    [\"output\", formTags],\n    [\"button\", formTags],\n    [\"datalist\", formTags],\n    [\"textarea\", formTags],\n    [\"option\", new Set([\"option\"])],\n    [\"optgroup\", new Set([\"optgroup\", \"option\"])],\n    [\"dd\", ddtTags],\n    [\"dt\", ddtTags],\n    [\"address\", pTag],\n    [\"article\", pTag],\n    [\"aside\", pTag],\n    [\"blockquote\", pTag],\n    [\"details\", pTag],\n    [\"div\", pTag],\n    [\"dl\", pTag],\n    [\"fieldset\", pTag],\n    [\"figcaption\", pTag],\n    [\"figure\", pTag],\n    [\"footer\", pTag],\n    [\"form\", pTag],\n    [\"header\", pTag],\n    [\"hr\", pTag],\n    [\"main\", pTag],\n    [\"nav\", pTag],\n    [\"ol\", pTag],\n    [\"pre\", pTag],\n    [\"section\", pTag],\n    [\"table\", pTag],\n    [\"ul\", pTag],\n    [\"rt\", rtpTags],\n    [\"rp\", rtpTags],\n    [\"tbody\", tableSectionTags],\n    [\"tfoot\", tableSectionTags],\n]);\nvar voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\nvar foreignContextElements = new Set([\"math\", \"svg\"]);\nvar htmlIntegrationElements = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignobject\",\n    \"desc\",\n    \"title\",\n]);\nvar reNameEnd = /\\s|\\//;\nvar Parser = /** @class */ (function () {\n    function Parser(cbs, options) {\n        if (options === void 0) { options = {}; }\n        var _a, _b, _c, _d, _e;\n        this.options = options;\n        /** The start index of the last event. */\n        this.startIndex = 0;\n        /** The end index of the last event. */\n        this.endIndex = 0;\n        /**\n         * Store the start index of the current open tag,\n         * so we can update the start index for attributes.\n         */\n        this.openTagStart = 0;\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.foreignContext = [];\n        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n        this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : !options.xmlMode;\n        this.lowerCaseAttributeNames =\n            (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : !options.xmlMode;\n        this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : Tokenizer_1.default)(this.options, this);\n        (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 ? void 0 : _e.call(_d, this);\n    }\n    // Tokenizer event handlers\n    /** @internal */\n    Parser.prototype.ontext = function (data) {\n        var _a, _b;\n        var idx = this.tokenizer.getAbsoluteIndex();\n        this.endIndex = idx - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n        this.startIndex = idx;\n    };\n    Parser.prototype.isVoidElement = function (name) {\n        return !this.options.xmlMode && voidElements.has(name);\n    };\n    /** @internal */\n    Parser.prototype.onopentagname = function (name) {\n        this.endIndex = this.tokenizer.getAbsoluteIndex();\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        this.emitOpenTag(name);\n    };\n    Parser.prototype.emitOpenTag = function (name) {\n        var _a, _b, _c, _d;\n        this.openTagStart = this.startIndex;\n        this.tagname = name;\n        var impliesClose = !this.options.xmlMode && openImpliesClose.get(name);\n        if (impliesClose) {\n            while (this.stack.length > 0 &&\n                impliesClose.has(this.stack[this.stack.length - 1])) {\n                var el = this.stack.pop();\n                (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, el, true);\n            }\n        }\n        if (!this.isVoidElement(name)) {\n            this.stack.push(name);\n            if (foreignContextElements.has(name)) {\n                this.foreignContext.push(true);\n            }\n            else if (htmlIntegrationElements.has(name)) {\n                this.foreignContext.push(false);\n            }\n        }\n        (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n        if (this.cbs.onopentag)\n            this.attribs = {};\n    };\n    Parser.prototype.endOpenTag = function (isImplied) {\n        var _a, _b;\n        this.startIndex = this.openTagStart;\n        this.endIndex = this.tokenizer.getAbsoluteIndex();\n        if (this.attribs) {\n            (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n            this.attribs = null;\n        }\n        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n            this.cbs.onclosetag(this.tagname, true);\n        }\n        this.tagname = \"\";\n    };\n    /** @internal */\n    Parser.prototype.onopentagend = function () {\n        this.endOpenTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = this.endIndex + 1;\n    };\n    /** @internal */\n    Parser.prototype.onclosetag = function (name) {\n        var _a, _b, _c, _d, _e, _f;\n        this.endIndex = this.tokenizer.getAbsoluteIndex();\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        if (foreignContextElements.has(name) ||\n            htmlIntegrationElements.has(name)) {\n            this.foreignContext.pop();\n        }\n        if (!this.isVoidElement(name)) {\n            var pos = this.stack.lastIndexOf(name);\n            if (pos !== -1) {\n                if (this.cbs.onclosetag) {\n                    var count = this.stack.length - pos;\n                    while (count--) {\n                        // We know the stack has sufficient elements.\n                        this.cbs.onclosetag(this.stack.pop(), count !== 0);\n                    }\n                }\n                else\n                    this.stack.length = pos;\n            }\n            else if (!this.options.xmlMode && name === \"p\") {\n                this.emitOpenTag(name);\n                this.closeCurrentTag(true);\n            }\n        }\n        else if (!this.options.xmlMode && name === \"br\") {\n            // We can't go through `emitOpenTag` here, as `br` would be implicitly closed.\n            (_b = (_a = this.cbs).onopentagname) === null || _b === void 0 ? void 0 : _b.call(_a, name);\n            (_d = (_c = this.cbs).onopentag) === null || _d === void 0 ? void 0 : _d.call(_c, name, {}, true);\n            (_f = (_e = this.cbs).onclosetag) === null || _f === void 0 ? void 0 : _f.call(_e, name, false);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = this.endIndex + 1;\n    };\n    /** @internal */\n    Parser.prototype.onselfclosingtag = function () {\n        if (this.options.xmlMode ||\n            this.options.recognizeSelfClosing ||\n            this.foreignContext[this.foreignContext.length - 1]) {\n            this.closeCurrentTag(false);\n            // Set `startIndex` for next node\n            this.startIndex = this.endIndex + 1;\n        }\n        else {\n            // Ignore the fact that the tag is self-closing.\n            this.onopentagend();\n        }\n    };\n    Parser.prototype.closeCurrentTag = function (isOpenImplied) {\n        var _a, _b;\n        var name = this.tagname;\n        this.endOpenTag(isOpenImplied);\n        // Self-closing tags will be on the top of the stack\n        if (this.stack[this.stack.length - 1] === name) {\n            // If the opening tag isn't implied, the closing tag has to be implied.\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n            this.stack.pop();\n        }\n    };\n    /** @internal */\n    Parser.prototype.onattribname = function (name) {\n        this.startIndex = this.tokenizer.getAbsoluteSectionStart();\n        if (this.lowerCaseAttributeNames) {\n            name = name.toLowerCase();\n        }\n        this.attribname = name;\n    };\n    /** @internal */\n    Parser.prototype.onattribdata = function (value) {\n        this.attribvalue += value;\n    };\n    /** @internal */\n    Parser.prototype.onattribend = function (quote) {\n        var _a, _b;\n        this.endIndex = this.tokenizer.getAbsoluteIndex();\n        (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote);\n        if (this.attribs &&\n            !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n            this.attribs[this.attribname] = this.attribvalue;\n        }\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n    };\n    Parser.prototype.getInstructionName = function (value) {\n        var idx = value.search(reNameEnd);\n        var name = idx < 0 ? value : value.substr(0, idx);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        return name;\n    };\n    /** @internal */\n    Parser.prototype.ondeclaration = function (value) {\n        this.endIndex = this.tokenizer.getAbsoluteIndex();\n        if (this.cbs.onprocessinginstruction) {\n            var name_1 = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(\"!\" + name_1, \"!\" + value);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = this.endIndex + 1;\n    };\n    /** @internal */\n    Parser.prototype.onprocessinginstruction = function (value) {\n        this.endIndex = this.tokenizer.getAbsoluteIndex();\n        if (this.cbs.onprocessinginstruction) {\n            var name_2 = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(\"?\" + name_2, \"?\" + value);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = this.endIndex + 1;\n    };\n    /** @internal */\n    Parser.prototype.oncomment = function (value) {\n        var _a, _b, _c, _d;\n        this.endIndex = this.tokenizer.getAbsoluteIndex();\n        (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n        (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n        // Set `startIndex` for next node\n        this.startIndex = this.endIndex + 1;\n    };\n    /** @internal */\n    Parser.prototype.oncdata = function (value) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.endIndex = this.tokenizer.getAbsoluteIndex();\n        if (this.options.xmlMode || this.options.recognizeCDATA) {\n            (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n            (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n        }\n        else {\n            (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, \"[CDATA[\" + value + \"]]\");\n            (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = this.endIndex + 1;\n    };\n    /** @internal */\n    Parser.prototype.onerror = function (err) {\n        var _a, _b;\n        (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    };\n    /** @internal */\n    Parser.prototype.onend = function () {\n        var _a, _b;\n        if (this.cbs.onclosetag) {\n            // Set the end index for all remaining tags\n            this.endIndex = this.startIndex;\n            for (var i = this.stack.length; i > 0; this.cbs.onclosetag(this.stack[--i], true))\n                ;\n        }\n        (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */\n    Parser.prototype.reset = function () {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.tokenizer.reset();\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.startIndex = 0;\n        this.endIndex = 0;\n        (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n    };\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */\n    Parser.prototype.parseComplete = function (data) {\n        this.reset();\n        this.end(data);\n    };\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */\n    Parser.prototype.write = function (chunk) {\n        this.tokenizer.write(chunk);\n    };\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */\n    Parser.prototype.end = function (chunk) {\n        this.tokenizer.end(chunk);\n    };\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */\n    Parser.prototype.pause = function () {\n        this.tokenizer.pause();\n    };\n    /**\n     * Resumes parsing after `pause` was called.\n     */\n    Parser.prototype.resume = function () {\n        this.tokenizer.resume();\n    };\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */\n    Parser.prototype.parseChunk = function (chunk) {\n        this.write(chunk);\n    };\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */\n    Parser.prototype.done = function (chunk) {\n        this.end(chunk);\n    };\n    return Parser;\n}());\nexports.Parser = Parser;\n"]},"metadata":{},"sourceType":"script"}