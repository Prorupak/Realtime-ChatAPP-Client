{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nimport { useEffect } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport var useUserPresenceChangedListener = function useUserPresenceChangedListener(setChannels) {\n  var client = useChatContext('useUserPresenceChangedListener').client;\n  useEffect(function () {\n    var handleEvent = function handleEvent(event) {\n      setChannels(function (channels) {\n        var newChannels = channels.map(function (channel) {\n          var _a;\n\n          if (!((_a = event.user) === null || _a === void 0 ? void 0 : _a.id) || !channel.state.members[event.user.id]) {\n            return channel;\n          }\n\n          var newChannel = channel; // dumb workaround for linter\n\n          newChannel.state.members[event.user.id].user = event.user;\n          return newChannel;\n        });\n        return __spreadArray([], newChannels);\n      });\n    };\n\n    client.on('user.presence.changed', handleEvent);\n    return function () {\n      client.off('user.presence.changed', handleEvent);\n    };\n  }, []);\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/ChannelList/hooks/useUserPresenceChangedListener.js"],"names":["__spreadArray","to","from","i","il","length","j","useEffect","useChatContext","useUserPresenceChangedListener","setChannels","client","handleEvent","event","channels","newChannels","map","channel","_a","user","id","state","members","newChannel","on","off"],"mappings":"AAAA,IAAIA,aAAa,GAAI,QAAQ,KAAKA,aAAd,IAAgC,UAAUC,EAAV,EAAcC,IAAd,EAAoB;AACpE,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGF,IAAI,CAACG,MAArB,EAA6BC,CAAC,GAAGL,EAAE,CAACI,MAAzC,EAAiDF,CAAC,GAAGC,EAArD,EAAyDD,CAAC,IAAIG,CAAC,EAA/D;AACIL,IAAAA,EAAE,CAACK,CAAD,CAAF,GAAQJ,IAAI,CAACC,CAAD,CAAZ;AADJ;;AAEA,SAAOF,EAAP;AACH,CAJD;;AAKA,SAASM,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAO,IAAIC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAUC,WAAV,EAAuB;AAC/D,MAAIC,MAAM,GAAGH,cAAc,CAAC,gCAAD,CAAd,CAAiDG,MAA9D;AACAJ,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIK,WAAW,GAAG,SAAdA,WAAc,CAAUC,KAAV,EAAiB;AAC/BH,MAAAA,WAAW,CAAC,UAAUI,QAAV,EAAoB;AAC5B,YAAIC,WAAW,GAAGD,QAAQ,CAACE,GAAT,CAAa,UAAUC,OAAV,EAAmB;AAC9C,cAAIC,EAAJ;;AACA,cAAI,EAAE,CAACA,EAAE,GAAGL,KAAK,CAACM,IAAZ,MAAsB,IAAtB,IAA8BD,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuDA,EAAE,CAACE,EAA5D,KAAmE,CAACH,OAAO,CAACI,KAAR,CAAcC,OAAd,CAAsBT,KAAK,CAACM,IAAN,CAAWC,EAAjC,CAAxE,EAA8G;AAC1G,mBAAOH,OAAP;AACH;;AACD,cAAIM,UAAU,GAAGN,OAAjB,CAL8C,CAKpB;;AAC1BM,UAAAA,UAAU,CAACF,KAAX,CAAiBC,OAAjB,CAAyBT,KAAK,CAACM,IAAN,CAAWC,EAApC,EAAwCD,IAAxC,GAA+CN,KAAK,CAACM,IAArD;AACA,iBAAOI,UAAP;AACH,SARiB,CAAlB;AASA,eAAOvB,aAAa,CAAC,EAAD,EAAKe,WAAL,CAApB;AACH,OAXU,CAAX;AAYH,KAbD;;AAcAJ,IAAAA,MAAM,CAACa,EAAP,CAAU,uBAAV,EAAmCZ,WAAnC;AACA,WAAO,YAAY;AACfD,MAAAA,MAAM,CAACc,GAAP,CAAW,uBAAX,EAAoCb,WAApC;AACH,KAFD;AAGH,GAnBQ,EAmBN,EAnBM,CAAT;AAoBH,CAtBM","sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { useEffect } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport var useUserPresenceChangedListener = function (setChannels) {\n    var client = useChatContext('useUserPresenceChangedListener').client;\n    useEffect(function () {\n        var handleEvent = function (event) {\n            setChannels(function (channels) {\n                var newChannels = channels.map(function (channel) {\n                    var _a;\n                    if (!((_a = event.user) === null || _a === void 0 ? void 0 : _a.id) || !channel.state.members[event.user.id]) {\n                        return channel;\n                    }\n                    var newChannel = channel; // dumb workaround for linter\n                    newChannel.state.members[event.user.id].user = event.user;\n                    return newChannel;\n                });\n                return __spreadArray([], newChannels);\n            });\n        };\n        client.on('user.presence.changed', handleEvent);\n        return function () {\n            client.off('user.presence.changed', handleEvent);\n        };\n    }, []);\n};\n"]},"metadata":{},"sourceType":"module"}