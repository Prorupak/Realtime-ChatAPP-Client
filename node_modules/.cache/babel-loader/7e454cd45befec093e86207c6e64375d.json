{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useBreakpoint } from './useBreakpoint';\nexport var useMobilePress = function useMobilePress() {\n  var _a = useState(null),\n      targetMessage = _a[0],\n      setTargetMessage = _a[1];\n\n  var breakpoint = useBreakpoint();\n\n  var handleMobilePress = function handleMobilePress(event) {\n    if (event.target instanceof HTMLElement && breakpoint.device === 'mobile') {\n      var closestMessage = event.target.closest('.str-chat__message-simple');\n      if (!closestMessage) return;\n      setTargetMessage(closestMessage);\n\n      if (closestMessage.classList.contains('mobile-press')) {\n        closestMessage.classList.remove('mobile-press');\n      } else {\n        closestMessage.classList.add('mobile-press');\n      }\n    }\n  };\n\n  useEffect(function () {\n    function handleClick(event) {\n      var isClickInside = targetMessage === null || targetMessage === void 0 ? void 0 : targetMessage.contains(event.target);\n\n      if (!isClickInside && targetMessage) {\n        targetMessage.classList.remove('mobile-press');\n      }\n    }\n\n    if (breakpoint.device === 'mobile') {\n      document.addEventListener('click', handleClick);\n    }\n\n    return function () {\n      return document.removeEventListener('click', handleClick);\n    };\n  }, [breakpoint, targetMessage]);\n  return {\n    handleMobilePress: handleMobilePress\n  };\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/Message/hooks/useMobilePress.js"],"names":["useEffect","useState","useBreakpoint","useMobilePress","_a","targetMessage","setTargetMessage","breakpoint","handleMobilePress","event","target","HTMLElement","device","closestMessage","closest","classList","contains","remove","add","handleClick","isClickInside","document","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,GAAY;AACpC,MAAIC,EAAE,GAAGH,QAAQ,CAAC,IAAD,CAAjB;AAAA,MAAyBI,aAAa,GAAGD,EAAE,CAAC,CAAD,CAA3C;AAAA,MAAgDE,gBAAgB,GAAGF,EAAE,CAAC,CAAD,CAArE;;AACA,MAAIG,UAAU,GAAGL,aAAa,EAA9B;;AACA,MAAIM,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,KAAV,EAAiB;AACrC,QAAIA,KAAK,CAACC,MAAN,YAAwBC,WAAxB,IAAuCJ,UAAU,CAACK,MAAX,KAAsB,QAAjE,EAA2E;AACvE,UAAIC,cAAc,GAAGJ,KAAK,CAACC,MAAN,CAAaI,OAAb,CAAqB,2BAArB,CAArB;AACA,UAAI,CAACD,cAAL,EACI;AACJP,MAAAA,gBAAgB,CAACO,cAAD,CAAhB;;AACA,UAAIA,cAAc,CAACE,SAAf,CAAyBC,QAAzB,CAAkC,cAAlC,CAAJ,EAAuD;AACnDH,QAAAA,cAAc,CAACE,SAAf,CAAyBE,MAAzB,CAAgC,cAAhC;AACH,OAFD,MAGK;AACDJ,QAAAA,cAAc,CAACE,SAAf,CAAyBG,GAAzB,CAA6B,cAA7B;AACH;AACJ;AACJ,GAbD;;AAcAlB,EAAAA,SAAS,CAAC,YAAY;AAClB,aAASmB,WAAT,CAAqBV,KAArB,EAA4B;AACxB,UAAIW,aAAa,GAAGf,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAACW,QAAd,CAAuBP,KAAK,CAACC,MAA7B,CAAlF;;AACA,UAAI,CAACU,aAAD,IAAkBf,aAAtB,EAAqC;AACjCA,QAAAA,aAAa,CAACU,SAAd,CAAwBE,MAAxB,CAA+B,cAA/B;AACH;AACJ;;AACD,QAAIV,UAAU,CAACK,MAAX,KAAsB,QAA1B,EAAoC;AAChCS,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCH,WAAnC;AACH;;AACD,WAAO,YAAY;AAAE,aAAOE,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCJ,WAAtC,CAAP;AAA4D,KAAjF;AACH,GAXQ,EAWN,CAACZ,UAAD,EAAaF,aAAb,CAXM,CAAT;AAYA,SAAO;AAAEG,IAAAA,iBAAiB,EAAEA;AAArB,GAAP;AACH,CA9BM","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useBreakpoint } from './useBreakpoint';\nexport var useMobilePress = function () {\n    var _a = useState(null), targetMessage = _a[0], setTargetMessage = _a[1];\n    var breakpoint = useBreakpoint();\n    var handleMobilePress = function (event) {\n        if (event.target instanceof HTMLElement && breakpoint.device === 'mobile') {\n            var closestMessage = event.target.closest('.str-chat__message-simple');\n            if (!closestMessage)\n                return;\n            setTargetMessage(closestMessage);\n            if (closestMessage.classList.contains('mobile-press')) {\n                closestMessage.classList.remove('mobile-press');\n            }\n            else {\n                closestMessage.classList.add('mobile-press');\n            }\n        }\n    };\n    useEffect(function () {\n        function handleClick(event) {\n            var isClickInside = targetMessage === null || targetMessage === void 0 ? void 0 : targetMessage.contains(event.target);\n            if (!isClickInside && targetMessage) {\n                targetMessage.classList.remove('mobile-press');\n            }\n        }\n        if (breakpoint.device === 'mobile') {\n            document.addEventListener('click', handleClick);\n        }\n        return function () { return document.removeEventListener('click', handleClick); };\n    }, [breakpoint, targetMessage]);\n    return { handleMobilePress: handleMobilePress };\n};\n"]},"metadata":{},"sourceType":"module"}