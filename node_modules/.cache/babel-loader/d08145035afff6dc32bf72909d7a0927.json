{"ast":null,"code":"import React from 'react';\nimport Carousel, { Modal, ModalGateway } from 'react-images';\nimport { ModalImage } from './ModalImage';\nexport var ModalComponent = function (props) {\n  var images = props.images,\n      index = props.index,\n      modalIsOpen = props.modalIsOpen,\n      toggleModal = props.toggleModal;\n  return React.createElement(ModalGateway, null, modalIsOpen ? React.createElement(Modal, {\n    onClose: toggleModal\n  }, React.createElement(Carousel, {\n    components: {\n      // @ts-expect-error\n      View: ModalImage\n    },\n    currentIndex: index,\n    views: images\n  })) : null);\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/Gallery/ModalWrapper.js"],"names":["React","Carousel","Modal","ModalGateway","ModalImage","ModalComponent","props","images","index","modalIsOpen","toggleModal","createElement","onClose","components","View","currentIndex","views"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,KAAnB,EAA0BC,YAA1B,QAA8C,cAA9C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,IAAIC,cAAc,GAAG,UAAUC,KAAV,EAAiB;AACzC,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MAA2BC,KAAK,GAAGF,KAAK,CAACE,KAAzC;AAAA,MAAgDC,WAAW,GAAGH,KAAK,CAACG,WAApE;AAAA,MAAiFC,WAAW,GAAGJ,KAAK,CAACI,WAArG;AACA,SAAQV,KAAK,CAACW,aAAN,CAAoBR,YAApB,EAAkC,IAAlC,EAAwCM,WAAW,GAAIT,KAAK,CAACW,aAAN,CAAoBT,KAApB,EAA2B;AAAEU,IAAAA,OAAO,EAAEF;AAAX,GAA3B,EAC3DV,KAAK,CAACW,aAAN,CAAoBV,QAApB,EAA8B;AAAEY,IAAAA,UAAU,EAAE;AACpC;AACAC,MAAAA,IAAI,EAAEV;AAF8B,KAAd;AAGvBW,IAAAA,YAAY,EAAEP,KAHS;AAGFQ,IAAAA,KAAK,EAAET;AAHL,GAA9B,CAD2D,CAAJ,GAIN,IAJ7C,CAAR;AAKH,CAPM","sourcesContent":["import React from 'react';\nimport Carousel, { Modal, ModalGateway } from 'react-images';\nimport { ModalImage } from './ModalImage';\nexport var ModalComponent = function (props) {\n    var images = props.images, index = props.index, modalIsOpen = props.modalIsOpen, toggleModal = props.toggleModal;\n    return (React.createElement(ModalGateway, null, modalIsOpen ? (React.createElement(Modal, { onClose: toggleModal },\n        React.createElement(Carousel, { components: {\n                // @ts-expect-error\n                View: ModalImage,\n            }, currentIndex: index, views: images }))) : null));\n};\n"]},"metadata":{},"sourceType":"module"}