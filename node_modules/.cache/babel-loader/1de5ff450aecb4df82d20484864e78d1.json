{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { MessageActionsBox } from './MessageActionsBox';\nimport { ActionsIcon as DefaultActionsIcon } from '../Message/icons';\nimport { isUserMuted } from '../Message/utils';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useMessageContext } from '../../context/MessageContext';\nexport var MessageActions = function MessageActions(props) {\n  var _a = props.ActionsIcon,\n      ActionsIcon = _a === void 0 ? DefaultActionsIcon : _a,\n      _b = props.customWrapperClass,\n      customWrapperClass = _b === void 0 ? '' : _b,\n      propGetMessageActions = props.getMessageActions,\n      propHandleDelete = props.handleDelete,\n      propHandleFlag = props.handleFlag,\n      propHandleMute = props.handleMute,\n      propHandlePin = props.handlePin,\n      inline = props.inline,\n      propMessage = props.message,\n      messageWrapperRef = props.messageWrapperRef,\n      mine = props.mine;\n  var mutes = useChatContext('MessageActions').mutes;\n\n  var _c = useMessageContext('MessageActions'),\n      customMessageActions = _c.customMessageActions,\n      contextGetMessageActions = _c.getMessageActions,\n      contextHandleDelete = _c.handleDelete,\n      contextHandleFlag = _c.handleFlag,\n      contextHandleMute = _c.handleMute,\n      contextHandlePin = _c.handlePin,\n      isMyMessage = _c.isMyMessage,\n      contextMessage = _c.message,\n      setEditingState = _c.setEditingState;\n\n  var getMessageActions = propGetMessageActions || contextGetMessageActions;\n  var handleDelete = propHandleDelete || contextHandleDelete;\n  var handleFlag = propHandleFlag || contextHandleFlag;\n  var handleMute = propHandleMute || contextHandleMute;\n  var handlePin = propHandlePin || contextHandlePin;\n  var message = propMessage || contextMessage;\n\n  var _d = useState(false),\n      actionsBoxOpen = _d[0],\n      setActionsBoxOpen = _d[1];\n\n  var isMuted = useCallback(function () {\n    return isUserMuted(message, mutes);\n  }, [message, mutes]);\n  var hideOptions = useCallback(function () {\n    return setActionsBoxOpen(false);\n  }, []);\n  var messageActions = getMessageActions();\n  var messageDeletedAt = !!(message === null || message === void 0 ? void 0 : message.deleted_at);\n  useEffect(function () {\n    if (messageWrapperRef === null || messageWrapperRef === void 0 ? void 0 : messageWrapperRef.current) {\n      messageWrapperRef.current.addEventListener('mouseleave', hideOptions);\n    }\n  }, [hideOptions, messageWrapperRef]);\n  useEffect(function () {\n    if (messageDeletedAt) {\n      document.removeEventListener('click', hideOptions);\n    }\n  }, [hideOptions, messageDeletedAt]);\n  useEffect(function () {\n    if (actionsBoxOpen) {\n      document.addEventListener('click', hideOptions);\n    } else {\n      document.removeEventListener('click', hideOptions);\n    }\n\n    return function () {\n      return document.removeEventListener('click', hideOptions);\n    };\n  }, [actionsBoxOpen, hideOptions]);\n  if (!messageActions.length && !customMessageActions) return null;\n  return React.createElement(MessageActionsWrapper, {\n    customWrapperClass: customWrapperClass,\n    inline: inline,\n    setActionsBoxOpen: setActionsBoxOpen\n  }, React.createElement(MessageActionsBox, {\n    getMessageActions: getMessageActions,\n    handleDelete: handleDelete,\n    handleEdit: setEditingState,\n    handleFlag: handleFlag,\n    handleMute: handleMute,\n    handlePin: handlePin,\n    isUserMuted: isMuted,\n    mine: mine ? mine() : isMyMessage(),\n    open: actionsBoxOpen\n  }), React.createElement(ActionsIcon, null));\n};\n\nvar MessageActionsWrapper = function MessageActionsWrapper(props) {\n  var children = props.children,\n      customWrapperClass = props.customWrapperClass,\n      inline = props.inline,\n      setActionsBoxOpen = props.setActionsBoxOpen;\n  var defaultWrapperClass = 'str-chat__message-simple__actions__action str-chat__message-simple__actions__action--options';\n  var wrapperClass = customWrapperClass || defaultWrapperClass;\n\n  var onClickOptionsAction = function onClickOptionsAction(event) {\n    event.stopPropagation();\n    setActionsBoxOpen(true);\n  };\n\n  var wrapperProps = {\n    className: wrapperClass,\n    'data-testid': 'message-actions',\n    onClick: onClickOptionsAction\n  };\n  if (inline) return React.createElement(\"span\", __assign({}, wrapperProps), children);\n  return React.createElement(\"div\", __assign({}, wrapperProps), children);\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/MessageActions/MessageActions.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useCallback","useEffect","useState","MessageActionsBox","ActionsIcon","DefaultActionsIcon","isUserMuted","useChatContext","useMessageContext","MessageActions","props","_a","_b","customWrapperClass","propGetMessageActions","getMessageActions","propHandleDelete","handleDelete","propHandleFlag","handleFlag","propHandleMute","handleMute","propHandlePin","handlePin","inline","propMessage","message","messageWrapperRef","mine","mutes","_c","customMessageActions","contextGetMessageActions","contextHandleDelete","contextHandleFlag","contextHandleMute","contextHandlePin","isMyMessage","contextMessage","setEditingState","_d","actionsBoxOpen","setActionsBoxOpen","isMuted","hideOptions","messageActions","messageDeletedAt","deleted_at","current","addEventListener","document","removeEventListener","createElement","MessageActionsWrapper","handleEdit","open","children","defaultWrapperClass","wrapperClass","onClickOptionsAction","event","stopPropagation","wrapperProps","className","onClick"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { MessageActionsBox } from './MessageActionsBox';\nimport { ActionsIcon as DefaultActionsIcon } from '../Message/icons';\nimport { isUserMuted } from '../Message/utils';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useMessageContext } from '../../context/MessageContext';\nexport var MessageActions = function (props) {\n    var _a = props.ActionsIcon, ActionsIcon = _a === void 0 ? DefaultActionsIcon : _a, _b = props.customWrapperClass, customWrapperClass = _b === void 0 ? '' : _b, propGetMessageActions = props.getMessageActions, propHandleDelete = props.handleDelete, propHandleFlag = props.handleFlag, propHandleMute = props.handleMute, propHandlePin = props.handlePin, inline = props.inline, propMessage = props.message, messageWrapperRef = props.messageWrapperRef, mine = props.mine;\n    var mutes = useChatContext('MessageActions').mutes;\n    var _c = useMessageContext('MessageActions'), customMessageActions = _c.customMessageActions, contextGetMessageActions = _c.getMessageActions, contextHandleDelete = _c.handleDelete, contextHandleFlag = _c.handleFlag, contextHandleMute = _c.handleMute, contextHandlePin = _c.handlePin, isMyMessage = _c.isMyMessage, contextMessage = _c.message, setEditingState = _c.setEditingState;\n    var getMessageActions = propGetMessageActions || contextGetMessageActions;\n    var handleDelete = propHandleDelete || contextHandleDelete;\n    var handleFlag = propHandleFlag || contextHandleFlag;\n    var handleMute = propHandleMute || contextHandleMute;\n    var handlePin = propHandlePin || contextHandlePin;\n    var message = propMessage || contextMessage;\n    var _d = useState(false), actionsBoxOpen = _d[0], setActionsBoxOpen = _d[1];\n    var isMuted = useCallback(function () { return isUserMuted(message, mutes); }, [message, mutes]);\n    var hideOptions = useCallback(function () { return setActionsBoxOpen(false); }, []);\n    var messageActions = getMessageActions();\n    var messageDeletedAt = !!(message === null || message === void 0 ? void 0 : message.deleted_at);\n    useEffect(function () {\n        if (messageWrapperRef === null || messageWrapperRef === void 0 ? void 0 : messageWrapperRef.current) {\n            messageWrapperRef.current.addEventListener('mouseleave', hideOptions);\n        }\n    }, [hideOptions, messageWrapperRef]);\n    useEffect(function () {\n        if (messageDeletedAt) {\n            document.removeEventListener('click', hideOptions);\n        }\n    }, [hideOptions, messageDeletedAt]);\n    useEffect(function () {\n        if (actionsBoxOpen) {\n            document.addEventListener('click', hideOptions);\n        }\n        else {\n            document.removeEventListener('click', hideOptions);\n        }\n        return function () { return document.removeEventListener('click', hideOptions); };\n    }, [actionsBoxOpen, hideOptions]);\n    if (!messageActions.length && !customMessageActions)\n        return null;\n    return (React.createElement(MessageActionsWrapper, { customWrapperClass: customWrapperClass, inline: inline, setActionsBoxOpen: setActionsBoxOpen },\n        React.createElement(MessageActionsBox, { getMessageActions: getMessageActions, handleDelete: handleDelete, handleEdit: setEditingState, handleFlag: handleFlag, handleMute: handleMute, handlePin: handlePin, isUserMuted: isMuted, mine: mine ? mine() : isMyMessage(), open: actionsBoxOpen }),\n        React.createElement(ActionsIcon, null)));\n};\nvar MessageActionsWrapper = function (props) {\n    var children = props.children, customWrapperClass = props.customWrapperClass, inline = props.inline, setActionsBoxOpen = props.setActionsBoxOpen;\n    var defaultWrapperClass = 'str-chat__message-simple__actions__action str-chat__message-simple__actions__action--options';\n    var wrapperClass = customWrapperClass || defaultWrapperClass;\n    var onClickOptionsAction = function (event) {\n        event.stopPropagation();\n        setActionsBoxOpen(true);\n    };\n    var wrapperProps = {\n        className: wrapperClass,\n        'data-testid': 'message-actions',\n        onClick: onClickOptionsAction,\n    };\n    if (inline)\n        return React.createElement(\"span\", __assign({}, wrapperProps), children);\n    return React.createElement(\"div\", __assign({}, wrapperProps), children);\n};\n"]},"metadata":{},"sourceType":"module"}