{"ast":null,"code":"import React from 'react';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport var SearchInput = function SearchInput(props) {\n  var channelSearchParams = props.channelSearchParams,\n      inputRef = props.inputRef,\n      onSearch = props.onSearch,\n      query = props.query,\n      searchFunction = props.searchFunction;\n  var t = useTranslationContext('SearchInput').t;\n  return React.createElement(\"input\", {\n    className: 'str-chat__channel-search-input',\n    onChange: function onChange(event) {\n      return searchFunction ? searchFunction(channelSearchParams, event) : onSearch(event);\n    },\n    placeholder: t('Search'),\n    ref: inputRef,\n    type: 'text',\n    value: query\n  });\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/ChannelSearch/SearchInput.js"],"names":["React","useTranslationContext","SearchInput","props","channelSearchParams","inputRef","onSearch","query","searchFunction","t","createElement","className","onChange","event","placeholder","ref","type","value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,OAAO,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAAUC,KAAV,EAAiB;AACtC,MAAIC,mBAAmB,GAAGD,KAAK,CAACC,mBAAhC;AAAA,MAAqDC,QAAQ,GAAGF,KAAK,CAACE,QAAtE;AAAA,MAAgFC,QAAQ,GAAGH,KAAK,CAACG,QAAjG;AAAA,MAA2GC,KAAK,GAAGJ,KAAK,CAACI,KAAzH;AAAA,MAAgIC,cAAc,GAAGL,KAAK,CAACK,cAAvJ;AACA,MAAIC,CAAC,GAAGR,qBAAqB,CAAC,aAAD,CAArB,CAAqCQ,CAA7C;AACA,SAAQT,KAAK,CAACU,aAAN,CAAoB,OAApB,EAA6B;AAAEC,IAAAA,SAAS,EAAE,gCAAb;AAA+CC,IAAAA,QAAQ,EAAE,kBAAUC,KAAV,EAAiB;AACvG,aAAOL,cAAc,GAAGA,cAAc,CAACJ,mBAAD,EAAsBS,KAAtB,CAAjB,GAAgDP,QAAQ,CAACO,KAAD,CAA7E;AACH,KAFgC;AAE9BC,IAAAA,WAAW,EAAEL,CAAC,CAAC,QAAD,CAFgB;AAEJM,IAAAA,GAAG,EAAEV,QAFD;AAEWW,IAAAA,IAAI,EAAE,MAFjB;AAEyBC,IAAAA,KAAK,EAAEV;AAFhC,GAA7B,CAAR;AAGH,CANM","sourcesContent":["import React from 'react';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport var SearchInput = function (props) {\n    var channelSearchParams = props.channelSearchParams, inputRef = props.inputRef, onSearch = props.onSearch, query = props.query, searchFunction = props.searchFunction;\n    var t = useTranslationContext('SearchInput').t;\n    return (React.createElement(\"input\", { className: 'str-chat__channel-search-input', onChange: function (event) {\n            return searchFunction ? searchFunction(channelSearchParams, event) : onSearch(event);\n        }, placeholder: t('Search'), ref: inputRef, type: 'text', value: query }));\n};\n"]},"metadata":{},"sourceType":"module"}