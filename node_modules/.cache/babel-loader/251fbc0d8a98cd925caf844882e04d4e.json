{"ast":null,"code":"import { useMemo } from 'react';\nimport { getGroupStyles, insertIntro, processMessages } from '../utils';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useComponentContext } from '../../../context/ComponentContext';\nexport var useEnrichedMessages = function useEnrichedMessages(args) {\n  var channel = args.channel,\n      disableDateSeparator = args.disableDateSeparator,\n      groupStyles = args.groupStyles,\n      headerPosition = args.headerPosition,\n      hideDeletedMessages = args.hideDeletedMessages,\n      hideNewMessageSeparator = args.hideNewMessageSeparator,\n      messages = args.messages,\n      noGroupByUser = args.noGroupByUser,\n      threadList = args.threadList;\n  var client = useChatContext('useEnrichedMessages').client;\n  var HeaderComponent = useComponentContext('useEnrichedMessages').HeaderComponent;\n  var lastRead = useMemo(function () {\n    var _a;\n\n    return (_a = channel.lastRead) === null || _a === void 0 ? void 0 : _a.call(channel);\n  }, [channel]);\n  var messagesWithDates = disableDateSeparator && !hideDeletedMessages && hideNewMessageSeparator ? messages : processMessages({\n    disableDateSeparator: disableDateSeparator,\n    hideDeletedMessages: hideDeletedMessages,\n    hideNewMessageSeparator: hideNewMessageSeparator,\n    lastRead: lastRead,\n    messages: messages,\n    threadList: threadList,\n    userId: client.userID || ''\n  });\n\n  if (HeaderComponent) {\n    messagesWithDates = insertIntro(messagesWithDates, headerPosition);\n  }\n\n  var groupStylesFn = groupStyles || getGroupStyles;\n  var messageGroupStyles = useMemo(function () {\n    return messagesWithDates.reduce(function (acc, message, i) {\n      var style = groupStylesFn(message, messagesWithDates[i - 1], messagesWithDates[i + 1], noGroupByUser);\n      if (style) acc[message.id] = style;\n      return acc;\n    }, {});\n  }, [messagesWithDates, noGroupByUser]);\n  return {\n    messageGroupStyles: messageGroupStyles,\n    messages: messagesWithDates\n  };\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/MessageList/hooks/useEnrichedMessages.js"],"names":["useMemo","getGroupStyles","insertIntro","processMessages","useChatContext","useComponentContext","useEnrichedMessages","args","channel","disableDateSeparator","groupStyles","headerPosition","hideDeletedMessages","hideNewMessageSeparator","messages","noGroupByUser","threadList","client","HeaderComponent","lastRead","_a","call","messagesWithDates","userId","userID","groupStylesFn","messageGroupStyles","reduce","acc","message","i","style","id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,eAAtC,QAA6D,UAA7D;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,mBAAT,QAAoC,mCAApC;AACA,OAAO,IAAIC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUC,IAAV,EAAgB;AAC7C,MAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AAAA,MAA4BC,oBAAoB,GAAGF,IAAI,CAACE,oBAAxD;AAAA,MAA8EC,WAAW,GAAGH,IAAI,CAACG,WAAjG;AAAA,MAA8GC,cAAc,GAAGJ,IAAI,CAACI,cAApI;AAAA,MAAoJC,mBAAmB,GAAGL,IAAI,CAACK,mBAA/K;AAAA,MAAoMC,uBAAuB,GAAGN,IAAI,CAACM,uBAAnO;AAAA,MAA4PC,QAAQ,GAAGP,IAAI,CAACO,QAA5Q;AAAA,MAAsRC,aAAa,GAAGR,IAAI,CAACQ,aAA3S;AAAA,MAA0TC,UAAU,GAAGT,IAAI,CAACS,UAA5U;AACA,MAAIC,MAAM,GAAGb,cAAc,CAAC,qBAAD,CAAd,CAAsCa,MAAnD;AACA,MAAIC,eAAe,GAAGb,mBAAmB,CAAC,qBAAD,CAAnB,CAA2Ca,eAAjE;AACA,MAAIC,QAAQ,GAAGnB,OAAO,CAAC,YAAY;AAAE,QAAIoB,EAAJ;;AAAQ,WAAO,CAACA,EAAE,GAAGZ,OAAO,CAACW,QAAd,MAA4B,IAA5B,IAAoCC,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACC,IAAH,CAAQb,OAAR,CAApE;AAAuF,GAA9G,EAAgH,CAACA,OAAD,CAAhH,CAAtB;AACA,MAAIc,iBAAiB,GAAGb,oBAAoB,IAAI,CAACG,mBAAzB,IAAgDC,uBAAhD,GAClBC,QADkB,GAElBX,eAAe,CAAC;AACdM,IAAAA,oBAAoB,EAAEA,oBADR;AAEdG,IAAAA,mBAAmB,EAAEA,mBAFP;AAGdC,IAAAA,uBAAuB,EAAEA,uBAHX;AAIdM,IAAAA,QAAQ,EAAEA,QAJI;AAKdL,IAAAA,QAAQ,EAAEA,QALI;AAMdE,IAAAA,UAAU,EAAEA,UANE;AAOdO,IAAAA,MAAM,EAAEN,MAAM,CAACO,MAAP,IAAiB;AAPX,GAAD,CAFrB;;AAWA,MAAIN,eAAJ,EAAqB;AACjBI,IAAAA,iBAAiB,GAAGpB,WAAW,CAACoB,iBAAD,EAAoBX,cAApB,CAA/B;AACH;;AACD,MAAIc,aAAa,GAAGf,WAAW,IAAIT,cAAnC;AACA,MAAIyB,kBAAkB,GAAG1B,OAAO,CAAC,YAAY;AACzC,WAAOsB,iBAAiB,CAACK,MAAlB,CAAyB,UAAUC,GAAV,EAAeC,OAAf,EAAwBC,CAAxB,EAA2B;AACvD,UAAIC,KAAK,GAAGN,aAAa,CAACI,OAAD,EAAUP,iBAAiB,CAACQ,CAAC,GAAG,CAAL,CAA3B,EAAoCR,iBAAiB,CAACQ,CAAC,GAAG,CAAL,CAArD,EAA8Df,aAA9D,CAAzB;AACA,UAAIgB,KAAJ,EACIH,GAAG,CAACC,OAAO,CAACG,EAAT,CAAH,GAAkBD,KAAlB;AACJ,aAAOH,GAAP;AACH,KALM,EAKJ,EALI,CAAP;AAMH,GAP+B,EAO7B,CAACN,iBAAD,EAAoBP,aAApB,CAP6B,CAAhC;AAQA,SAAO;AAAEW,IAAAA,kBAAkB,EAAEA,kBAAtB;AAA0CZ,IAAAA,QAAQ,EAAEQ;AAApD,GAAP;AACH,CA7BM","sourcesContent":["import { useMemo } from 'react';\nimport { getGroupStyles, insertIntro, processMessages } from '../utils';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useComponentContext } from '../../../context/ComponentContext';\nexport var useEnrichedMessages = function (args) {\n    var channel = args.channel, disableDateSeparator = args.disableDateSeparator, groupStyles = args.groupStyles, headerPosition = args.headerPosition, hideDeletedMessages = args.hideDeletedMessages, hideNewMessageSeparator = args.hideNewMessageSeparator, messages = args.messages, noGroupByUser = args.noGroupByUser, threadList = args.threadList;\n    var client = useChatContext('useEnrichedMessages').client;\n    var HeaderComponent = useComponentContext('useEnrichedMessages').HeaderComponent;\n    var lastRead = useMemo(function () { var _a; return (_a = channel.lastRead) === null || _a === void 0 ? void 0 : _a.call(channel); }, [channel]);\n    var messagesWithDates = disableDateSeparator && !hideDeletedMessages && hideNewMessageSeparator\n        ? messages\n        : processMessages({\n            disableDateSeparator: disableDateSeparator,\n            hideDeletedMessages: hideDeletedMessages,\n            hideNewMessageSeparator: hideNewMessageSeparator,\n            lastRead: lastRead,\n            messages: messages,\n            threadList: threadList,\n            userId: client.userID || '',\n        });\n    if (HeaderComponent) {\n        messagesWithDates = insertIntro(messagesWithDates, headerPosition);\n    }\n    var groupStylesFn = groupStyles || getGroupStyles;\n    var messageGroupStyles = useMemo(function () {\n        return messagesWithDates.reduce(function (acc, message, i) {\n            var style = groupStylesFn(message, messagesWithDates[i - 1], messagesWithDates[i + 1], noGroupByUser);\n            if (style)\n                acc[message.id] = style;\n            return acc;\n        }, {});\n    }, [messagesWithDates, noGroupByUser]);\n    return { messageGroupStyles: messageGroupStyles, messages: messagesWithDates };\n};\n"]},"metadata":{},"sourceType":"module"}