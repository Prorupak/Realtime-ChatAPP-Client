{"ast":null,"code":"import React from 'react';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport var DefaultSuggestionListHeader = function (props) {\n  var currentTrigger = props.currentTrigger,\n      value = props.value;\n  var t = useTranslationContext('DefaultSuggestionListHeader').t;\n  var triggerIndex = value.lastIndexOf(currentTrigger);\n\n  if (currentTrigger === '/') {\n    return React.createElement(React.Fragment, null, t('Commands matching'), \" \", React.createElement(\"strong\", null, value.slice(triggerIndex + 1)));\n  }\n\n  if (currentTrigger === ':') {\n    return React.createElement(React.Fragment, null, t('Emoji matching'), \" \", React.createElement(\"strong\", null, value.slice(triggerIndex + 1)));\n  }\n\n  if (currentTrigger === '@') {\n    return React.createElement(React.Fragment, null, t('People matching'), \" \", React.createElement(\"strong\", null, value.slice(triggerIndex + 1)));\n  }\n\n  return null;\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/Header.js"],"names":["React","useTranslationContext","DefaultSuggestionListHeader","props","currentTrigger","value","t","triggerIndex","lastIndexOf","createElement","Fragment","slice"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,OAAO,IAAIC,2BAA2B,GAAG,UAAUC,KAAV,EAAiB;AACtD,MAAIC,cAAc,GAAGD,KAAK,CAACC,cAA3B;AAAA,MAA2CC,KAAK,GAAGF,KAAK,CAACE,KAAzD;AACA,MAAIC,CAAC,GAAGL,qBAAqB,CAAC,6BAAD,CAArB,CAAqDK,CAA7D;AACA,MAAIC,YAAY,GAAGF,KAAK,CAACG,WAAN,CAAkBJ,cAAlB,CAAnB;;AACA,MAAIA,cAAc,KAAK,GAAvB,EAA4B;AACxB,WAAQJ,KAAK,CAACS,aAAN,CAAoBT,KAAK,CAACU,QAA1B,EAAoC,IAApC,EACJJ,CAAC,CAAC,mBAAD,CADG,EAEJ,GAFI,EAGJN,KAAK,CAACS,aAAN,CAAoB,QAApB,EAA8B,IAA9B,EAAoCJ,KAAK,CAACM,KAAN,CAAYJ,YAAY,GAAG,CAA3B,CAApC,CAHI,CAAR;AAIH;;AACD,MAAIH,cAAc,KAAK,GAAvB,EAA4B;AACxB,WAAQJ,KAAK,CAACS,aAAN,CAAoBT,KAAK,CAACU,QAA1B,EAAoC,IAApC,EACJJ,CAAC,CAAC,gBAAD,CADG,EAEJ,GAFI,EAGJN,KAAK,CAACS,aAAN,CAAoB,QAApB,EAA8B,IAA9B,EAAoCJ,KAAK,CAACM,KAAN,CAAYJ,YAAY,GAAG,CAA3B,CAApC,CAHI,CAAR;AAIH;;AACD,MAAIH,cAAc,KAAK,GAAvB,EAA4B;AACxB,WAAQJ,KAAK,CAACS,aAAN,CAAoBT,KAAK,CAACU,QAA1B,EAAoC,IAApC,EACJJ,CAAC,CAAC,iBAAD,CADG,EAEJ,GAFI,EAGJN,KAAK,CAACS,aAAN,CAAoB,QAApB,EAA8B,IAA9B,EAAoCJ,KAAK,CAACM,KAAN,CAAYJ,YAAY,GAAG,CAA3B,CAApC,CAHI,CAAR;AAIH;;AACD,SAAO,IAAP;AACH,CAvBM","sourcesContent":["import React from 'react';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport var DefaultSuggestionListHeader = function (props) {\n    var currentTrigger = props.currentTrigger, value = props.value;\n    var t = useTranslationContext('DefaultSuggestionListHeader').t;\n    var triggerIndex = value.lastIndexOf(currentTrigger);\n    if (currentTrigger === '/') {\n        return (React.createElement(React.Fragment, null,\n            t('Commands matching'),\n            \" \",\n            React.createElement(\"strong\", null, value.slice(triggerIndex + 1))));\n    }\n    if (currentTrigger === ':') {\n        return (React.createElement(React.Fragment, null,\n            t('Emoji matching'),\n            \" \",\n            React.createElement(\"strong\", null, value.slice(triggerIndex + 1))));\n    }\n    if (currentTrigger === '@') {\n        return (React.createElement(React.Fragment, null,\n            t('People matching'),\n            \" \",\n            React.createElement(\"strong\", null, value.slice(triggerIndex + 1))));\n    }\n    return null;\n};\n"]},"metadata":{},"sourceType":"module"}