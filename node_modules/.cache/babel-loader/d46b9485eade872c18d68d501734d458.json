{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Textarea from 'react-textarea-autosize';\nimport getCaretCoordinates from 'textarea-caret';\nimport CustomEvent from 'custom-event';\nimport { isValidElementType } from 'react-is';\nimport Listeners, { KEY_CODES } from './listener';\nimport { List as DefaultSuggestionList } from './List';\nimport { DEFAULT_CARET_POSITION, defaultScrollToItem, errorMessage, triggerPropsCheck } from './utils';\nimport { CommandItem } from '../CommandItem/CommandItem';\nimport { UserItem } from '../UserItem/UserItem';\n\nvar ReactTextareaAutocomplete =\n/** @class */\nfunction (_super) {\n  __extends(ReactTextareaAutocomplete, _super);\n\n  function ReactTextareaAutocomplete(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.getSelectionPosition = function () {\n      if (!_this.textareaRef) return null;\n      return {\n        selectionEnd: _this.textareaRef.selectionEnd,\n        selectionStart: _this.textareaRef.selectionStart\n      };\n    };\n\n    _this.getSelectedText = function () {\n      if (!_this.textareaRef) return null;\n      var _a = _this.textareaRef,\n          selectionEnd = _a.selectionEnd,\n          selectionStart = _a.selectionStart;\n      if (selectionStart === selectionEnd) return null;\n      return _this.state.value.substr(selectionStart, selectionEnd - selectionStart);\n    };\n\n    _this.setCaretPosition = function (position) {\n      if (position === void 0) {\n        position = 0;\n      }\n\n      if (!_this.textareaRef) return;\n\n      _this.textareaRef.focus();\n\n      _this.textareaRef.setSelectionRange(position, position);\n    };\n\n    _this.getCaretPosition = function () {\n      if (!_this.textareaRef) return 0;\n      return _this.textareaRef.selectionEnd;\n    };\n\n    _this.addKeycodeSubmitListeners = function (keyCodes) {\n      keyCodes.forEach(function (arrayOfCodes) {\n        var submitValue = arrayOfCodes;\n\n        if (submitValue.length === 1) {\n          submitValue = submitValue[0];\n        } // does submitted keycodes include shift+Enter?\n\n\n        var shiftE = arrayOfCodes.every(function (code) {\n          return [16, 13].includes(code);\n        });\n        if (shiftE) _this.keycodeSubmitShiftE = true;\n        return Listeners.add(submitValue, function (e) {\n          return _this._onEnter(e);\n        });\n      });\n    };\n\n    _this._onEnter = function (event) {\n      if (!_this.textareaRef) return;\n      var trigger = _this.state.currentTrigger;\n\n      var hasFocus = _this.textareaRef.matches(':focus'); // Don't submit if the element doesn't have focus or the shift key is pressed, unless shift+Enter were provided as submit keys\n\n\n      if (!hasFocus || event.shiftKey === true && !_this.keycodeSubmitShiftE || event.shiftKey === true && !_this.props.keycodeSubmitKeys) {\n        return;\n      }\n\n      if (!trigger || !_this.state.data) {\n        // trigger a submit\n        _this._replaceWord();\n\n        if (_this.textareaRef) {\n          _this.textareaRef.selectionEnd = 0;\n        }\n\n        _this.props.handleSubmit(event);\n\n        _this._closeAutocomplete();\n      }\n    };\n\n    _this._onSpace = function () {\n      if (!_this.props.replaceWord || !_this.textareaRef) return; // don't change characters if the element doesn't have focus\n\n      var hasFocus = _this.textareaRef.matches(':focus');\n\n      if (!hasFocus) return;\n\n      _this._replaceWord();\n    };\n\n    _this._replaceWord = function () {\n      var value = _this.state.value;\n      var lastWordRegex = /([^\\s]+)(\\s*)$/;\n      var match = lastWordRegex.exec(value.slice(0, _this.getCaretPosition()));\n      var lastWord = match && match[1];\n      if (!lastWord) return;\n      var spaces = match[2];\n\n      var newWord = _this.props.replaceWord(lastWord);\n\n      if (newWord == null) return;\n      var textBeforeWord = value.slice(0, _this.getCaretPosition() - match[0].length);\n      var textAfterCaret = value.slice(_this.getCaretPosition(), -1);\n      var newText = textBeforeWord + newWord + spaces + textAfterCaret;\n\n      _this.setState({\n        value: newText\n      }, function () {\n        // fire onChange event after successful selection\n        var e = new CustomEvent('change', {\n          bubbles: true\n        });\n\n        _this.textareaRef.dispatchEvent(e);\n\n        if (_this.props.onChange) _this.props.onChange(e);\n      });\n    };\n\n    _this._onSelect = function (newToken) {\n      var _a = _this.props,\n          closeCommandsList = _a.closeCommandsList,\n          closeMentionsList = _a.closeMentionsList,\n          onChange = _a.onChange,\n          showCommandsList = _a.showCommandsList,\n          showMentionsList = _a.showMentionsList;\n      var _b = _this.state,\n          stateTrigger = _b.currentTrigger,\n          selectionEnd = _b.selectionEnd,\n          textareaValue = _b.value;\n      var currentTrigger = showCommandsList ? '/' : showMentionsList ? '@' : stateTrigger;\n      if (!currentTrigger) return;\n\n      var computeCaretPosition = function computeCaretPosition(position, token, startToken) {\n        switch (position) {\n          case 'start':\n            return startToken;\n\n          case 'next':\n          case 'end':\n            return startToken + token.length;\n\n          default:\n            if (!Number.isInteger(position)) {\n              throw new Error('RTA: caretPosition should be \"start\", \"next\", \"end\" or number.');\n            }\n\n            return position;\n        }\n      };\n\n      var textToModify = showCommandsList ? '/' : showMentionsList ? '@' : textareaValue.slice(0, selectionEnd);\n      var startOfTokenPosition = textToModify.lastIndexOf(currentTrigger); // we add space after emoji is selected if a caret position is next\n\n      var newTokenString = newToken.caretPosition === 'next' ? newToken.text + \" \" : newToken.text;\n      var newCaretPosition = computeCaretPosition(newToken.caretPosition, newTokenString, startOfTokenPosition);\n      var modifiedText = textToModify.substring(0, startOfTokenPosition) + newTokenString;\n      var valueToReplace = textareaValue.replace(textToModify, modifiedText); // set the new textarea value and after that set the caret back to its position\n\n      _this.setState({\n        dataLoading: false,\n        value: valueToReplace\n      }, function () {\n        // fire onChange event after successful selection\n        var e = new CustomEvent('change', {\n          bubbles: true\n        });\n\n        _this.textareaRef.dispatchEvent(e);\n\n        if (onChange) onChange(e);\n\n        _this.setCaretPosition(newCaretPosition);\n      });\n\n      _this._closeAutocomplete();\n\n      if (showCommandsList) closeCommandsList();\n      if (showMentionsList) closeMentionsList();\n    };\n\n    _this._getItemOnSelect = function (paramTrigger) {\n      var stateTrigger = _this.state.currentTrigger;\n\n      var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);\n\n      var currentTrigger = paramTrigger || stateTrigger;\n      if (!currentTrigger || !triggerSettings) return null;\n      var callback = triggerSettings.callback;\n      if (!callback) return null;\n      return function (item) {\n        if (typeof callback !== 'function') {\n          throw new Error('Output functor is not defined! You have to define \"output\" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');\n        }\n\n        if (callback) {\n          return callback(item, currentTrigger);\n        }\n\n        return null;\n      };\n    };\n\n    _this._getTextToReplace = function (paramTrigger) {\n      var _a = _this.state,\n          actualToken = _a.actualToken,\n          stateTrigger = _a.currentTrigger;\n\n      var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);\n\n      var currentTrigger = paramTrigger || stateTrigger;\n      if (!currentTrigger || !triggerSettings) return null;\n      var output = triggerSettings.output;\n      return function (item) {\n        if (typeof item === 'object' && (!output || typeof output !== 'function')) {\n          throw new Error('Output functor is not defined! If you are using items as object you have to define \"output\" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');\n        }\n\n        if (output) {\n          var textToReplace = output(item, currentTrigger);\n\n          if (!textToReplace || typeof textToReplace === 'number') {\n            throw new Error(\"Output functor should return string or object in shape {text: string, caretPosition: string | number}.\\nGot \\\"\" + String(textToReplace) + \"\\\". Check the implementation for trigger \\\"\" + currentTrigger + \"\\\" and its token \\\"\" + actualToken + \"\\\"\\n\\nSee https://github.com/webscopeio/react-textarea-autocomplete#trigger-type for more informations.\\n\");\n          }\n\n          if (typeof textToReplace === 'string') {\n            return {\n              caretPosition: DEFAULT_CARET_POSITION,\n              text: textToReplace\n            };\n          }\n\n          if (!textToReplace.text && currentTrigger !== ':') {\n            throw new Error(\"Output \\\"text\\\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \\\"\" + currentTrigger + \"\\\" and its token \\\"\" + actualToken + \"\\\"\\n\");\n          }\n\n          if (!textToReplace.caretPosition) {\n            throw new Error(\"Output \\\"caretPosition\\\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \\\"\" + currentTrigger + \"\\\" and its token \\\"\" + actualToken + \"\\\"\\n\");\n          }\n\n          return textToReplace;\n        }\n\n        if (typeof item !== 'string') {\n          throw new Error('Output item should be string\\n');\n        }\n\n        return {\n          caretPosition: DEFAULT_CARET_POSITION,\n          text: \"\" + currentTrigger + item + currentTrigger\n        };\n      };\n    };\n\n    _this._getCurrentTriggerSettings = function (paramTrigger) {\n      var stateTrigger = _this.state.currentTrigger;\n      var currentTrigger = paramTrigger || stateTrigger;\n      if (!currentTrigger) return null;\n      return _this.props.trigger[currentTrigger];\n    };\n\n    _this._getValuesFromProvider = function () {\n      var _a = _this.state,\n          actualToken = _a.actualToken,\n          currentTrigger = _a.currentTrigger;\n\n      var triggerSettings = _this._getCurrentTriggerSettings();\n\n      if (!currentTrigger || !triggerSettings) return;\n      var component = triggerSettings.component,\n          dataProvider = triggerSettings.dataProvider;\n\n      if (typeof dataProvider !== 'function') {\n        throw new Error('Trigger provider has to be a function!');\n      }\n\n      _this.setState({\n        dataLoading: true\n      }); // Modified: send the full text to support / style commands\n\n\n      dataProvider(actualToken, _this.state.value, function (data, token) {\n        // Make sure that the result is still relevant for current query\n        if (token !== _this.state.actualToken) return;\n\n        if (!Array.isArray(data)) {\n          throw new Error('Trigger provider has to provide an array!');\n        }\n\n        if (!isValidElementType(component)) {\n          throw new Error('Component should be defined!');\n        } // throw away if we resolved old trigger\n\n\n        if (currentTrigger !== _this.state.currentTrigger) return; // if we haven't resolved any data let's close the autocomplete\n\n        if (!data.length) {\n          _this._closeAutocomplete();\n\n          return;\n        }\n\n        _this.setState({\n          component: component,\n          data: data,\n          dataLoading: false\n        });\n      });\n    };\n\n    _this._getSuggestions = function (paramTrigger) {\n      var _a = _this.state,\n          stateTrigger = _a.currentTrigger,\n          data = _a.data;\n      var currentTrigger = paramTrigger || stateTrigger;\n      if (!currentTrigger || !data || data && !data.length) return null;\n      return data;\n    };\n\n    _this._createRegExp = function () {\n      var trigger = _this.props.trigger; // negative lookahead to match only the trigger + the actual token = \"bladhwd:adawd:word test\" => \":word\"\n      // https://stackoverflow.com/a/8057827/2719917\n\n      _this.tokenRegExp = new RegExp(\"([\" + Object.keys(trigger).join('') + \"])(?:(?!\\\\1)[^\\\\s])*$\");\n    };\n    /**\n     * Close autocomplete, also clean up trigger (to avoid slow promises)\n     */\n\n\n    _this._closeAutocomplete = function () {\n      _this.setState({\n        currentTrigger: null,\n        data: null,\n        dataLoading: false,\n        left: null,\n        top: null\n      });\n    };\n\n    _this._cleanUpProps = function () {\n      var props = __assign({}, _this.props);\n\n      var notSafe = ['additionalTextareaProps', 'className', 'closeCommandsList', 'closeMentionsList', 'closeOnClickOutside', 'containerClassName', 'containerStyle', 'disableMentions', 'dropdownClassName', 'dropdownStyle', 'grow', 'handleSubmit', 'innerRef', 'itemClassName', 'itemStyle', 'keycodeSubmitKeys', 'listClassName', 'listStyle', 'loaderClassName', 'loaderStyle', 'loadingComponent', 'minChar', 'movePopupAsYouType', 'onCaretPositionChange', 'onChange', 'ref', 'replaceWord', 'scrollToItem', 'showCommandsList', 'showMentionsList', 'SuggestionItem', 'SuggestionList', 'trigger', 'value']; // eslint-disable-next-line\n\n      for (var prop in props) {\n        if (notSafe.includes(prop)) delete props[prop];\n      }\n\n      return props;\n    };\n\n    _this._isCommand = function (text) {\n      if (text[0] !== '/') return false;\n      var tokens = text.split(' ');\n      if (tokens.length > 1) return false;\n      return true;\n    };\n\n    _this._changeHandler = function (e) {\n      var _a = _this.props,\n          minChar = _a.minChar,\n          movePopupAsYouType = _a.movePopupAsYouType,\n          onCaretPositionChange = _a.onCaretPositionChange,\n          onChange = _a.onChange,\n          trigger = _a.trigger;\n      var _b = _this.state,\n          left = _b.left,\n          top = _b.top;\n      var textarea = e.target;\n      var selectionEnd = textarea.selectionEnd,\n          selectionStart = textarea.selectionStart,\n          value = textarea.value;\n\n      if (onChange) {\n        e.persist();\n        onChange(e);\n      }\n\n      if (onCaretPositionChange) onCaretPositionChange(_this.getCaretPosition());\n\n      _this.setState({\n        value: value\n      });\n\n      var currentTrigger;\n      var lastToken;\n\n      if (_this._isCommand(value)) {\n        currentTrigger = '/';\n        lastToken = value;\n      } else {\n        var triggerTokens = Object.keys(trigger).join().replace('/', '');\n        var triggerNorWhitespace = \"[^\\\\s\" + triggerTokens + \"]*\";\n        var regex = new RegExp(\"(?!^|\\\\W)?[\" + triggerTokens + \"]\" + triggerNorWhitespace + \"\\\\s?\" + triggerNorWhitespace + \"$\", 'g');\n        var tokenMatch = value.slice(0, selectionEnd).match(regex);\n        lastToken = tokenMatch && tokenMatch[tokenMatch.length - 1].trim();\n        currentTrigger = lastToken && Object.keys(trigger).find(function (a) {\n          return a === lastToken[0];\n        }) || null;\n      }\n      /*\n       if we lost the trigger token or there is no following character we want to close\n       the autocomplete\n      */\n\n\n      if (!lastToken || lastToken.length <= minChar) {\n        _this._closeAutocomplete();\n\n        return;\n      }\n\n      var actualToken = lastToken.slice(1); // if trigger is not configured step out from the function, otherwise proceed\n\n      if (!currentTrigger) return;\n\n      if (movePopupAsYouType || top === null && left === null || // if we have single char - trigger it means we want to re-position the autocomplete\n      lastToken.length === 1) {\n        var _c = getCaretCoordinates(textarea, selectionEnd),\n            newLeft = _c.left,\n            newTop = _c.top;\n\n        _this.setState({\n          // make position relative to textarea\n          left: newLeft,\n          top: newTop - _this.textareaRef.scrollTop || 0\n        });\n      }\n\n      _this.setState({\n        actualToken: actualToken,\n        currentTrigger: currentTrigger,\n        selectionEnd: selectionEnd,\n        selectionStart: selectionStart\n      }, function () {\n        try {\n          _this._getValuesFromProvider();\n        } catch (err) {\n          errorMessage(err.message);\n        }\n      });\n    };\n\n    _this._selectHandler = function (e) {\n      var _a = _this.props,\n          onCaretPositionChange = _a.onCaretPositionChange,\n          onSelect = _a.onSelect;\n      if (onCaretPositionChange) onCaretPositionChange(_this.getCaretPosition());\n\n      if (onSelect) {\n        e.persist();\n        onSelect(e);\n      }\n    }; // The textarea itself is outside the auto-select dropdown.\n\n\n    _this._onClickAndBlurHandler = function (e) {\n      var _a = _this.props,\n          closeOnClickOutside = _a.closeOnClickOutside,\n          onBlur = _a.onBlur; // If this is a click: e.target is the textarea, and e.relatedTarget is the thing\n      // that was actually clicked. If we clicked inside the auto-select dropdown, then\n      // that's not a blur, from the auto-select point of view, so then do nothing.\n\n      var el = e.relatedTarget;\n\n      if (_this.dropdownRef && el instanceof Node && _this.dropdownRef.contains(el)) {\n        return;\n      }\n\n      if (closeOnClickOutside) _this._closeAutocomplete();\n\n      if (onBlur) {\n        e.persist();\n        onBlur(e);\n      }\n    };\n\n    _this._onScrollHandler = function () {\n      return _this._closeAutocomplete();\n    };\n\n    _this._dropdownScroll = function (item) {\n      var scrollToItem = _this.props.scrollToItem;\n      if (!scrollToItem) return;\n\n      if (scrollToItem === true) {\n        defaultScrollToItem(_this.dropdownRef, item);\n        return;\n      }\n\n      if (typeof scrollToItem !== 'function' || scrollToItem.length !== 2) {\n        throw new Error('`scrollToItem` has to be boolean (true for default implementation) or function with two parameters: container, item.');\n      }\n\n      scrollToItem(_this.dropdownRef, item);\n    };\n\n    _this.getTriggerProps = function () {\n      var _a = _this.props,\n          showCommandsList = _a.showCommandsList,\n          showMentionsList = _a.showMentionsList,\n          trigger = _a.trigger;\n      var _b = _this.state,\n          component = _b.component,\n          currentTrigger = _b.currentTrigger,\n          selectionEnd = _b.selectionEnd,\n          value = _b.value;\n\n      var selectedItem = _this._getItemOnSelect();\n\n      var suggestionData = _this._getSuggestions();\n\n      var textToReplace = _this._getTextToReplace();\n\n      var triggerProps = {\n        component: component,\n        currentTrigger: currentTrigger,\n        getSelectedItem: selectedItem,\n        getTextToReplace: textToReplace,\n        selectionEnd: selectionEnd,\n        value: value,\n        values: suggestionData\n      };\n\n      if (showCommandsList && trigger['/'] || showMentionsList && trigger['@']) {\n        var currentCommands_1;\n        var getCommands = trigger[showCommandsList ? '/' : '@'].dataProvider;\n        getCommands === null || getCommands === void 0 ? void 0 : getCommands('', showCommandsList ? '/' : '@', function (data) {\n          currentCommands_1 = data;\n        });\n        triggerProps.component = showCommandsList ? CommandItem : UserItem;\n        triggerProps.currentTrigger = showCommandsList ? '/' : '@';\n        triggerProps.getTextToReplace = _this._getTextToReplace(showCommandsList ? '/' : '@');\n        triggerProps.getSelectedItem = _this._getItemOnSelect(showCommandsList ? '/' : '@');\n        triggerProps.selectionEnd = 1;\n        triggerProps.value = showCommandsList ? '/' : '@';\n        triggerProps.values = currentCommands_1;\n      }\n\n      return triggerProps;\n    };\n\n    var _a = _this.props,\n        loadingComponent = _a.loadingComponent,\n        trigger = _a.trigger,\n        value = _a.value; // TODO: it would be better to have the parent control state...\n    // if (value) this.state.value = value;\n\n    _this._createRegExp();\n\n    if (!loadingComponent) {\n      throw new Error('RTA: loadingComponent is not defined');\n    }\n\n    if (!trigger) {\n      throw new Error('RTA: trigger is not defined');\n    }\n\n    _this.state = {\n      actualToken: '',\n      component: null,\n      currentTrigger: null,\n      data: null,\n      dataLoading: false,\n      keycodeSubmitShiftE: false,\n      left: null,\n      listenerIndex: {},\n      selectionEnd: 0,\n      selectionStart: 0,\n      top: null,\n      value: value || ''\n    };\n    return _this;\n  }\n\n  ReactTextareaAutocomplete.prototype.componentDidMount = function () {\n    var _this = this;\n\n    Listeners.add(KEY_CODES.ESC, function () {\n      return _this._closeAutocomplete();\n    });\n    Listeners.add(KEY_CODES.SPACE, function () {\n      return _this._onSpace();\n    });\n    var listenerIndex = {};\n    var newSubmitKeys = this.props.keycodeSubmitKeys;\n\n    if (newSubmitKeys) {\n      var keycodeIndex = this.addKeycodeSubmitListeners(newSubmitKeys);\n      listenerIndex[keycodeIndex] = keycodeIndex;\n    } else {\n      var enterIndex = Listeners.add(KEY_CODES.ENTER, function (e) {\n        return _this._onEnter(e);\n      });\n      listenerIndex[enterIndex] = enterIndex;\n    }\n\n    this.setState({\n      listenerIndex: listenerIndex\n    });\n    Listeners.startListen();\n  };\n\n  ReactTextareaAutocomplete.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    this._update(nextProps);\n  };\n\n  ReactTextareaAutocomplete.prototype.componentWillUnmount = function () {\n    Listeners.stopListen();\n    Listeners.remove(this.state.listenerIndex);\n  }; // TODO: This is an anti pattern in react, should come up with a better way\n\n\n  ReactTextareaAutocomplete.prototype._update = function (_a) {\n    var trigger = _a.trigger,\n        value = _a.value;\n    var oldValue = this.state.value;\n    var oldTrigger = this.props.trigger;\n    if (value !== oldValue || !oldValue) this.setState({\n      value: value\n    });\n    /**\n     * check if trigger chars are changed, if so, change the regexp accordingly\n     */\n\n    if (Object.keys(trigger).join('') !== Object.keys(oldTrigger).join('')) {\n      this._createRegExp();\n    }\n  };\n\n  ReactTextareaAutocomplete.prototype.renderSuggestionListContainer = function () {\n    var _this = this;\n\n    var _a = this.props,\n        disableMentions = _a.disableMentions,\n        dropdownClassName = _a.dropdownClassName,\n        dropdownStyle = _a.dropdownStyle,\n        itemClassName = _a.itemClassName,\n        itemStyle = _a.itemStyle,\n        listClassName = _a.listClassName,\n        SuggestionItem = _a.SuggestionItem,\n        _b = _a.SuggestionList,\n        SuggestionList = _b === void 0 ? DefaultSuggestionList : _b;\n    var triggerProps = this.getTriggerProps();\n\n    if (triggerProps.values && triggerProps.currentTrigger && !(disableMentions && triggerProps.currentTrigger === '@')) {\n      return React.createElement(\"div\", {\n        className: \"rta__autocomplete \" + (dropdownClassName || ''),\n        ref: function ref(_ref) {\n          _this.dropdownRef = _ref;\n        },\n        style: dropdownStyle\n      }, React.createElement(SuggestionList, __assign({\n        className: listClassName,\n        dropdownScroll: this._dropdownScroll,\n        itemClassName: itemClassName,\n        itemStyle: itemStyle,\n        onSelect: this._onSelect,\n        SuggestionItem: SuggestionItem\n      }, triggerProps)));\n    }\n\n    return null;\n  };\n\n  ReactTextareaAutocomplete.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        className = _a.className,\n        containerClassName = _a.containerClassName,\n        containerStyle = _a.containerStyle,\n        style = _a.style;\n    var maxRows = this.props.maxRows;\n    var _b = this.state,\n        dataLoading = _b.dataLoading,\n        value = _b.value;\n    if (!this.props.grow) maxRows = 1;\n    return React.createElement(\"div\", {\n      className: \"rta \" + (dataLoading === true ? 'rta--loading' : '') + \" \" + (containerClassName || ''),\n      style: containerStyle\n    }, this.renderSuggestionListContainer(), React.createElement(Textarea, __assign({}, this._cleanUpProps(), {\n      className: \"rta__textarea \" + (className || ''),\n      maxRows: maxRows,\n      onBlur: this._onClickAndBlurHandler,\n      onChange: this._changeHandler,\n      onClick: this._onClickAndBlurHandler,\n      onFocus: this.props.onFocus,\n      onScroll: this._onScrollHandler,\n      onSelect: this._selectHandler,\n      ref: function ref(_ref2) {\n        if (_this.props.innerRef) _this.props.innerRef(_ref2);\n        _this.textareaRef = _ref2;\n      },\n      style: style,\n      value: value\n    }, this.props.additionalTextareaProps)));\n  };\n\n  ReactTextareaAutocomplete.defaultProps = {\n    closeOnClickOutside: true,\n    maxRows: 10,\n    minChar: 1,\n    movePopupAsYouType: false,\n    scrollToItem: true,\n    value: ''\n  };\n  return ReactTextareaAutocomplete;\n}(React.Component);\n\nexport { ReactTextareaAutocomplete };\nReactTextareaAutocomplete.propTypes = {\n  className: PropTypes.string,\n  closeOnClickOutside: PropTypes.bool,\n  containerClassName: PropTypes.string,\n  containerStyle: PropTypes.object,\n  disableMentions: PropTypes.bool,\n  dropdownClassName: PropTypes.string,\n  dropdownStyle: PropTypes.object,\n  itemClassName: PropTypes.string,\n  itemStyle: PropTypes.object,\n  keycodeSubmitKeys: PropTypes.array,\n  listClassName: PropTypes.string,\n  listStyle: PropTypes.object,\n  loaderClassName: PropTypes.string,\n  loaderStyle: PropTypes.object,\n  loadingComponent: PropTypes.elementType,\n  minChar: PropTypes.number,\n  onBlur: PropTypes.func,\n  onCaretPositionChange: PropTypes.func,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  style: PropTypes.object,\n  SuggestionList: PropTypes.elementType,\n  trigger: triggerPropsCheck,\n  value: PropTypes.string\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/Textarea.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","React","PropTypes","Textarea","getCaretCoordinates","CustomEvent","isValidElementType","Listeners","KEY_CODES","List","DefaultSuggestionList","DEFAULT_CARET_POSITION","defaultScrollToItem","errorMessage","triggerPropsCheck","CommandItem","UserItem","ReactTextareaAutocomplete","_super","props","_this","getSelectionPosition","textareaRef","selectionEnd","selectionStart","getSelectedText","_a","state","value","substr","setCaretPosition","position","focus","setSelectionRange","getCaretPosition","addKeycodeSubmitListeners","keyCodes","forEach","arrayOfCodes","submitValue","shiftE","every","code","includes","keycodeSubmitShiftE","add","e","_onEnter","event","trigger","currentTrigger","hasFocus","matches","shiftKey","keycodeSubmitKeys","data","_replaceWord","handleSubmit","_closeAutocomplete","_onSpace","replaceWord","lastWordRegex","match","exec","slice","lastWord","spaces","newWord","textBeforeWord","textAfterCaret","newText","setState","bubbles","dispatchEvent","onChange","_onSelect","newToken","closeCommandsList","closeMentionsList","showCommandsList","showMentionsList","_b","stateTrigger","textareaValue","computeCaretPosition","token","startToken","Number","isInteger","Error","textToModify","startOfTokenPosition","lastIndexOf","newTokenString","caretPosition","text","newCaretPosition","modifiedText","substring","valueToReplace","replace","dataLoading","_getItemOnSelect","paramTrigger","triggerSettings","_getCurrentTriggerSettings","callback","item","_getTextToReplace","actualToken","output","textToReplace","_getValuesFromProvider","component","dataProvider","isArray","_getSuggestions","_createRegExp","tokenRegExp","RegExp","keys","join","left","top","_cleanUpProps","notSafe","prop","_isCommand","tokens","split","_changeHandler","minChar","movePopupAsYouType","onCaretPositionChange","textarea","target","persist","lastToken","triggerTokens","triggerNorWhitespace","regex","tokenMatch","trim","find","a","_c","newLeft","newTop","scrollTop","err","message","_selectHandler","onSelect","_onClickAndBlurHandler","closeOnClickOutside","onBlur","el","relatedTarget","dropdownRef","Node","contains","_onScrollHandler","_dropdownScroll","scrollToItem","getTriggerProps","selectedItem","suggestionData","triggerProps","getSelectedItem","getTextToReplace","values","currentCommands_1","getCommands","loadingComponent","listenerIndex","componentDidMount","ESC","SPACE","newSubmitKeys","keycodeIndex","enterIndex","ENTER","startListen","UNSAFE_componentWillReceiveProps","nextProps","_update","componentWillUnmount","stopListen","remove","oldValue","oldTrigger","renderSuggestionListContainer","disableMentions","dropdownClassName","dropdownStyle","itemClassName","itemStyle","listClassName","SuggestionItem","SuggestionList","createElement","className","ref","style","dropdownScroll","render","containerClassName","containerStyle","maxRows","grow","onClick","onFocus","onScroll","innerRef","additionalTextareaProps","defaultProps","Component","propTypes","string","bool","object","array","listStyle","loaderClassName","loaderStyle","elementType","number","func"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Textarea from 'react-textarea-autosize';\nimport getCaretCoordinates from 'textarea-caret';\nimport CustomEvent from 'custom-event';\nimport { isValidElementType } from 'react-is';\nimport Listeners, { KEY_CODES } from './listener';\nimport { List as DefaultSuggestionList } from './List';\nimport { DEFAULT_CARET_POSITION, defaultScrollToItem, errorMessage, triggerPropsCheck, } from './utils';\nimport { CommandItem } from '../CommandItem/CommandItem';\nimport { UserItem } from '../UserItem/UserItem';\nvar ReactTextareaAutocomplete = /** @class */ (function (_super) {\n    __extends(ReactTextareaAutocomplete, _super);\n    function ReactTextareaAutocomplete(props) {\n        var _this = _super.call(this, props) || this;\n        _this.getSelectionPosition = function () {\n            if (!_this.textareaRef)\n                return null;\n            return {\n                selectionEnd: _this.textareaRef.selectionEnd,\n                selectionStart: _this.textareaRef.selectionStart,\n            };\n        };\n        _this.getSelectedText = function () {\n            if (!_this.textareaRef)\n                return null;\n            var _a = _this.textareaRef, selectionEnd = _a.selectionEnd, selectionStart = _a.selectionStart;\n            if (selectionStart === selectionEnd)\n                return null;\n            return _this.state.value.substr(selectionStart, selectionEnd - selectionStart);\n        };\n        _this.setCaretPosition = function (position) {\n            if (position === void 0) { position = 0; }\n            if (!_this.textareaRef)\n                return;\n            _this.textareaRef.focus();\n            _this.textareaRef.setSelectionRange(position, position);\n        };\n        _this.getCaretPosition = function () {\n            if (!_this.textareaRef)\n                return 0;\n            return _this.textareaRef.selectionEnd;\n        };\n        _this.addKeycodeSubmitListeners = function (keyCodes) {\n            keyCodes.forEach(function (arrayOfCodes) {\n                var submitValue = arrayOfCodes;\n                if (submitValue.length === 1) {\n                    submitValue = submitValue[0];\n                }\n                // does submitted keycodes include shift+Enter?\n                var shiftE = arrayOfCodes.every(function (code) { return [16, 13].includes(code); });\n                if (shiftE)\n                    _this.keycodeSubmitShiftE = true;\n                return Listeners.add(submitValue, function (e) { return _this._onEnter(e); });\n            });\n        };\n        _this._onEnter = function (event) {\n            if (!_this.textareaRef)\n                return;\n            var trigger = _this.state.currentTrigger;\n            var hasFocus = _this.textareaRef.matches(':focus');\n            // Don't submit if the element doesn't have focus or the shift key is pressed, unless shift+Enter were provided as submit keys\n            if (!hasFocus ||\n                (event.shiftKey === true && !_this.keycodeSubmitShiftE) ||\n                (event.shiftKey === true && !_this.props.keycodeSubmitKeys)) {\n                return;\n            }\n            if (!trigger || !_this.state.data) {\n                // trigger a submit\n                _this._replaceWord();\n                if (_this.textareaRef) {\n                    _this.textareaRef.selectionEnd = 0;\n                }\n                _this.props.handleSubmit(event);\n                _this._closeAutocomplete();\n            }\n        };\n        _this._onSpace = function () {\n            if (!_this.props.replaceWord || !_this.textareaRef)\n                return;\n            // don't change characters if the element doesn't have focus\n            var hasFocus = _this.textareaRef.matches(':focus');\n            if (!hasFocus)\n                return;\n            _this._replaceWord();\n        };\n        _this._replaceWord = function () {\n            var value = _this.state.value;\n            var lastWordRegex = /([^\\s]+)(\\s*)$/;\n            var match = lastWordRegex.exec(value.slice(0, _this.getCaretPosition()));\n            var lastWord = match && match[1];\n            if (!lastWord)\n                return;\n            var spaces = match[2];\n            var newWord = _this.props.replaceWord(lastWord);\n            if (newWord == null)\n                return;\n            var textBeforeWord = value.slice(0, _this.getCaretPosition() - match[0].length);\n            var textAfterCaret = value.slice(_this.getCaretPosition(), -1);\n            var newText = textBeforeWord + newWord + spaces + textAfterCaret;\n            _this.setState({\n                value: newText,\n            }, function () {\n                // fire onChange event after successful selection\n                var e = new CustomEvent('change', { bubbles: true });\n                _this.textareaRef.dispatchEvent(e);\n                if (_this.props.onChange)\n                    _this.props.onChange(e);\n            });\n        };\n        _this._onSelect = function (newToken) {\n            var _a = _this.props, closeCommandsList = _a.closeCommandsList, closeMentionsList = _a.closeMentionsList, onChange = _a.onChange, showCommandsList = _a.showCommandsList, showMentionsList = _a.showMentionsList;\n            var _b = _this.state, stateTrigger = _b.currentTrigger, selectionEnd = _b.selectionEnd, textareaValue = _b.value;\n            var currentTrigger = showCommandsList ? '/' : showMentionsList ? '@' : stateTrigger;\n            if (!currentTrigger)\n                return;\n            var computeCaretPosition = function (position, token, startToken) {\n                switch (position) {\n                    case 'start':\n                        return startToken;\n                    case 'next':\n                    case 'end':\n                        return startToken + token.length;\n                    default:\n                        if (!Number.isInteger(position)) {\n                            throw new Error('RTA: caretPosition should be \"start\", \"next\", \"end\" or number.');\n                        }\n                        return position;\n                }\n            };\n            var textToModify = showCommandsList\n                ? '/'\n                : showMentionsList\n                    ? '@'\n                    : textareaValue.slice(0, selectionEnd);\n            var startOfTokenPosition = textToModify.lastIndexOf(currentTrigger);\n            // we add space after emoji is selected if a caret position is next\n            var newTokenString = newToken.caretPosition === 'next' ? newToken.text + \" \" : newToken.text;\n            var newCaretPosition = computeCaretPosition(newToken.caretPosition, newTokenString, startOfTokenPosition);\n            var modifiedText = textToModify.substring(0, startOfTokenPosition) + newTokenString;\n            var valueToReplace = textareaValue.replace(textToModify, modifiedText);\n            // set the new textarea value and after that set the caret back to its position\n            _this.setState({\n                dataLoading: false,\n                value: valueToReplace,\n            }, function () {\n                // fire onChange event after successful selection\n                var e = new CustomEvent('change', { bubbles: true });\n                _this.textareaRef.dispatchEvent(e);\n                if (onChange)\n                    onChange(e);\n                _this.setCaretPosition(newCaretPosition);\n            });\n            _this._closeAutocomplete();\n            if (showCommandsList)\n                closeCommandsList();\n            if (showMentionsList)\n                closeMentionsList();\n        };\n        _this._getItemOnSelect = function (paramTrigger) {\n            var stateTrigger = _this.state.currentTrigger;\n            var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);\n            var currentTrigger = paramTrigger || stateTrigger;\n            if (!currentTrigger || !triggerSettings)\n                return null;\n            var callback = triggerSettings.callback;\n            if (!callback)\n                return null;\n            return function (item) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Output functor is not defined! You have to define \"output\" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');\n                }\n                if (callback) {\n                    return callback(item, currentTrigger);\n                }\n                return null;\n            };\n        };\n        _this._getTextToReplace = function (paramTrigger) {\n            var _a = _this.state, actualToken = _a.actualToken, stateTrigger = _a.currentTrigger;\n            var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);\n            var currentTrigger = paramTrigger || stateTrigger;\n            if (!currentTrigger || !triggerSettings)\n                return null;\n            var output = triggerSettings.output;\n            return function (item) {\n                if (typeof item === 'object' && (!output || typeof output !== 'function')) {\n                    throw new Error('Output functor is not defined! If you are using items as object you have to define \"output\" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');\n                }\n                if (output) {\n                    var textToReplace = output(item, currentTrigger);\n                    if (!textToReplace || typeof textToReplace === 'number') {\n                        throw new Error(\"Output functor should return string or object in shape {text: string, caretPosition: string | number}.\\nGot \\\"\" + String(textToReplace) + \"\\\". Check the implementation for trigger \\\"\" + currentTrigger + \"\\\" and its token \\\"\" + actualToken + \"\\\"\\n\\nSee https://github.com/webscopeio/react-textarea-autocomplete#trigger-type for more informations.\\n\");\n                    }\n                    if (typeof textToReplace === 'string') {\n                        return {\n                            caretPosition: DEFAULT_CARET_POSITION,\n                            text: textToReplace,\n                        };\n                    }\n                    if (!textToReplace.text && currentTrigger !== ':') {\n                        throw new Error(\"Output \\\"text\\\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \\\"\" + currentTrigger + \"\\\" and its token \\\"\" + actualToken + \"\\\"\\n\");\n                    }\n                    if (!textToReplace.caretPosition) {\n                        throw new Error(\"Output \\\"caretPosition\\\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \\\"\" + currentTrigger + \"\\\" and its token \\\"\" + actualToken + \"\\\"\\n\");\n                    }\n                    return textToReplace;\n                }\n                if (typeof item !== 'string') {\n                    throw new Error('Output item should be string\\n');\n                }\n                return {\n                    caretPosition: DEFAULT_CARET_POSITION,\n                    text: \"\" + currentTrigger + item + currentTrigger,\n                };\n            };\n        };\n        _this._getCurrentTriggerSettings = function (paramTrigger) {\n            var stateTrigger = _this.state.currentTrigger;\n            var currentTrigger = paramTrigger || stateTrigger;\n            if (!currentTrigger)\n                return null;\n            return _this.props.trigger[currentTrigger];\n        };\n        _this._getValuesFromProvider = function () {\n            var _a = _this.state, actualToken = _a.actualToken, currentTrigger = _a.currentTrigger;\n            var triggerSettings = _this._getCurrentTriggerSettings();\n            if (!currentTrigger || !triggerSettings)\n                return;\n            var component = triggerSettings.component, dataProvider = triggerSettings.dataProvider;\n            if (typeof dataProvider !== 'function') {\n                throw new Error('Trigger provider has to be a function!');\n            }\n            _this.setState({ dataLoading: true });\n            // Modified: send the full text to support / style commands\n            dataProvider(actualToken, _this.state.value, function (data, token) {\n                // Make sure that the result is still relevant for current query\n                if (token !== _this.state.actualToken)\n                    return;\n                if (!Array.isArray(data)) {\n                    throw new Error('Trigger provider has to provide an array!');\n                }\n                if (!isValidElementType(component)) {\n                    throw new Error('Component should be defined!');\n                }\n                // throw away if we resolved old trigger\n                if (currentTrigger !== _this.state.currentTrigger)\n                    return;\n                // if we haven't resolved any data let's close the autocomplete\n                if (!data.length) {\n                    _this._closeAutocomplete();\n                    return;\n                }\n                _this.setState({\n                    component: component,\n                    data: data,\n                    dataLoading: false,\n                });\n            });\n        };\n        _this._getSuggestions = function (paramTrigger) {\n            var _a = _this.state, stateTrigger = _a.currentTrigger, data = _a.data;\n            var currentTrigger = paramTrigger || stateTrigger;\n            if (!currentTrigger || !data || (data && !data.length))\n                return null;\n            return data;\n        };\n        _this._createRegExp = function () {\n            var trigger = _this.props.trigger;\n            // negative lookahead to match only the trigger + the actual token = \"bladhwd:adawd:word test\" => \":word\"\n            // https://stackoverflow.com/a/8057827/2719917\n            _this.tokenRegExp = new RegExp(\"([\" + Object.keys(trigger).join('') + \"])(?:(?!\\\\1)[^\\\\s])*$\");\n        };\n        /**\n         * Close autocomplete, also clean up trigger (to avoid slow promises)\n         */\n        _this._closeAutocomplete = function () {\n            _this.setState({\n                currentTrigger: null,\n                data: null,\n                dataLoading: false,\n                left: null,\n                top: null,\n            });\n        };\n        _this._cleanUpProps = function () {\n            var props = __assign({}, _this.props);\n            var notSafe = [\n                'additionalTextareaProps',\n                'className',\n                'closeCommandsList',\n                'closeMentionsList',\n                'closeOnClickOutside',\n                'containerClassName',\n                'containerStyle',\n                'disableMentions',\n                'dropdownClassName',\n                'dropdownStyle',\n                'grow',\n                'handleSubmit',\n                'innerRef',\n                'itemClassName',\n                'itemStyle',\n                'keycodeSubmitKeys',\n                'listClassName',\n                'listStyle',\n                'loaderClassName',\n                'loaderStyle',\n                'loadingComponent',\n                'minChar',\n                'movePopupAsYouType',\n                'onCaretPositionChange',\n                'onChange',\n                'ref',\n                'replaceWord',\n                'scrollToItem',\n                'showCommandsList',\n                'showMentionsList',\n                'SuggestionItem',\n                'SuggestionList',\n                'trigger',\n                'value',\n            ];\n            // eslint-disable-next-line\n            for (var prop in props) {\n                if (notSafe.includes(prop))\n                    delete props[prop];\n            }\n            return props;\n        };\n        _this._isCommand = function (text) {\n            if (text[0] !== '/')\n                return false;\n            var tokens = text.split(' ');\n            if (tokens.length > 1)\n                return false;\n            return true;\n        };\n        _this._changeHandler = function (e) {\n            var _a = _this.props, minChar = _a.minChar, movePopupAsYouType = _a.movePopupAsYouType, onCaretPositionChange = _a.onCaretPositionChange, onChange = _a.onChange, trigger = _a.trigger;\n            var _b = _this.state, left = _b.left, top = _b.top;\n            var textarea = e.target;\n            var selectionEnd = textarea.selectionEnd, selectionStart = textarea.selectionStart, value = textarea.value;\n            if (onChange) {\n                e.persist();\n                onChange(e);\n            }\n            if (onCaretPositionChange)\n                onCaretPositionChange(_this.getCaretPosition());\n            _this.setState({ value: value });\n            var currentTrigger;\n            var lastToken;\n            if (_this._isCommand(value)) {\n                currentTrigger = '/';\n                lastToken = value;\n            }\n            else {\n                var triggerTokens = Object.keys(trigger).join().replace('/', '');\n                var triggerNorWhitespace = \"[^\\\\s\" + triggerTokens + \"]*\";\n                var regex = new RegExp(\"(?!^|\\\\W)?[\" + triggerTokens + \"]\" + triggerNorWhitespace + \"\\\\s?\" + triggerNorWhitespace + \"$\", 'g');\n                var tokenMatch = value.slice(0, selectionEnd).match(regex);\n                lastToken = tokenMatch && tokenMatch[tokenMatch.length - 1].trim();\n                currentTrigger = (lastToken && Object.keys(trigger).find(function (a) { return a === lastToken[0]; })) || null;\n            }\n            /*\n             if we lost the trigger token or there is no following character we want to close\n             the autocomplete\n            */\n            if (!lastToken || lastToken.length <= minChar) {\n                _this._closeAutocomplete();\n                return;\n            }\n            var actualToken = lastToken.slice(1);\n            // if trigger is not configured step out from the function, otherwise proceed\n            if (!currentTrigger)\n                return;\n            if (movePopupAsYouType ||\n                (top === null && left === null) ||\n                // if we have single char - trigger it means we want to re-position the autocomplete\n                lastToken.length === 1) {\n                var _c = getCaretCoordinates(textarea, selectionEnd), newLeft = _c.left, newTop = _c.top;\n                _this.setState({\n                    // make position relative to textarea\n                    left: newLeft,\n                    top: newTop - _this.textareaRef.scrollTop || 0,\n                });\n            }\n            _this.setState({\n                actualToken: actualToken,\n                currentTrigger: currentTrigger,\n                selectionEnd: selectionEnd,\n                selectionStart: selectionStart,\n            }, function () {\n                try {\n                    _this._getValuesFromProvider();\n                }\n                catch (err) {\n                    errorMessage(err.message);\n                }\n            });\n        };\n        _this._selectHandler = function (e) {\n            var _a = _this.props, onCaretPositionChange = _a.onCaretPositionChange, onSelect = _a.onSelect;\n            if (onCaretPositionChange)\n                onCaretPositionChange(_this.getCaretPosition());\n            if (onSelect) {\n                e.persist();\n                onSelect(e);\n            }\n        };\n        // The textarea itself is outside the auto-select dropdown.\n        _this._onClickAndBlurHandler = function (e) {\n            var _a = _this.props, closeOnClickOutside = _a.closeOnClickOutside, onBlur = _a.onBlur;\n            // If this is a click: e.target is the textarea, and e.relatedTarget is the thing\n            // that was actually clicked. If we clicked inside the auto-select dropdown, then\n            // that's not a blur, from the auto-select point of view, so then do nothing.\n            var el = e.relatedTarget;\n            if (_this.dropdownRef && el instanceof Node && _this.dropdownRef.contains(el)) {\n                return;\n            }\n            if (closeOnClickOutside)\n                _this._closeAutocomplete();\n            if (onBlur) {\n                e.persist();\n                onBlur(e);\n            }\n        };\n        _this._onScrollHandler = function () { return _this._closeAutocomplete(); };\n        _this._dropdownScroll = function (item) {\n            var scrollToItem = _this.props.scrollToItem;\n            if (!scrollToItem)\n                return;\n            if (scrollToItem === true) {\n                defaultScrollToItem(_this.dropdownRef, item);\n                return;\n            }\n            if (typeof scrollToItem !== 'function' || scrollToItem.length !== 2) {\n                throw new Error('`scrollToItem` has to be boolean (true for default implementation) or function with two parameters: container, item.');\n            }\n            scrollToItem(_this.dropdownRef, item);\n        };\n        _this.getTriggerProps = function () {\n            var _a = _this.props, showCommandsList = _a.showCommandsList, showMentionsList = _a.showMentionsList, trigger = _a.trigger;\n            var _b = _this.state, component = _b.component, currentTrigger = _b.currentTrigger, selectionEnd = _b.selectionEnd, value = _b.value;\n            var selectedItem = _this._getItemOnSelect();\n            var suggestionData = _this._getSuggestions();\n            var textToReplace = _this._getTextToReplace();\n            var triggerProps = {\n                component: component,\n                currentTrigger: currentTrigger,\n                getSelectedItem: selectedItem,\n                getTextToReplace: textToReplace,\n                selectionEnd: selectionEnd,\n                value: value,\n                values: suggestionData,\n            };\n            if ((showCommandsList && trigger['/']) || (showMentionsList && trigger['@'])) {\n                var currentCommands_1;\n                var getCommands = trigger[showCommandsList ? '/' : '@'].dataProvider;\n                getCommands === null || getCommands === void 0 ? void 0 : getCommands('', showCommandsList ? '/' : '@', function (data) {\n                    currentCommands_1 = data;\n                });\n                triggerProps.component = showCommandsList ? CommandItem : UserItem;\n                triggerProps.currentTrigger = showCommandsList ? '/' : '@';\n                triggerProps.getTextToReplace = _this._getTextToReplace(showCommandsList ? '/' : '@');\n                triggerProps.getSelectedItem = _this._getItemOnSelect(showCommandsList ? '/' : '@');\n                triggerProps.selectionEnd = 1;\n                triggerProps.value = showCommandsList ? '/' : '@';\n                triggerProps.values = currentCommands_1;\n            }\n            return triggerProps;\n        };\n        var _a = _this.props, loadingComponent = _a.loadingComponent, trigger = _a.trigger, value = _a.value;\n        // TODO: it would be better to have the parent control state...\n        // if (value) this.state.value = value;\n        _this._createRegExp();\n        if (!loadingComponent) {\n            throw new Error('RTA: loadingComponent is not defined');\n        }\n        if (!trigger) {\n            throw new Error('RTA: trigger is not defined');\n        }\n        _this.state = {\n            actualToken: '',\n            component: null,\n            currentTrigger: null,\n            data: null,\n            dataLoading: false,\n            keycodeSubmitShiftE: false,\n            left: null,\n            listenerIndex: {},\n            selectionEnd: 0,\n            selectionStart: 0,\n            top: null,\n            value: value || '',\n        };\n        return _this;\n    }\n    ReactTextareaAutocomplete.prototype.componentDidMount = function () {\n        var _this = this;\n        Listeners.add(KEY_CODES.ESC, function () { return _this._closeAutocomplete(); });\n        Listeners.add(KEY_CODES.SPACE, function () { return _this._onSpace(); });\n        var listenerIndex = {};\n        var newSubmitKeys = this.props.keycodeSubmitKeys;\n        if (newSubmitKeys) {\n            var keycodeIndex = this.addKeycodeSubmitListeners(newSubmitKeys);\n            listenerIndex[keycodeIndex] = keycodeIndex;\n        }\n        else {\n            var enterIndex = Listeners.add(KEY_CODES.ENTER, function (e) { return _this._onEnter(e); });\n            listenerIndex[enterIndex] = enterIndex;\n        }\n        this.setState({\n            listenerIndex: listenerIndex,\n        });\n        Listeners.startListen();\n    };\n    ReactTextareaAutocomplete.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n        this._update(nextProps);\n    };\n    ReactTextareaAutocomplete.prototype.componentWillUnmount = function () {\n        Listeners.stopListen();\n        Listeners.remove(this.state.listenerIndex);\n    };\n    // TODO: This is an anti pattern in react, should come up with a better way\n    ReactTextareaAutocomplete.prototype._update = function (_a) {\n        var trigger = _a.trigger, value = _a.value;\n        var oldValue = this.state.value;\n        var oldTrigger = this.props.trigger;\n        if (value !== oldValue || !oldValue)\n            this.setState({ value: value });\n        /**\n         * check if trigger chars are changed, if so, change the regexp accordingly\n         */\n        if (Object.keys(trigger).join('') !== Object.keys(oldTrigger).join('')) {\n            this._createRegExp();\n        }\n    };\n    ReactTextareaAutocomplete.prototype.renderSuggestionListContainer = function () {\n        var _this = this;\n        var _a = this.props, disableMentions = _a.disableMentions, dropdownClassName = _a.dropdownClassName, dropdownStyle = _a.dropdownStyle, itemClassName = _a.itemClassName, itemStyle = _a.itemStyle, listClassName = _a.listClassName, SuggestionItem = _a.SuggestionItem, _b = _a.SuggestionList, SuggestionList = _b === void 0 ? DefaultSuggestionList : _b;\n        var triggerProps = this.getTriggerProps();\n        if (triggerProps.values &&\n            triggerProps.currentTrigger &&\n            !(disableMentions && triggerProps.currentTrigger === '@')) {\n            return (React.createElement(\"div\", { className: \"rta__autocomplete \" + (dropdownClassName || ''), ref: function (ref) {\n                    _this.dropdownRef = ref;\n                }, style: dropdownStyle },\n                React.createElement(SuggestionList, __assign({ className: listClassName, dropdownScroll: this._dropdownScroll, itemClassName: itemClassName, itemStyle: itemStyle, onSelect: this._onSelect, SuggestionItem: SuggestionItem }, triggerProps))));\n        }\n        return null;\n    };\n    ReactTextareaAutocomplete.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, className = _a.className, containerClassName = _a.containerClassName, containerStyle = _a.containerStyle, style = _a.style;\n        var maxRows = this.props.maxRows;\n        var _b = this.state, dataLoading = _b.dataLoading, value = _b.value;\n        if (!this.props.grow)\n            maxRows = 1;\n        return (React.createElement(\"div\", { className: \"rta \" + (dataLoading === true ? 'rta--loading' : '') + \" \" + (containerClassName || ''), style: containerStyle },\n            this.renderSuggestionListContainer(),\n            React.createElement(Textarea, __assign({}, this._cleanUpProps(), { className: \"rta__textarea \" + (className || ''), maxRows: maxRows, onBlur: this._onClickAndBlurHandler, onChange: this._changeHandler, onClick: this._onClickAndBlurHandler, onFocus: this.props.onFocus, onScroll: this._onScrollHandler, onSelect: this._selectHandler, ref: function (ref) {\n                    if (_this.props.innerRef)\n                        _this.props.innerRef(ref);\n                    _this.textareaRef = ref;\n                }, style: style, value: value }, this.props.additionalTextareaProps))));\n    };\n    ReactTextareaAutocomplete.defaultProps = {\n        closeOnClickOutside: true,\n        maxRows: 10,\n        minChar: 1,\n        movePopupAsYouType: false,\n        scrollToItem: true,\n        value: '',\n    };\n    return ReactTextareaAutocomplete;\n}(React.Component));\nexport { ReactTextareaAutocomplete };\nReactTextareaAutocomplete.propTypes = {\n    className: PropTypes.string,\n    closeOnClickOutside: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    containerStyle: PropTypes.object,\n    disableMentions: PropTypes.bool,\n    dropdownClassName: PropTypes.string,\n    dropdownStyle: PropTypes.object,\n    itemClassName: PropTypes.string,\n    itemStyle: PropTypes.object,\n    keycodeSubmitKeys: PropTypes.array,\n    listClassName: PropTypes.string,\n    listStyle: PropTypes.object,\n    loaderClassName: PropTypes.string,\n    loaderStyle: PropTypes.object,\n    loadingComponent: PropTypes.elementType,\n    minChar: PropTypes.number,\n    onBlur: PropTypes.func,\n    onCaretPositionChange: PropTypes.func,\n    onChange: PropTypes.func,\n    onSelect: PropTypes.func,\n    style: PropTypes.object,\n    SuggestionList: PropTypes.elementType,\n    trigger: triggerPropsCheck,\n    value: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}