{"ast":null,"code":"import React from 'react';\nimport { useTranslationContext } from '../../context/TranslationContext';\n/**\n * UI component for error indicator in a Channel\n */\n\nvar UnMemoizedLoadingErrorIndicator = function UnMemoizedLoadingErrorIndicator(_a) {\n  var error = _a.error;\n  var t = useTranslationContext('LoadingErrorIndicator').t;\n  if (!error) return null;\n  return React.createElement(\"div\", null, t('Error: {{ errorMessage }}', {\n    errorMessage: error.message\n  }));\n};\n\nexport var LoadingErrorIndicator = React.memo(UnMemoizedLoadingErrorIndicator, function (prevProps, nextProps) {\n  var _a, _b;\n\n  return ((_a = prevProps.error) === null || _a === void 0 ? void 0 : _a.message) === ((_b = nextProps.error) === null || _b === void 0 ? void 0 : _b.message);\n});","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/Loading/LoadingErrorIndicator.js"],"names":["React","useTranslationContext","UnMemoizedLoadingErrorIndicator","_a","error","t","createElement","errorMessage","message","LoadingErrorIndicator","memo","prevProps","nextProps","_b"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA;AACA;AACA;;AACA,IAAIC,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAUC,EAAV,EAAc;AAChD,MAAIC,KAAK,GAAGD,EAAE,CAACC,KAAf;AACA,MAAIC,CAAC,GAAGJ,qBAAqB,CAAC,uBAAD,CAArB,CAA+CI,CAAvD;AACA,MAAI,CAACD,KAAL,EACI,OAAO,IAAP;AACJ,SAAOJ,KAAK,CAACM,aAAN,CAAoB,KAApB,EAA2B,IAA3B,EAAiCD,CAAC,CAAC,2BAAD,EAA8B;AAAEE,IAAAA,YAAY,EAAEH,KAAK,CAACI;AAAtB,GAA9B,CAAlC,CAAP;AACH,CAND;;AAOA,OAAO,IAAIC,qBAAqB,GAAGT,KAAK,CAACU,IAAN,CAAWR,+BAAX,EAA4C,UAAUS,SAAV,EAAqBC,SAArB,EAAgC;AAAE,MAAIT,EAAJ,EAAQU,EAAR;;AAAY,SAAO,CAAC,CAACV,EAAE,GAAGQ,SAAS,CAACP,KAAhB,MAA2B,IAA3B,IAAmCD,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACK,OAAhE,OAA8E,CAACK,EAAE,GAAGD,SAAS,CAACR,KAAhB,MAA2B,IAA3B,IAAmCS,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACL,OAA7I,CAAP;AAA+J,CAAzP,CAA5B","sourcesContent":["import React from 'react';\nimport { useTranslationContext } from '../../context/TranslationContext';\n/**\n * UI component for error indicator in a Channel\n */\nvar UnMemoizedLoadingErrorIndicator = function (_a) {\n    var error = _a.error;\n    var t = useTranslationContext('LoadingErrorIndicator').t;\n    if (!error)\n        return null;\n    return React.createElement(\"div\", null, t('Error: {{ errorMessage }}', { errorMessage: error.message }));\n};\nexport var LoadingErrorIndicator = React.memo(UnMemoizedLoadingErrorIndicator, function (prevProps, nextProps) { var _a, _b; return ((_a = prevProps.error) === null || _a === void 0 ? void 0 : _a.message) === ((_b = nextProps.error) === null || _b === void 0 ? void 0 : _b.message); });\n"]},"metadata":{},"sourceType":"module"}