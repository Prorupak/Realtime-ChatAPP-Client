{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIcon as DefaultFileUploadIcon } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { KEY_CODES } from '../AutoCompleteTextarea/listener';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nexport var EditMessageForm = function () {\n  var _a = useChannelStateContext('EditMessageForm'),\n      acceptedFiles = _a.acceptedFiles,\n      multipleUploads = _a.multipleUploads;\n\n  var t = useTranslationContext('EditMessageForm').t;\n\n  var _b = useMessageInputContext('EditMessageForm'),\n      clearEditingState = _b.clearEditingState,\n      handleSubmit = _b.handleSubmit,\n      isUploadEnabled = _b.isUploadEnabled,\n      maxFilesLeft = _b.maxFilesLeft,\n      openEmojiPicker = _b.openEmojiPicker,\n      uploadNewFiles = _b.uploadNewFiles;\n\n  var _c = useComponentContext('EditMessageForm'),\n      _d = _c.EmojiIcon,\n      EmojiIcon = _d === void 0 ? DefaultEmojiIcon : _d,\n      _e = _c.FileUploadIcon,\n      FileUploadIcon = _e === void 0 ? DefaultFileUploadIcon : _e;\n\n  useEffect(function () {\n    var onKeyDown = function (event) {\n      if (event.keyCode === KEY_CODES.ESC && clearEditingState) clearEditingState();\n    };\n\n    document.addEventListener('keydown', onKeyDown);\n    return function () {\n      return document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [clearEditingState]);\n  return React.createElement(\"div\", {\n    className: 'str-chat__edit-message-form'\n  }, React.createElement(ImageDropzone, {\n    accept: acceptedFiles,\n    disabled: !isUploadEnabled || maxFilesLeft === 0,\n    handleFiles: uploadNewFiles,\n    maxNumberOfFiles: maxFilesLeft,\n    multiple: multipleUploads\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, isUploadEnabled && React.createElement(UploadsPreview, null), React.createElement(EmojiPicker, {\n    small: true\n  }), React.createElement(ChatAutoComplete, null), React.createElement(\"div\", {\n    className: 'str-chat__message-team-form-footer'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__edit-message-form-options'\n  }, React.createElement(\"span\", {\n    className: 'str-chat__input-emojiselect',\n    onClick: openEmojiPicker\n  }, React.createElement(EmojiIcon, null)), isUploadEnabled && React.createElement(\"div\", {\n    className: 'str-chat__fileupload-wrapper',\n    \"data-testid\": 'fileinput'\n  }, React.createElement(Tooltip, null, maxFilesLeft ? t('Attach files') : t(\"You've reached the maximum number of files\")), React.createElement(FileUploadButton, {\n    accepts: acceptedFiles,\n    disabled: maxFilesLeft === 0,\n    handleFiles: uploadNewFiles,\n    multiple: multipleUploads\n  }, React.createElement(\"span\", {\n    className: 'str-chat__input-fileupload'\n  }, React.createElement(FileUploadIcon, null))))), React.createElement(\"div\", null, React.createElement(\"button\", {\n    onClick: function () {\n      if (clearEditingState) {\n        clearEditingState();\n      }\n    }\n  }, t('Cancel')), React.createElement(\"button\", {\n    type: 'submit'\n  }, t('Send')))))));\n};","map":{"version":3,"sources":["/home/rupak/Desktop/Project/Chat Application/chatApp_client/node_modules/stream-chat-react/dist/components/MessageInput/EditMessageForm.js"],"names":["React","useEffect","FileUploadButton","ImageDropzone","EmojiPicker","EmojiIconSmall","DefaultEmojiIcon","FileUploadIcon","DefaultFileUploadIcon","UploadsPreview","KEY_CODES","ChatAutoComplete","Tooltip","useChannelStateContext","useTranslationContext","useMessageInputContext","useComponentContext","EditMessageForm","_a","acceptedFiles","multipleUploads","t","_b","clearEditingState","handleSubmit","isUploadEnabled","maxFilesLeft","openEmojiPicker","uploadNewFiles","_c","_d","EmojiIcon","_e","onKeyDown","event","keyCode","ESC","document","addEventListener","removeEventListener","createElement","className","accept","disabled","handleFiles","maxNumberOfFiles","multiple","onSubmit","small","onClick","accepts","type"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,kBAAhD;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,cAAc,IAAIC,gBAA3B,EAA6CC,cAAc,IAAIC,qBAA/D,QAA6F,SAA7F;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,gBAAT,QAAiC,sCAAjC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,OAAO,IAAIC,eAAe,GAAG,YAAY;AACrC,MAAIC,EAAE,GAAGL,sBAAsB,CAAC,iBAAD,CAA/B;AAAA,MAAoDM,aAAa,GAAGD,EAAE,CAACC,aAAvE;AAAA,MAAsFC,eAAe,GAAGF,EAAE,CAACE,eAA3G;;AACA,MAAIC,CAAC,GAAGP,qBAAqB,CAAC,iBAAD,CAArB,CAAyCO,CAAjD;;AACA,MAAIC,EAAE,GAAGP,sBAAsB,CAAC,iBAAD,CAA/B;AAAA,MAAoDQ,iBAAiB,GAAGD,EAAE,CAACC,iBAA3E;AAAA,MAA8FC,YAAY,GAAGF,EAAE,CAACE,YAAhH;AAAA,MAA8HC,eAAe,GAAGH,EAAE,CAACG,eAAnJ;AAAA,MAAoKC,YAAY,GAAGJ,EAAE,CAACI,YAAtL;AAAA,MAAoMC,eAAe,GAAGL,EAAE,CAACK,eAAzN;AAAA,MAA0OC,cAAc,GAAGN,EAAE,CAACM,cAA9P;;AACA,MAAIC,EAAE,GAAGb,mBAAmB,CAAC,iBAAD,CAA5B;AAAA,MAAiDc,EAAE,GAAGD,EAAE,CAACE,SAAzD;AAAA,MAAoEA,SAAS,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBxB,gBAAhB,GAAmCwB,EAAnH;AAAA,MAAuHE,EAAE,GAAGH,EAAE,CAACtB,cAA/H;AAAA,MAA+IA,cAAc,GAAGyB,EAAE,KAAK,KAAK,CAAZ,GAAgBxB,qBAAhB,GAAwCwB,EAAxM;;AACA/B,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIgC,SAAS,GAAG,UAAUC,KAAV,EAAiB;AAC7B,UAAIA,KAAK,CAACC,OAAN,KAAkBzB,SAAS,CAAC0B,GAA5B,IAAmCb,iBAAvC,EACIA,iBAAiB;AACxB,KAHD;;AAIAc,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCL,SAArC;AACA,WAAO,YAAY;AAAE,aAAOI,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCN,SAAxC,CAAP;AAA4D,KAAjF;AACH,GAPQ,EAON,CAACV,iBAAD,CAPM,CAAT;AAQA,SAAQvB,KAAK,CAACwC,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACJzC,KAAK,CAACwC,aAAN,CAAoBrC,aAApB,EAAmC;AAAEuC,IAAAA,MAAM,EAAEvB,aAAV;AAAyBwB,IAAAA,QAAQ,EAAE,CAAClB,eAAD,IAAoBC,YAAY,KAAK,CAAxE;AAA2EkB,IAAAA,WAAW,EAAEhB,cAAxF;AAAwGiB,IAAAA,gBAAgB,EAAEnB,YAA1H;AAAwIoB,IAAAA,QAAQ,EAAE1B;AAAlJ,GAAnC,EACIpB,KAAK,CAACwC,aAAN,CAAoB,MAApB,EAA4B;AAAEO,IAAAA,QAAQ,EAAEvB;AAAZ,GAA5B,EACIC,eAAe,IAAIzB,KAAK,CAACwC,aAAN,CAAoB/B,cAApB,EAAoC,IAApC,CADvB,EAEIT,KAAK,CAACwC,aAAN,CAAoBpC,WAApB,EAAiC;AAAE4C,IAAAA,KAAK,EAAE;AAAT,GAAjC,CAFJ,EAGIhD,KAAK,CAACwC,aAAN,CAAoB7B,gBAApB,EAAsC,IAAtC,CAHJ,EAIIX,KAAK,CAACwC,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACIzC,KAAK,CAACwC,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACIzC,KAAK,CAACwC,aAAN,CAAoB,MAApB,EAA4B;AAAEC,IAAAA,SAAS,EAAE,6BAAb;AAA4CQ,IAAAA,OAAO,EAAEtB;AAArD,GAA5B,EACI3B,KAAK,CAACwC,aAAN,CAAoBT,SAApB,EAA+B,IAA/B,CADJ,CADJ,EAGIN,eAAe,IAAKzB,KAAK,CAACwC,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE,8BAAb;AAA6C,mBAAe;AAA5D,GAA3B,EAChBzC,KAAK,CAACwC,aAAN,CAAoB5B,OAApB,EAA6B,IAA7B,EAAmCc,YAAY,GACzCL,CAAC,CAAC,cAAD,CADwC,GAEzCA,CAAC,CAAC,4CAAD,CAFP,CADgB,EAIhBrB,KAAK,CAACwC,aAAN,CAAoBtC,gBAApB,EAAsC;AAAEgD,IAAAA,OAAO,EAAE/B,aAAX;AAA0BwB,IAAAA,QAAQ,EAAEjB,YAAY,KAAK,CAArD;AAAwDkB,IAAAA,WAAW,EAAEhB,cAArE;AAAqFkB,IAAAA,QAAQ,EAAE1B;AAA/F,GAAtC,EACIpB,KAAK,CAACwC,aAAN,CAAoB,MAApB,EAA4B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA5B,EACIzC,KAAK,CAACwC,aAAN,CAAoBjC,cAApB,EAAoC,IAApC,CADJ,CADJ,CAJgB,CAHxB,CADJ,EAWIP,KAAK,CAACwC,aAAN,CAAoB,KAApB,EAA2B,IAA3B,EACIxC,KAAK,CAACwC,aAAN,CAAoB,QAApB,EAA8B;AAAES,IAAAA,OAAO,EAAE,YAAY;AAC7C,UAAI1B,iBAAJ,EAAuB;AACnBA,QAAAA,iBAAiB;AACpB;AACJ;AAJyB,GAA9B,EAISF,CAAC,CAAC,QAAD,CAJV,CADJ,EAMIrB,KAAK,CAACwC,aAAN,CAAoB,QAApB,EAA8B;AAAEW,IAAAA,IAAI,EAAE;AAAR,GAA9B,EAAkD9B,CAAC,CAAC,MAAD,CAAnD,CANJ,CAXJ,CAJJ,CADJ,CADI,CAAR;AAwBH,CArCM","sourcesContent":["import React, { useEffect } from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIcon as DefaultFileUploadIcon, } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { KEY_CODES } from '../AutoCompleteTextarea/listener';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nexport var EditMessageForm = function () {\n    var _a = useChannelStateContext('EditMessageForm'), acceptedFiles = _a.acceptedFiles, multipleUploads = _a.multipleUploads;\n    var t = useTranslationContext('EditMessageForm').t;\n    var _b = useMessageInputContext('EditMessageForm'), clearEditingState = _b.clearEditingState, handleSubmit = _b.handleSubmit, isUploadEnabled = _b.isUploadEnabled, maxFilesLeft = _b.maxFilesLeft, openEmojiPicker = _b.openEmojiPicker, uploadNewFiles = _b.uploadNewFiles;\n    var _c = useComponentContext('EditMessageForm'), _d = _c.EmojiIcon, EmojiIcon = _d === void 0 ? DefaultEmojiIcon : _d, _e = _c.FileUploadIcon, FileUploadIcon = _e === void 0 ? DefaultFileUploadIcon : _e;\n    useEffect(function () {\n        var onKeyDown = function (event) {\n            if (event.keyCode === KEY_CODES.ESC && clearEditingState)\n                clearEditingState();\n        };\n        document.addEventListener('keydown', onKeyDown);\n        return function () { return document.removeEventListener('keydown', onKeyDown); };\n    }, [clearEditingState]);\n    return (React.createElement(\"div\", { className: 'str-chat__edit-message-form' },\n        React.createElement(ImageDropzone, { accept: acceptedFiles, disabled: !isUploadEnabled || maxFilesLeft === 0, handleFiles: uploadNewFiles, maxNumberOfFiles: maxFilesLeft, multiple: multipleUploads },\n            React.createElement(\"form\", { onSubmit: handleSubmit },\n                isUploadEnabled && React.createElement(UploadsPreview, null),\n                React.createElement(EmojiPicker, { small: true }),\n                React.createElement(ChatAutoComplete, null),\n                React.createElement(\"div\", { className: 'str-chat__message-team-form-footer' },\n                    React.createElement(\"div\", { className: 'str-chat__edit-message-form-options' },\n                        React.createElement(\"span\", { className: 'str-chat__input-emojiselect', onClick: openEmojiPicker },\n                            React.createElement(EmojiIcon, null)),\n                        isUploadEnabled && (React.createElement(\"div\", { className: 'str-chat__fileupload-wrapper', \"data-testid\": 'fileinput' },\n                            React.createElement(Tooltip, null, maxFilesLeft\n                                ? t('Attach files')\n                                : t(\"You've reached the maximum number of files\")),\n                            React.createElement(FileUploadButton, { accepts: acceptedFiles, disabled: maxFilesLeft === 0, handleFiles: uploadNewFiles, multiple: multipleUploads },\n                                React.createElement(\"span\", { className: 'str-chat__input-fileupload' },\n                                    React.createElement(FileUploadIcon, null)))))),\n                    React.createElement(\"div\", null,\n                        React.createElement(\"button\", { onClick: function () {\n                                if (clearEditingState) {\n                                    clearEditingState();\n                                }\n                            } }, t('Cancel')),\n                        React.createElement(\"button\", { type: 'submit' }, t('Send'))))))));\n};\n"]},"metadata":{},"sourceType":"module"}