{"ast":null,"code":"import React from 'react';\nimport { LoadingChannels } from '../Loading/LoadingChannels';\nimport placeholder from '../../assets/str-chat__connection-error.svg';\nimport { useTranslationContext } from '../../context/TranslationContext';\n\nvar UnMemoizedChatDown = function (props) {\n  var image = props.image,\n      text = props.text,\n      _a = props.type,\n      type = _a === void 0 ? 'Error' : _a;\n  var t = useTranslationContext('ChatDown').t;\n  return React.createElement(\"div\", {\n    className: 'str-chat__down'\n  }, React.createElement(LoadingChannels, null), React.createElement(\"div\", {\n    className: 'str-chat__down-main'\n  }, React.createElement(\"img\", {\n    \"data-testid\": 'chatdown-img',\n    src: image || placeholder\n  }), React.createElement(\"h1\", null, type), React.createElement(\"h3\", null, text || t('Error connecting to chat, refresh the page to try again.'))));\n};\n/**\n * A simple indicator that chat functionality isn't available, triggered when the Chat API is unavailable or your network isn't working.\n */\n\n\nexport var ChatDown = React.memo(UnMemoizedChatDown);","map":{"version":3,"sources":["/home/rupak/Desktop/Project/Chat Application/chatApp_client/node_modules/stream-chat-react/dist/components/ChatDown/ChatDown.js"],"names":["React","LoadingChannels","placeholder","useTranslationContext","UnMemoizedChatDown","props","image","text","_a","type","t","createElement","className","src","ChatDown","memo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,SAASC,qBAAT,QAAsC,kCAAtC;;AACA,IAAIC,kBAAkB,GAAG,UAAUC,KAAV,EAAiB;AACtC,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AAAA,MAAyBC,IAAI,GAAGF,KAAK,CAACE,IAAtC;AAAA,MAA4CC,EAAE,GAAGH,KAAK,CAACI,IAAvD;AAAA,MAA6DA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAA9F;AACA,MAAIE,CAAC,GAAGP,qBAAqB,CAAC,UAAD,CAArB,CAAkCO,CAA1C;AACA,SAAQV,KAAK,CAACW,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACJZ,KAAK,CAACW,aAAN,CAAoBV,eAApB,EAAqC,IAArC,CADI,EAEJD,KAAK,CAACW,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACIZ,KAAK,CAACW,aAAN,CAAoB,KAApB,EAA2B;AAAE,mBAAe,cAAjB;AAAiCE,IAAAA,GAAG,EAAEP,KAAK,IAAIJ;AAA/C,GAA3B,CADJ,EAEIF,KAAK,CAACW,aAAN,CAAoB,IAApB,EAA0B,IAA1B,EAAgCF,IAAhC,CAFJ,EAGIT,KAAK,CAACW,aAAN,CAAoB,IAApB,EAA0B,IAA1B,EAAgCJ,IAAI,IAAIG,CAAC,CAAC,0DAAD,CAAzC,CAHJ,CAFI,CAAR;AAMH,CATD;AAUA;AACA;AACA;;;AACA,OAAO,IAAII,QAAQ,GAAGd,KAAK,CAACe,IAAN,CAAWX,kBAAX,CAAf","sourcesContent":["import React from 'react';\nimport { LoadingChannels } from '../Loading/LoadingChannels';\nimport placeholder from '../../assets/str-chat__connection-error.svg';\nimport { useTranslationContext } from '../../context/TranslationContext';\nvar UnMemoizedChatDown = function (props) {\n    var image = props.image, text = props.text, _a = props.type, type = _a === void 0 ? 'Error' : _a;\n    var t = useTranslationContext('ChatDown').t;\n    return (React.createElement(\"div\", { className: 'str-chat__down' },\n        React.createElement(LoadingChannels, null),\n        React.createElement(\"div\", { className: 'str-chat__down-main' },\n            React.createElement(\"img\", { \"data-testid\": 'chatdown-img', src: image || placeholder }),\n            React.createElement(\"h1\", null, type),\n            React.createElement(\"h3\", null, text || t('Error connecting to chat, refresh the page to try again.')))));\n};\n/**\n * A simple indicator that chat functionality isn't available, triggered when the Chat API is unavailable or your network isn't working.\n */\nexport var ChatDown = React.memo(UnMemoizedChatDown);\n"]},"metadata":{},"sourceType":"module"}