{"ast":null,"code":"import React from 'react';\nimport { LoadingIndicator as DefaultLoadingIndicator } from 'react-file-utils';\nimport { InfiniteScroll } from './InfiniteScroll';\nexport var InfiniteScrollPaginator = function InfiniteScrollPaginator(props) {\n  var children = props.children,\n      hasNextPage = props.hasNextPage,\n      _a = props.LoadingIndicator,\n      LoadingIndicator = _a === void 0 ? DefaultLoadingIndicator : _a,\n      loadNextPage = props.loadNextPage,\n      refreshing = props.refreshing,\n      reverse = props.reverse,\n      threshold = props.threshold;\n  return React.createElement(InfiniteScroll, {\n    hasMore: hasNextPage,\n    isLoading: refreshing,\n    isReverse: reverse,\n    loader: React.createElement(\"div\", {\n      className: 'str-chat__infinite-scroll-paginator',\n      key: 'loadingindicator'\n    }, React.createElement(LoadingIndicator, null)),\n    loadMore: loadNextPage,\n    threshold: threshold,\n    useWindow: false\n  }, children);\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/InfiniteScrollPaginator/InfiniteScrollPaginator.js"],"names":["React","LoadingIndicator","DefaultLoadingIndicator","InfiniteScroll","InfiniteScrollPaginator","props","children","hasNextPage","_a","loadNextPage","refreshing","reverse","threshold","createElement","hasMore","isLoading","isReverse","loader","className","key","loadMore","useWindow"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAgB,IAAIC,uBAA7B,QAA4D,kBAA5D;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAO,IAAIC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAUC,KAAV,EAAiB;AAClD,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MAA+BC,WAAW,GAAGF,KAAK,CAACE,WAAnD;AAAA,MAAgEC,EAAE,GAAGH,KAAK,CAACJ,gBAA3E;AAAA,MAA6FA,gBAAgB,GAAGO,EAAE,KAAK,KAAK,CAAZ,GAAgBN,uBAAhB,GAA0CM,EAA1J;AAAA,MAA8JC,YAAY,GAAGJ,KAAK,CAACI,YAAnL;AAAA,MAAiMC,UAAU,GAAGL,KAAK,CAACK,UAApN;AAAA,MAAgOC,OAAO,GAAGN,KAAK,CAACM,OAAhP;AAAA,MAAyPC,SAAS,GAAGP,KAAK,CAACO,SAA3Q;AACA,SAAQZ,KAAK,CAACa,aAAN,CAAoBV,cAApB,EAAoC;AAAEW,IAAAA,OAAO,EAAEP,WAAX;AAAwBQ,IAAAA,SAAS,EAAEL,UAAnC;AAA+CM,IAAAA,SAAS,EAAEL,OAA1D;AAAmEM,IAAAA,MAAM,EAAEjB,KAAK,CAACa,aAAN,CAAoB,KAApB,EAA2B;AAAEK,MAAAA,SAAS,EAAE,qCAAb;AAAoDC,MAAAA,GAAG,EAAE;AAAzD,KAA3B,EAC/GnB,KAAK,CAACa,aAAN,CAAoBZ,gBAApB,EAAsC,IAAtC,CAD+G,CAA3E;AACUmB,IAAAA,QAAQ,EAAEX,YADpB;AACkCG,IAAAA,SAAS,EAAEA,SAD7C;AACwDS,IAAAA,SAAS,EAAE;AADnE,GAApC,EACgHf,QADhH,CAAR;AAEH,CAJM","sourcesContent":["import React from 'react';\nimport { LoadingIndicator as DefaultLoadingIndicator } from 'react-file-utils';\nimport { InfiniteScroll } from './InfiniteScroll';\nexport var InfiniteScrollPaginator = function (props) {\n    var children = props.children, hasNextPage = props.hasNextPage, _a = props.LoadingIndicator, LoadingIndicator = _a === void 0 ? DefaultLoadingIndicator : _a, loadNextPage = props.loadNextPage, refreshing = props.refreshing, reverse = props.reverse, threshold = props.threshold;\n    return (React.createElement(InfiniteScroll, { hasMore: hasNextPage, isLoading: refreshing, isReverse: reverse, loader: React.createElement(\"div\", { className: 'str-chat__infinite-scroll-paginator', key: 'loadingindicator' },\n            React.createElement(LoadingIndicator, null)), loadMore: loadNextPage, threshold: threshold, useWindow: false }, children));\n};\n"]},"metadata":{},"sourceType":"module"}