{"ast":null,"code":"import React from 'react';\nimport { SafeAnchor } from '../SafeAnchor';\nimport giphyLogo from '../../assets/Poweredby_100px-White_VertText.png';\nimport { useTranslationContext } from '../../context/TranslationContext';\n\nvar UnMemoizedCard = function (props) {\n  var image_url = props.image_url,\n      og_scrape_url = props.og_scrape_url,\n      text = props.text,\n      thumb_url = props.thumb_url,\n      title = props.title,\n      title_link = props.title_link,\n      type = props.type;\n  var t = useTranslationContext('Card').t;\n  var image = thumb_url || image_url;\n\n  var trimUrl = function (url) {\n    if (url !== undefined && url !== null) {\n      var trimmedUrl = url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '').split('/')[0];\n      return trimmedUrl;\n    }\n\n    return null;\n  };\n\n  if (!title && !title_link && !image) {\n    return React.createElement(\"div\", {\n      className: \"str-chat__message-attachment-card str-chat__message-attachment-card--\" + type\n    }, React.createElement(\"div\", {\n      className: 'str-chat__message-attachment-card--content'\n    }, React.createElement(\"div\", {\n      className: 'str-chat__message-attachment-card--text'\n    }, t('this content could not be displayed'))));\n  }\n\n  if (!title_link && !og_scrape_url) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"str-chat__message-attachment-card str-chat__message-attachment-card--\" + type\n  }, image && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--header'\n  }, React.createElement(\"img\", {\n    alt: image,\n    src: image\n  })), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--content'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--flex'\n  }, title && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--title'\n  }, title), text && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--text'\n  }, text), (title_link || og_scrape_url) && React.createElement(SafeAnchor, {\n    className: 'str-chat__message-attachment-card--url',\n    href: title_link || og_scrape_url,\n    rel: 'noopener noreferrer',\n    target: '_blank'\n  }, trimUrl(title_link || og_scrape_url))), type === 'giphy' && React.createElement(\"img\", {\n    alt: 'giphy logo',\n    className: 'str-chat__message-attachment-card__giphy-logo',\n    \"data-testid\": 'card-giphy',\n    src: giphyLogo\n  })));\n};\n/**\n * Simple Card Layout for displaying links\n */\n\n\nexport var Card = React.memo(UnMemoizedCard);","map":{"version":3,"sources":["/home/rupak/Desktop/Project/Chat Application/chatApp_client/node_modules/stream-chat-react/dist/components/Attachment/Card.js"],"names":["React","SafeAnchor","giphyLogo","useTranslationContext","UnMemoizedCard","props","image_url","og_scrape_url","text","thumb_url","title","title_link","type","t","image","trimUrl","url","undefined","trimmedUrl","replace","split","createElement","className","alt","src","href","rel","target","Card","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { SafeAnchor } from '../SafeAnchor';\nimport giphyLogo from '../../assets/Poweredby_100px-White_VertText.png';\nimport { useTranslationContext } from '../../context/TranslationContext';\nvar UnMemoizedCard = function (props) {\n    var image_url = props.image_url, og_scrape_url = props.og_scrape_url, text = props.text, thumb_url = props.thumb_url, title = props.title, title_link = props.title_link, type = props.type;\n    var t = useTranslationContext('Card').t;\n    var image = thumb_url || image_url;\n    var trimUrl = function (url) {\n        if (url !== undefined && url !== null) {\n            var trimmedUrl = url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '').split('/')[0];\n            return trimmedUrl;\n        }\n        return null;\n    };\n    if (!title && !title_link && !image) {\n        return (React.createElement(\"div\", { className: \"str-chat__message-attachment-card str-chat__message-attachment-card--\" + type },\n            React.createElement(\"div\", { className: 'str-chat__message-attachment-card--content' },\n                React.createElement(\"div\", { className: 'str-chat__message-attachment-card--text' }, t('this content could not be displayed')))));\n    }\n    if (!title_link && !og_scrape_url) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"str-chat__message-attachment-card str-chat__message-attachment-card--\" + type },\n        image && (React.createElement(\"div\", { className: 'str-chat__message-attachment-card--header' },\n            React.createElement(\"img\", { alt: image, src: image }))),\n        React.createElement(\"div\", { className: 'str-chat__message-attachment-card--content' },\n            React.createElement(\"div\", { className: 'str-chat__message-attachment-card--flex' },\n                title && React.createElement(\"div\", { className: 'str-chat__message-attachment-card--title' }, title),\n                text && React.createElement(\"div\", { className: 'str-chat__message-attachment-card--text' }, text),\n                (title_link || og_scrape_url) && (React.createElement(SafeAnchor, { className: 'str-chat__message-attachment-card--url', href: title_link || og_scrape_url, rel: 'noopener noreferrer', target: '_blank' }, trimUrl(title_link || og_scrape_url)))),\n            type === 'giphy' && (React.createElement(\"img\", { alt: 'giphy logo', className: 'str-chat__message-attachment-card__giphy-logo', \"data-testid\": 'card-giphy', src: giphyLogo })))));\n};\n/**\n * Simple Card Layout for displaying links\n */\nexport var Card = React.memo(UnMemoizedCard);\n"]},"metadata":{},"sourceType":"module"}