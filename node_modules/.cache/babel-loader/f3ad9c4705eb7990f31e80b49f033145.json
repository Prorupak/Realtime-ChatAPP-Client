{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar XmlElement = require('./XmlElement');\n\nvar XmlNode = require('./XmlNode');\n/**\nRepresents an XML document. All elements within the document are descendants of\nthis node.\n\n@public\n*/\n\n\nvar XmlDocument = /*#__PURE__*/function (_XmlNode) {\n  _inherits(XmlDocument, _XmlNode);\n\n  var _super = _createSuper(XmlDocument);\n\n  /**\n  @param {Array<XmlComment|XmlElement|XmlProcessingInstruction>} [children]\n  */\n  function XmlDocument() {\n    var _this;\n\n    var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, XmlDocument);\n\n    _this = _super.call(this);\n    /**\n    Child nodes of this document.\n     @type {Array<XmlComment|XmlElement|XmlProcessingInstruction>}\n    @public\n    */\n\n    _this.children = children;\n    return _this;\n  }\n\n  _createClass(XmlDocument, [{\n    key: \"document\",\n    get: function get() {\n      return this;\n    }\n    /**\n    Root element of this document, or `null` if this document is empty.\n     @type {XmlElement?}\n    @public\n    */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      // @ts-ignore\n      return this.children.find(function (child) {\n        return child instanceof XmlElement;\n      }) || null;\n    }\n    /**\n    Text content of this document and all its descendants.\n     @type {string}\n    @public\n    */\n\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this.children.map(function (child) {\n        return 'text' in child ? child.text : '';\n      }).join('');\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return XmlNode.TYPE_DOCUMENT;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return Object.assign(XmlNode.prototype.toJSON.call(this), {\n        children: this.children.map(function (child) {\n          return child.toJSON();\n        })\n      });\n    }\n  }]);\n\n  return XmlDocument;\n}(XmlNode);\n\nmodule.exports = XmlDocument;\n/** @typedef {import('./XmlComment')} XmlComment */\n\n/** @typedef {import('./XmlProcessingInstruction')} XmlProcessingInstruction */","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/@rgrove/parse-xml/src/lib/XmlDocument.js"],"names":["XmlElement","require","XmlNode","XmlDocument","children","find","child","map","text","join","TYPE_DOCUMENT","Object","assign","prototype","toJSON","call","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAA1B;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;;IACME,W;;;;;AACJ;AACF;AACA;AACE,yBAA2B;AAAA;;AAAA,QAAfC,QAAe,uEAAJ,EAAI;;AAAA;;AACzB;AAEA;AACJ;AACA;AACA;AACA;;AAEI,UAAKA,QAAL,GAAgBA,QAAhB;AATyB;AAU1B;;;;SAED,eAAe;AACb,aAAO,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;;SAEE,eAAW;AACT;AACA,aAAO,KAAKA,QAAL,CAAcC,IAAd,CAAmB,UAACC,KAAD;AAAA,eAAWA,KAAK,YAAYN,UAA5B;AAAA,OAAnB,KAA8D,IAArE;AACD;AAED;AACF;AACA;AACA;AACA;;;;SAEE,eAAW;AACT,aAAO,KAAKI,QAAL,CACJG,GADI,CACA,UAAAD,KAAK;AAAA,eAAI,UAAUA,KAAV,GAAkBA,KAAK,CAACE,IAAxB,GAA+B,EAAnC;AAAA,OADL,EAEJC,IAFI,CAEC,EAFD,CAAP;AAGD;;;SAED,eAAW;AACT,aAAOP,OAAO,CAACQ,aAAf;AACD;;;WAED,kBAAS;AACP,aAAOC,MAAM,CAACC,MAAP,CAAcV,OAAO,CAACW,SAAR,CAAkBC,MAAlB,CAAyBC,IAAzB,CAA8B,IAA9B,CAAd,EAAmD;AACxDX,QAAAA,QAAQ,EAAE,KAAKA,QAAL,CAAcG,GAAd,CAAkB,UAAAD,KAAK;AAAA,iBAAIA,KAAK,CAACQ,MAAN,EAAJ;AAAA,SAAvB;AAD8C,OAAnD,CAAP;AAGD;;;;EAnDuBZ,O;;AAsD1Bc,MAAM,CAACC,OAAP,GAAiBd,WAAjB;AAEA;;AACA","sourcesContent":["'use strict';\n\nconst XmlElement = require('./XmlElement');\nconst XmlNode = require('./XmlNode');\n\n/**\nRepresents an XML document. All elements within the document are descendants of\nthis node.\n\n@public\n*/\nclass XmlDocument extends XmlNode {\n  /**\n  @param {Array<XmlComment|XmlElement|XmlProcessingInstruction>} [children]\n  */\n  constructor(children = []) {\n    super();\n\n    /**\n    Child nodes of this document.\n\n    @type {Array<XmlComment|XmlElement|XmlProcessingInstruction>}\n    @public\n    */\n    this.children = children;\n  }\n\n  get document() {\n    return this;\n  }\n\n  /**\n  Root element of this document, or `null` if this document is empty.\n\n  @type {XmlElement?}\n  @public\n  */\n  get root() {\n    // @ts-ignore\n    return this.children.find((child) => child instanceof XmlElement) || null;\n  }\n\n  /**\n  Text content of this document and all its descendants.\n\n  @type {string}\n  @public\n  */\n  get text() {\n    return this.children\n      .map(child => 'text' in child ? child.text : '')\n      .join('');\n  }\n\n  get type() {\n    return XmlNode.TYPE_DOCUMENT;\n  }\n\n  toJSON() {\n    return Object.assign(XmlNode.prototype.toJSON.call(this), {\n      children: this.children.map(child => child.toJSON()),\n    });\n  }\n}\n\nmodule.exports = XmlDocument;\n\n/** @typedef {import('./XmlComment')} XmlComment */\n/** @typedef {import('./XmlProcessingInstruction')} XmlProcessingInstruction */\n"]},"metadata":{},"sourceType":"script"}