{"ast":null,"code":"import React from 'react';\nimport { ReplyIcon } from './icons';\nimport { useTranslationContext } from '../../context/TranslationContext';\n\nvar UnMemoizedMessageRepliesCountButton = function (props) {\n  var labelPlural = props.labelPlural,\n      labelSingle = props.labelSingle,\n      onClick = props.onClick,\n      _a = props.reply_count,\n      reply_count = _a === void 0 ? 0 : _a;\n  var t = useTranslationContext('MessageRepliesCountButton').t;\n  var singleReplyText;\n  var pluralReplyText;\n\n  if (reply_count === 1) {\n    if (labelSingle) {\n      singleReplyText = \"1 \" + labelSingle;\n    } else {\n      singleReplyText = t('1 reply');\n    }\n  }\n\n  if (reply_count && reply_count > 1) {\n    if (labelPlural) {\n      pluralReplyText = reply_count + \" \" + labelPlural;\n    } else {\n      pluralReplyText = t('{{ replyCount }} replies', {\n        replyCount: reply_count\n      });\n    }\n  }\n\n  if (reply_count && reply_count !== 0) {\n    return React.createElement(\"button\", {\n      className: 'str-chat__message-replies-count-button',\n      \"data-testid\": 'replies-count-button',\n      onClick: onClick\n    }, React.createElement(ReplyIcon, null), reply_count === 1 ? singleReplyText : pluralReplyText);\n  }\n\n  return null;\n};\n\nexport var MessageRepliesCountButton = React.memo(UnMemoizedMessageRepliesCountButton);","map":{"version":3,"sources":["/home/rupak/Desktop/Project/Chat Application/chatApp_client/node_modules/stream-chat-react/dist/components/Message/MessageRepliesCountButton.js"],"names":["React","ReplyIcon","useTranslationContext","UnMemoizedMessageRepliesCountButton","props","labelPlural","labelSingle","onClick","_a","reply_count","t","singleReplyText","pluralReplyText","replyCount","createElement","className","MessageRepliesCountButton","memo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,qBAAT,QAAsC,kCAAtC;;AACA,IAAIC,mCAAmC,GAAG,UAAUC,KAAV,EAAiB;AACvD,MAAIC,WAAW,GAAGD,KAAK,CAACC,WAAxB;AAAA,MAAqCC,WAAW,GAAGF,KAAK,CAACE,WAAzD;AAAA,MAAsEC,OAAO,GAAGH,KAAK,CAACG,OAAtF;AAAA,MAA+FC,EAAE,GAAGJ,KAAK,CAACK,WAA1G;AAAA,MAAuHA,WAAW,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAAzJ;AACA,MAAIE,CAAC,GAAGR,qBAAqB,CAAC,2BAAD,CAArB,CAAmDQ,CAA3D;AACA,MAAIC,eAAJ;AACA,MAAIC,eAAJ;;AACA,MAAIH,WAAW,KAAK,CAApB,EAAuB;AACnB,QAAIH,WAAJ,EAAiB;AACbK,MAAAA,eAAe,GAAG,OAAOL,WAAzB;AACH,KAFD,MAGK;AACDK,MAAAA,eAAe,GAAGD,CAAC,CAAC,SAAD,CAAnB;AACH;AACJ;;AACD,MAAID,WAAW,IAAIA,WAAW,GAAG,CAAjC,EAAoC;AAChC,QAAIJ,WAAJ,EAAiB;AACbO,MAAAA,eAAe,GAAGH,WAAW,GAAG,GAAd,GAAoBJ,WAAtC;AACH,KAFD,MAGK;AACDO,MAAAA,eAAe,GAAGF,CAAC,CAAC,0BAAD,EAA6B;AAC5CG,QAAAA,UAAU,EAAEJ;AADgC,OAA7B,CAAnB;AAGH;AACJ;;AACD,MAAIA,WAAW,IAAIA,WAAW,KAAK,CAAnC,EAAsC;AAClC,WAAQT,KAAK,CAACc,aAAN,CAAoB,QAApB,EAA8B;AAAEC,MAAAA,SAAS,EAAE,wCAAb;AAAuD,qBAAe,sBAAtE;AAA8FR,MAAAA,OAAO,EAAEA;AAAvG,KAA9B,EACJP,KAAK,CAACc,aAAN,CAAoBb,SAApB,EAA+B,IAA/B,CADI,EAEJQ,WAAW,KAAK,CAAhB,GAAoBE,eAApB,GAAsCC,eAFlC,CAAR;AAGH;;AACD,SAAO,IAAP;AACH,CA7BD;;AA8BA,OAAO,IAAII,yBAAyB,GAAGhB,KAAK,CAACiB,IAAN,CAAWd,mCAAX,CAAhC","sourcesContent":["import React from 'react';\nimport { ReplyIcon } from './icons';\nimport { useTranslationContext } from '../../context/TranslationContext';\nvar UnMemoizedMessageRepliesCountButton = function (props) {\n    var labelPlural = props.labelPlural, labelSingle = props.labelSingle, onClick = props.onClick, _a = props.reply_count, reply_count = _a === void 0 ? 0 : _a;\n    var t = useTranslationContext('MessageRepliesCountButton').t;\n    var singleReplyText;\n    var pluralReplyText;\n    if (reply_count === 1) {\n        if (labelSingle) {\n            singleReplyText = \"1 \" + labelSingle;\n        }\n        else {\n            singleReplyText = t('1 reply');\n        }\n    }\n    if (reply_count && reply_count > 1) {\n        if (labelPlural) {\n            pluralReplyText = reply_count + \" \" + labelPlural;\n        }\n        else {\n            pluralReplyText = t('{{ replyCount }} replies', {\n                replyCount: reply_count,\n            });\n        }\n    }\n    if (reply_count && reply_count !== 0) {\n        return (React.createElement(\"button\", { className: 'str-chat__message-replies-count-button', \"data-testid\": 'replies-count-button', onClick: onClick },\n            React.createElement(ReplyIcon, null),\n            reply_count === 1 ? singleReplyText : pluralReplyText));\n    }\n    return null;\n};\nexport var MessageRepliesCountButton = React.memo(UnMemoizedMessageRepliesCountButton);\n"]},"metadata":{},"sourceType":"module"}