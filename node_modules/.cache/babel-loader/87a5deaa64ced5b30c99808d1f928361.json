{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nexport var channelReducer = function (state, action) {\n  var _a;\n\n  switch (action.type) {\n    case 'closeThread':\n      {\n        return __assign(__assign({}, state), {\n          thread: null,\n          threadLoadingMore: false,\n          threadMessages: []\n        });\n      }\n\n    case 'copyMessagesFromChannel':\n      {\n        var channel = action.channel,\n            parentId = action.parentId;\n        return __assign(__assign({}, state), {\n          messages: __spreadArray([], channel.state.messages),\n          pinnedMessages: __spreadArray([], channel.state.pinnedMessages),\n          threadMessages: parentId ? __assign({}, channel.state.threads)[parentId] || [] : state.threadMessages\n        });\n      }\n\n    case 'copyStateFromChannelOnEvent':\n      {\n        var channel = action.channel;\n        return __assign(__assign({}, state), {\n          members: __assign({}, channel.state.members),\n          messages: __spreadArray([], channel.state.messages),\n          pinnedMessages: __spreadArray([], channel.state.pinnedMessages),\n          read: __assign({}, channel.state.read),\n          watcherCount: channel.state.watcher_count,\n          watchers: __assign({}, channel.state.watchers)\n        });\n      }\n\n    case 'initStateFromChannel':\n      {\n        var channel = action.channel;\n        return __assign(__assign({}, state), {\n          loading: false,\n          members: __assign({}, channel.state.members),\n          messages: __spreadArray([], channel.state.messages),\n          pinnedMessages: __spreadArray([], channel.state.pinnedMessages),\n          read: __assign({}, channel.state.read),\n          watcherCount: channel.state.watcher_count,\n          watchers: __assign({}, channel.state.watchers)\n        });\n      }\n\n    case 'loadMoreFinished':\n      {\n        var hasMore = action.hasMore,\n            messages = action.messages;\n        return __assign(__assign({}, state), {\n          hasMore: hasMore,\n          loadingMore: false,\n          messages: messages\n        });\n      }\n\n    case 'loadMoreThreadFinished':\n      {\n        var threadHasMore = action.threadHasMore,\n            threadMessages = action.threadMessages;\n        return __assign(__assign({}, state), {\n          threadHasMore: threadHasMore,\n          threadLoadingMore: false,\n          threadMessages: threadMessages\n        });\n      }\n\n    case 'openThread':\n      {\n        var channel = action.channel,\n            message = action.message;\n        return __assign(__assign({}, state), {\n          thread: message,\n          threadMessages: message.id ? __assign({}, channel.state.threads)[message.id] || [] : []\n        });\n      }\n\n    case 'setError':\n      {\n        var error = action.error;\n        return __assign(__assign({}, state), {\n          error: error\n        });\n      }\n\n    case 'setLoadingMore':\n      {\n        var loadingMore = action.loadingMore;\n        return __assign(__assign({}, state), {\n          loadingMore: loadingMore\n        });\n      }\n\n    case 'setThread':\n      {\n        var message = action.message;\n        return __assign(__assign({}, state), {\n          thread: message\n        });\n      }\n\n    case 'setTyping':\n      {\n        var channel = action.channel;\n        return __assign(__assign({}, state), {\n          typing: __assign({}, channel.state.typing)\n        });\n      }\n\n    case 'startLoadingThread':\n      {\n        return __assign(__assign({}, state), {\n          threadLoadingMore: true\n        });\n      }\n\n    case 'updateThreadOnEvent':\n      {\n        var channel = action.channel,\n            message = action.message;\n        if (!state.thread) return state;\n        return __assign(__assign({}, state), {\n          thread: (message === null || message === void 0 ? void 0 : message.id) === state.thread.id ? channel.state.formatMessage(message) : state.thread,\n          threadMessages: ((_a = state.thread) === null || _a === void 0 ? void 0 : _a.id) ? __assign({}, channel.state.threads)[state.thread.id] || [] : []\n        });\n      }\n\n    default:\n      return state;\n  }\n};\nexport var initialState = {\n  error: null,\n  hasMore: true,\n  loading: true,\n  loadingMore: false,\n  members: {},\n  messages: [],\n  pinnedMessages: [],\n  read: {},\n  thread: null,\n  threadHasMore: true,\n  threadLoadingMore: false,\n  threadMessages: [],\n  typing: {},\n  watcherCount: 0,\n  watchers: {}\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/Channel/channelState.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArray","to","from","il","j","channelReducer","state","action","_a","type","thread","threadLoadingMore","threadMessages","channel","parentId","messages","pinnedMessages","threads","members","read","watcherCount","watcher_count","watchers","loading","hasMore","loadingMore","threadHasMore","message","id","error","typing","formatMessage","initialState"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nexport var channelReducer = function (state, action) {\n    var _a;\n    switch (action.type) {\n        case 'closeThread': {\n            return __assign(__assign({}, state), { thread: null, threadLoadingMore: false, threadMessages: [] });\n        }\n        case 'copyMessagesFromChannel': {\n            var channel = action.channel, parentId = action.parentId;\n            return __assign(__assign({}, state), { messages: __spreadArray([], channel.state.messages), pinnedMessages: __spreadArray([], channel.state.pinnedMessages), threadMessages: parentId\n                    ? __assign({}, channel.state.threads)[parentId] || []\n                    : state.threadMessages });\n        }\n        case 'copyStateFromChannelOnEvent': {\n            var channel = action.channel;\n            return __assign(__assign({}, state), { members: __assign({}, channel.state.members), messages: __spreadArray([], channel.state.messages), pinnedMessages: __spreadArray([], channel.state.pinnedMessages), read: __assign({}, channel.state.read), watcherCount: channel.state.watcher_count, watchers: __assign({}, channel.state.watchers) });\n        }\n        case 'initStateFromChannel': {\n            var channel = action.channel;\n            return __assign(__assign({}, state), { loading: false, members: __assign({}, channel.state.members), messages: __spreadArray([], channel.state.messages), pinnedMessages: __spreadArray([], channel.state.pinnedMessages), read: __assign({}, channel.state.read), watcherCount: channel.state.watcher_count, watchers: __assign({}, channel.state.watchers) });\n        }\n        case 'loadMoreFinished': {\n            var hasMore = action.hasMore, messages = action.messages;\n            return __assign(__assign({}, state), { hasMore: hasMore, loadingMore: false, messages: messages });\n        }\n        case 'loadMoreThreadFinished': {\n            var threadHasMore = action.threadHasMore, threadMessages = action.threadMessages;\n            return __assign(__assign({}, state), { threadHasMore: threadHasMore, threadLoadingMore: false, threadMessages: threadMessages });\n        }\n        case 'openThread': {\n            var channel = action.channel, message = action.message;\n            return __assign(__assign({}, state), { thread: message, threadMessages: message.id ? __assign({}, channel.state.threads)[message.id] || [] : [] });\n        }\n        case 'setError': {\n            var error = action.error;\n            return __assign(__assign({}, state), { error: error });\n        }\n        case 'setLoadingMore': {\n            var loadingMore = action.loadingMore;\n            return __assign(__assign({}, state), { loadingMore: loadingMore });\n        }\n        case 'setThread': {\n            var message = action.message;\n            return __assign(__assign({}, state), { thread: message });\n        }\n        case 'setTyping': {\n            var channel = action.channel;\n            return __assign(__assign({}, state), { typing: __assign({}, channel.state.typing) });\n        }\n        case 'startLoadingThread': {\n            return __assign(__assign({}, state), { threadLoadingMore: true });\n        }\n        case 'updateThreadOnEvent': {\n            var channel = action.channel, message = action.message;\n            if (!state.thread)\n                return state;\n            return __assign(__assign({}, state), { thread: (message === null || message === void 0 ? void 0 : message.id) === state.thread.id ? channel.state.formatMessage(message) : state.thread, threadMessages: ((_a = state.thread) === null || _a === void 0 ? void 0 : _a.id) ? __assign({}, channel.state.threads)[state.thread.id] || [] : [] });\n        }\n        default:\n            return state;\n    }\n};\nexport var initialState = {\n    error: null,\n    hasMore: true,\n    loading: true,\n    loadingMore: false,\n    members: {},\n    messages: [],\n    pinnedMessages: [],\n    read: {},\n    thread: null,\n    threadHasMore: true,\n    threadLoadingMore: false,\n    threadMessages: [],\n    typing: {},\n    watcherCount: 0,\n    watchers: {},\n};\n"]},"metadata":{},"sourceType":"module"}