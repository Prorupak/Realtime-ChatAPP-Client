{"ast":null,"code":"import React, { createContext, useContext } from 'react';\nexport var MessageInputContext = createContext(undefined);\nexport var MessageInputContextProvider = function (_a) {\n  var children = _a.children,\n      value = _a.value;\n  return React.createElement(MessageInputContext.Provider, {\n    value: value\n  }, children);\n};\nexport var useMessageInputContext = function (componentName) {\n  var contextValue = useContext(MessageInputContext);\n\n  if (!contextValue) {\n    console.warn(\"The useMessageInputContext hook was called outside of the MessageInputContext provider. Make sure this hook is called within the MessageInput's UI component. The errored call is located in the \" + componentName + \" component.\");\n    return {};\n  }\n\n  return contextValue;\n};","map":{"version":3,"sources":["/home/rupak/Desktop/Project/Chat Application/chatApp_client/node_modules/stream-chat-react/dist/context/MessageInputContext.js"],"names":["React","createContext","useContext","MessageInputContext","undefined","MessageInputContextProvider","_a","children","value","createElement","Provider","useMessageInputContext","componentName","contextValue","console","warn"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAO,IAAIC,mBAAmB,GAAGF,aAAa,CAACG,SAAD,CAAvC;AACP,OAAO,IAAIC,2BAA2B,GAAG,UAAUC,EAAV,EAAc;AACnD,MAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;AAAA,MAA4BC,KAAK,GAAGF,EAAE,CAACE,KAAvC;AACA,SAAQR,KAAK,CAACS,aAAN,CAAoBN,mBAAmB,CAACO,QAAxC,EAAkD;AAAEF,IAAAA,KAAK,EAAEA;AAAT,GAAlD,EAAoED,QAApE,CAAR;AACH,CAHM;AAIP,OAAO,IAAII,sBAAsB,GAAG,UAAUC,aAAV,EAAyB;AACzD,MAAIC,YAAY,GAAGX,UAAU,CAACC,mBAAD,CAA7B;;AACA,MAAI,CAACU,YAAL,EAAmB;AACfC,IAAAA,OAAO,CAACC,IAAR,CAAa,sMAAsMH,aAAtM,GAAsN,aAAnO;AACA,WAAO,EAAP;AACH;;AACD,SAAOC,YAAP;AACH,CAPM","sourcesContent":["import React, { createContext, useContext } from 'react';\nexport var MessageInputContext = createContext(undefined);\nexport var MessageInputContextProvider = function (_a) {\n    var children = _a.children, value = _a.value;\n    return (React.createElement(MessageInputContext.Provider, { value: value }, children));\n};\nexport var useMessageInputContext = function (componentName) {\n    var contextValue = useContext(MessageInputContext);\n    if (!contextValue) {\n        console.warn(\"The useMessageInputContext hook was called outside of the MessageInputContext provider. Make sure this hook is called within the MessageInput's UI component. The errored call is located in the \" + componentName + \" component.\");\n        return {};\n    }\n    return contextValue;\n};\n"]},"metadata":{},"sourceType":"module"}