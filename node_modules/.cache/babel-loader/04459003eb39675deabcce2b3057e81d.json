{"ast":null,"code":"import _regeneratorRuntime from\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useChatContext}from'stream-chat-react';import{UserList}from'./';import{CloseCreateChannel}from'../assets';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChannelNameInput=function ChannelNameInput(_ref){var _ref$channelName=_ref.channelName,channelName=_ref$channelName===void 0?'':_ref$channelName,setChannelName=_ref.setChannelName;var handleChange=function handleChange(event){event.preventDefault();setChannelName(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"channel-name-input__wrapper\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{value:channelName,onChange:handleChange,placeholder:\"channel-name\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Add Members\"})]});};var EditChannel=function EditChannel(_ref2){var _channel$data;var setIsEditing=_ref2.setIsEditing;var _useChatContext=useChatContext(),channel=_useChatContext.channel;var _useState=useState(channel===null||channel===void 0?void 0:(_channel$data=channel.data)===null||_channel$data===void 0?void 0:_channel$data.name),_useState2=_slicedToArray(_useState,2),channelName=_useState2[0],setChannelName=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selectedUsers=_useState4[0],setSelectedUsers=_useState4[1];var updateChannel=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var nameChanged;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();nameChanged=channelName!==(channel.data.name||channel.data.id);if(!nameChanged){_context.next=5;break;}_context.next=5;return channel.update({name:channelName},{text:\"Channel name changed to \".concat(channelName)});case 5:if(!selectedUsers.length){_context.next=8;break;}_context.next=8;return channel.addMembers(selectedUsers);case 8:setChannelName(null);setIsEditing(false);setSelectedUsers([]);case 11:case\"end\":return _context.stop();}}},_callee);}));return function updateChannel(_x){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"edit-channel__container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"edit-channel__header\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Edit Channel\"}),/*#__PURE__*/_jsx(CloseCreateChannel,{setIsEditing:setIsEditing})]}),/*#__PURE__*/_jsx(ChannelNameInput,{channelName:channelName,setChannelName:setChannelName}),/*#__PURE__*/_jsx(UserList,{setSelectedUsers:setSelectedUsers}),/*#__PURE__*/_jsx(\"div\",{className:\"edit-channel__button-wrapper\",onClick:updateChannel,children:/*#__PURE__*/_jsx(\"p\",{children:\"Save Changes\"})})]});};export default EditChannel;","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/src/components/EditChannel.jsx"],"names":["React","useState","useChatContext","UserList","CloseCreateChannel","ChannelNameInput","channelName","setChannelName","handleChange","event","preventDefault","target","value","EditChannel","setIsEditing","channel","data","name","selectedUsers","setSelectedUsers","updateChannel","nameChanged","id","update","text","length","addMembers"],"mappings":"ghBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,mBAA/B,CAEA,OAASC,QAAT,KAAyB,IAAzB,CACA,OAASC,kBAAT,KAAmC,WAAnC,C,wFAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAA0C,2BAAvCC,WAAuC,CAAvCA,WAAuC,2BAAzB,EAAyB,kBAArBC,cAAqB,MAArBA,cAAqB,CAC/D,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5BA,KAAK,CAACC,cAAN,GAEAH,cAAc,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAd,CACH,CAJD,CAMA,mBACI,aAAK,SAAS,CAAC,6BAAf,wBACI,2BADJ,cAEI,cAAO,KAAK,CAAEN,WAAd,CAA2B,QAAQ,CAAEE,YAArC,CAAmD,WAAW,CAAC,cAA/D,EAFJ,cAGI,kCAHJ,GADJ,CAOH,CAdD,CAgBA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,OAAsB,sBAAnBC,CAAAA,YAAmB,OAAnBA,YAAmB,qBAClBZ,cAAc,EADI,CAC9Ba,OAD8B,iBAC9BA,OAD8B,eAEAd,QAAQ,CAACc,OAAD,SAACA,OAAD,gCAACA,OAAO,CAAEC,IAAV,wCAAC,cAAeC,IAAhB,CAFR,wCAE/BX,WAF+B,eAElBC,cAFkB,8BAGIN,QAAQ,CAAC,EAAD,CAHZ,yCAG/BiB,aAH+B,eAGhBC,gBAHgB,eAKtC,GAAMC,CAAAA,aAAa,2FAAG,iBAAOX,KAAP,kIAClBA,KAAK,CAACC,cAAN,GAEMW,WAHY,CAGEf,WAAW,IAAMS,OAAO,CAACC,IAAR,CAAaC,IAAb,EAAqBF,OAAO,CAACC,IAAR,CAAaM,EAAxC,CAHb,KAKfD,WALe,+CAMRN,CAAAA,OAAO,CAACQ,MAAR,CAAe,CAAEN,IAAI,CAAEX,WAAR,CAAf,CAAsC,CAAEkB,IAAI,mCAA6BlB,WAA7B,CAAN,CAAtC,CANQ,YASfY,aAAa,CAACO,MATC,+CAURV,CAAAA,OAAO,CAACW,UAAR,CAAmBR,aAAnB,CAVQ,QAalBX,cAAc,CAAC,IAAD,CAAd,CACAO,YAAY,CAAC,KAAD,CAAZ,CACAK,gBAAgB,CAAC,EAAD,CAAhB,CAfkB,uDAAH,kBAAbC,CAAAA,aAAa,6CAAnB,CAkBA,mBACI,aAAK,SAAS,CAAC,yBAAf,wBACI,aAAK,SAAS,CAAC,sBAAf,wBACI,mCADJ,cAEI,KAAC,kBAAD,EAAoB,YAAY,CAAEN,YAAlC,EAFJ,GADJ,cAKI,KAAC,gBAAD,EAAkB,WAAW,CAAER,WAA/B,CAA4C,cAAc,CAAEC,cAA5D,EALJ,cAMI,KAAC,QAAD,EAAU,gBAAgB,CAAEY,gBAA5B,EANJ,cAOI,YAAK,SAAS,CAAC,8BAAf,CAA8C,OAAO,CAAEC,aAAvD,uBACI,mCADJ,EAPJ,GADJ,CAaH,CApCD,CAsCA,cAAeP,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nimport { UserList } from './';\nimport { CloseCreateChannel } from '../assets';\n\nconst ChannelNameInput = ({ channelName = '', setChannelName }) => {\n    const handleChange = (event) => {\n        event.preventDefault();\n\n        setChannelName(event.target.value);\n    }\n\n    return (\n        <div className=\"channel-name-input__wrapper\">\n            <p>Name</p>\n            <input value={channelName} onChange={handleChange} placeholder=\"channel-name\" />\n            <p>Add Members</p>\n        </div>\n    )\n}\n\nconst EditChannel = ({ setIsEditing }) => {\n    const { channel } = useChatContext();\n    const [channelName, setChannelName] = useState(channel?.data?.name);\n    const [selectedUsers, setSelectedUsers] = useState([])\n\n    const updateChannel = async (event) => {\n        event.preventDefault();\n\n        const nameChanged = channelName !== (channel.data.name || channel.data.id);\n\n        if(nameChanged) {\n            await channel.update({ name: channelName }, { text: `Channel name changed to ${channelName}`});\n        }\n\n        if(selectedUsers.length) {\n            await channel.addMembers(selectedUsers);\n        }\n\n        setChannelName(null);\n        setIsEditing(false);\n        setSelectedUsers([]);\n    }\n\n    return (\n        <div className=\"edit-channel__container\">\n            <div className=\"edit-channel__header\">\n                <p>Edit Channel</p>\n                <CloseCreateChannel setIsEditing={setIsEditing} />\n            </div>\n            <ChannelNameInput channelName={channelName} setChannelName={setChannelName} />\n            <UserList setSelectedUsers={setSelectedUsers} />\n            <div className=\"edit-channel__button-wrapper\" onClick={updateChannel}>\n                <p>Save Changes</p>\n            </div>\n        </div>\n    )\n}\n\nexport default EditChannel\n"]},"metadata":{},"sourceType":"module"}