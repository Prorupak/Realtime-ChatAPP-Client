{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar XmlNode = require('./XmlNode');\n/**\nText content within an XML document.\n\n@public\n*/\n\n\nvar XmlText = /*#__PURE__*/function (_XmlNode) {\n  _inherits(XmlText, _XmlNode);\n\n  var _super = _createSuper(XmlText);\n\n  /**\n  @param {string} [text]\n  */\n  function XmlText() {\n    var _this;\n\n    var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    _classCallCheck(this, XmlText);\n\n    _this = _super.call(this);\n    /**\n    Text content of this node.\n     @type {string}\n    @public\n    */\n\n    _this.text = text;\n    return _this;\n  }\n\n  _createClass(XmlText, [{\n    key: \"type\",\n    get: function get() {\n      return XmlNode.TYPE_TEXT;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return Object.assign(XmlNode.prototype.toJSON.call(this), {\n        text: this.text\n      });\n    }\n  }]);\n\n  return XmlText;\n}(XmlNode);\n\nmodule.exports = XmlText;","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/@rgrove/parse-xml/src/lib/XmlText.js"],"names":["XmlNode","require","XmlText","text","TYPE_TEXT","Object","assign","prototype","toJSON","call","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;;;IACMC,O;;;;;AACJ;AACF;AACA;AACE,qBAAuB;AAAA;;AAAA,QAAXC,IAAW,uEAAJ,EAAI;;AAAA;;AACrB;AAEA;AACJ;AACA;AACA;AACA;;AAEI,UAAKA,IAAL,GAAYA,IAAZ;AATqB;AAUtB;;;;SAED,eAAW;AACT,aAAOH,OAAO,CAACI,SAAf;AACD;;;WAED,kBAAS;AACP,aAAOC,MAAM,CAACC,MAAP,CAAcN,OAAO,CAACO,SAAR,CAAkBC,MAAlB,CAAyBC,IAAzB,CAA8B,IAA9B,CAAd,EAAmD;AACxDN,QAAAA,IAAI,EAAE,KAAKA;AAD6C,OAAnD,CAAP;AAGD;;;;EAxBmBH,O;;AA2BtBU,MAAM,CAACC,OAAP,GAAiBT,OAAjB","sourcesContent":["'use strict';\n\nconst XmlNode = require('./XmlNode');\n\n/**\nText content within an XML document.\n\n@public\n*/\nclass XmlText extends XmlNode {\n  /**\n  @param {string} [text]\n  */\n  constructor(text = '') {\n    super();\n\n    /**\n    Text content of this node.\n\n    @type {string}\n    @public\n    */\n    this.text = text;\n  }\n\n  get type() {\n    return XmlNode.TYPE_TEXT;\n  }\n\n  toJSON() {\n    return Object.assign(XmlNode.prototype.toJSON.call(this), {\n      text: this.text\n    });\n  }\n}\n\nmodule.exports = XmlText;\n"]},"metadata":{},"sourceType":"script"}