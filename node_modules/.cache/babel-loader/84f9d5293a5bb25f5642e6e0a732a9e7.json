{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nexport var commonEmoji = {\n  custom: true,\n  emoticons: [],\n  short_names: []\n};\nexport var emojiSetDef = {\n  imageUrl: '',\n  sheetColumns: 2,\n  sheetRows: 3,\n  sheetSize: 64,\n  spriteUrl: 'https://getstream.imgix.net/images/emoji-sprite.png'\n};\nexport var defaultMinimalEmojis = [__assign(__assign({\n  colons: ':+1:',\n  id: 'like',\n  name: 'like',\n  sheet_x: 0,\n  sheet_y: 0\n}, commonEmoji), emojiSetDef), __assign(__assign({\n  colons: ':heart:',\n  id: 'love',\n  name: 'love',\n  sheet_x: 1,\n  sheet_y: 2\n}, commonEmoji), emojiSetDef), __assign(__assign({\n  colons: ':joy:',\n  id: 'haha',\n  name: 'haha',\n  sheet_x: 1,\n  sheet_y: 0\n}, commonEmoji), emojiSetDef), __assign(__assign({\n  colons: ':astonished:',\n  id: 'wow',\n  name: 'wow',\n  sheet_x: 0,\n  sheet_y: 2\n}, commonEmoji), emojiSetDef), __assign(__assign({\n  colons: ':pensive:',\n  id: 'sad',\n  name: 'sad',\n  sheet_x: 0,\n  sheet_y: 1\n}, commonEmoji), emojiSetDef), __assign(__assign({\n  colons: ':angry:',\n  id: 'angry',\n  name: 'angry',\n  sheet_x: 1,\n  sheet_y: 1\n}, commonEmoji), emojiSetDef)]; // use this only for small lists like in ReactionSelector\n\nexport var getStrippedEmojiData = function (data) {\n  return __assign(__assign({}, data), {\n    emojis: {}\n  });\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/Channel/emojiData.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","commonEmoji","custom","emoticons","short_names","emojiSetDef","imageUrl","sheetColumns","sheetRows","sheetSize","spriteUrl","defaultMinimalEmojis","colons","id","name","sheet_x","sheet_y","getStrippedEmojiData","data","emojis"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexport var commonEmoji = {\n    custom: true,\n    emoticons: [],\n    short_names: [],\n};\nexport var emojiSetDef = {\n    imageUrl: '',\n    sheetColumns: 2,\n    sheetRows: 3,\n    sheetSize: 64,\n    spriteUrl: 'https://getstream.imgix.net/images/emoji-sprite.png',\n};\nexport var defaultMinimalEmojis = [\n    __assign(__assign({ colons: ':+1:', id: 'like', name: 'like', sheet_x: 0, sheet_y: 0 }, commonEmoji), emojiSetDef),\n    __assign(__assign({ colons: ':heart:', id: 'love', name: 'love', sheet_x: 1, sheet_y: 2 }, commonEmoji), emojiSetDef),\n    __assign(__assign({ colons: ':joy:', id: 'haha', name: 'haha', sheet_x: 1, sheet_y: 0 }, commonEmoji), emojiSetDef),\n    __assign(__assign({ colons: ':astonished:', id: 'wow', name: 'wow', sheet_x: 0, sheet_y: 2 }, commonEmoji), emojiSetDef),\n    __assign(__assign({ colons: ':pensive:', id: 'sad', name: 'sad', sheet_x: 0, sheet_y: 1 }, commonEmoji), emojiSetDef),\n    __assign(__assign({ colons: ':angry:', id: 'angry', name: 'angry', sheet_x: 1, sheet_y: 1 }, commonEmoji), emojiSetDef),\n];\n// use this only for small lists like in ReactionSelector\nexport var getStrippedEmojiData = function (data) { return (__assign(__assign({}, data), { emojis: {} })); };\n"]},"metadata":{},"sourceType":"module"}