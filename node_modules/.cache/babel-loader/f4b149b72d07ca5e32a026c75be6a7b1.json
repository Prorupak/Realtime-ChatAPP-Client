{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { Suspense, useMemo } from 'react';\nimport { getStrippedEmojiData } from '../Channel/emojiData';\nimport { useEmojiContext } from '../../context/EmojiContext';\nimport { useMessageContext } from '../../context/MessageContext';\n\nvar UnMemoizedReactionsList = function UnMemoizedReactionsList(props) {\n  var additionalEmojiProps = props.additionalEmojiProps,\n      onClick = props.onClick,\n      propReactionCounts = props.reaction_counts,\n      propReactionOptions = props.reactionOptions,\n      propReactions = props.reactions,\n      _a = props.reverse,\n      reverse = _a === void 0 ? false : _a;\n\n  var _b = useEmojiContext('ReactionsList'),\n      Emoji = _b.Emoji,\n      emojiConfig = _b.emojiConfig;\n\n  var _c = useMessageContext('ReactionsList'),\n      message = _c.message,\n      onReactionListClick = _c.onReactionListClick;\n\n  var _d = emojiConfig || {},\n      defaultMinimalEmojis = _d.defaultMinimalEmojis,\n      fullEmojiData = _d.emojiData,\n      emojiSetDef = _d.emojiSetDef;\n\n  var reactions = propReactions || message.latest_reactions || [];\n  var reactionCounts = propReactionCounts || message.reaction_counts || {};\n  var reactionOptions = propReactionOptions || defaultMinimalEmojis;\n  var reactionsAreCustom = !!(propReactionOptions === null || propReactionOptions === void 0 ? void 0 : propReactionOptions.length);\n  var emojiData = useMemo(function () {\n    return reactionsAreCustom ? fullEmojiData : getStrippedEmojiData(fullEmojiData);\n  }, [fullEmojiData, reactionsAreCustom]);\n  if (!reactions.length) return null;\n\n  var getTotalReactionCount = function getTotalReactionCount() {\n    return Object.values(reactionCounts).reduce(function (total, count) {\n      return total + count;\n    }, 0);\n  };\n\n  var getCurrentMessageReactionTypes = function getCurrentMessageReactionTypes() {\n    var reactionTypes = [];\n    reactions.forEach(function (_a) {\n      var type = _a.type;\n\n      if (reactionTypes.indexOf(type) === -1) {\n        reactionTypes.push(type);\n      }\n    });\n    return reactionTypes;\n  };\n\n  var getEmojiByReactionType = function getEmojiByReactionType(type) {\n    var reactionEmoji = reactionOptions.find(function (option) {\n      return option.id === type;\n    });\n    return reactionEmoji;\n  };\n\n  var getSupportedReactionMap = function getSupportedReactionMap() {\n    var reactionMap = {};\n    reactionOptions.forEach(function (_a) {\n      var id = _a.id;\n      return reactionMap[id] = true;\n    });\n    return reactionMap;\n  };\n\n  var messageReactionTypes = getCurrentMessageReactionTypes();\n  var supportedReactionMap = getSupportedReactionMap();\n  var supportedReactionsArePresent = messageReactionTypes.some(function (type) {\n    return supportedReactionMap[type];\n  });\n  if (!supportedReactionsArePresent) return null;\n  return React.createElement(\"div\", {\n    className: \"str-chat__reaction-list \" + (reverse ? 'str-chat__reaction-list--reverse' : ''),\n    \"data-testid\": 'reaction-list',\n    onClick: onClick || onReactionListClick\n  }, React.createElement(\"ul\", null, messageReactionTypes.map(function (reactionType) {\n    var emojiObject = getEmojiByReactionType(reactionType);\n    return emojiObject ? React.createElement(\"li\", {\n      key: emojiObject.id\n    }, React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(Emoji, __assign({\n      data: emojiData,\n      emoji: emojiObject,\n      size: 16\n    }, reactionsAreCustom ? additionalEmojiProps : emojiSetDef))), \"\\xA0\") : null;\n  }), React.createElement(\"li\", null, React.createElement(\"span\", {\n    className: 'str-chat__reaction-list--counter'\n  }, getTotalReactionCount()))));\n};\n/**\n * Component that displays a list of reactions on a message.\n */\n\n\nexport var ReactionsList = React.memo(UnMemoizedReactionsList);","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/Reactions/ReactionsList.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","Suspense","useMemo","getStrippedEmojiData","useEmojiContext","useMessageContext","UnMemoizedReactionsList","props","additionalEmojiProps","onClick","propReactionCounts","reaction_counts","propReactionOptions","reactionOptions","propReactions","reactions","_a","reverse","_b","Emoji","emojiConfig","_c","message","onReactionListClick","_d","defaultMinimalEmojis","fullEmojiData","emojiData","emojiSetDef","latest_reactions","reactionCounts","reactionsAreCustom","getTotalReactionCount","values","reduce","total","count","getCurrentMessageReactionTypes","reactionTypes","forEach","type","indexOf","push","getEmojiByReactionType","reactionEmoji","find","option","id","getSupportedReactionMap","reactionMap","messageReactionTypes","supportedReactionMap","supportedReactionsArePresent","some","createElement","className","map","reactionType","emojiObject","key","fallback","data","emoji","size","ReactionsList","memo"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { Suspense, useMemo } from 'react';\nimport { getStrippedEmojiData } from '../Channel/emojiData';\nimport { useEmojiContext } from '../../context/EmojiContext';\nimport { useMessageContext } from '../../context/MessageContext';\nvar UnMemoizedReactionsList = function (props) {\n    var additionalEmojiProps = props.additionalEmojiProps, onClick = props.onClick, propReactionCounts = props.reaction_counts, propReactionOptions = props.reactionOptions, propReactions = props.reactions, _a = props.reverse, reverse = _a === void 0 ? false : _a;\n    var _b = useEmojiContext('ReactionsList'), Emoji = _b.Emoji, emojiConfig = _b.emojiConfig;\n    var _c = useMessageContext('ReactionsList'), message = _c.message, onReactionListClick = _c.onReactionListClick;\n    var _d = emojiConfig || {}, defaultMinimalEmojis = _d.defaultMinimalEmojis, fullEmojiData = _d.emojiData, emojiSetDef = _d.emojiSetDef;\n    var reactions = propReactions || message.latest_reactions || [];\n    var reactionCounts = propReactionCounts || message.reaction_counts || {};\n    var reactionOptions = propReactionOptions || defaultMinimalEmojis;\n    var reactionsAreCustom = !!(propReactionOptions === null || propReactionOptions === void 0 ? void 0 : propReactionOptions.length);\n    var emojiData = useMemo(function () { return (reactionsAreCustom ? fullEmojiData : getStrippedEmojiData(fullEmojiData)); }, [fullEmojiData, reactionsAreCustom]);\n    if (!reactions.length)\n        return null;\n    var getTotalReactionCount = function () {\n        return Object.values(reactionCounts).reduce(function (total, count) { return total + count; }, 0);\n    };\n    var getCurrentMessageReactionTypes = function () {\n        var reactionTypes = [];\n        reactions.forEach(function (_a) {\n            var type = _a.type;\n            if (reactionTypes.indexOf(type) === -1) {\n                reactionTypes.push(type);\n            }\n        });\n        return reactionTypes;\n    };\n    var getEmojiByReactionType = function (type) {\n        var reactionEmoji = reactionOptions.find(function (option) { return option.id === type; });\n        return reactionEmoji;\n    };\n    var getSupportedReactionMap = function () {\n        var reactionMap = {};\n        reactionOptions.forEach(function (_a) {\n            var id = _a.id;\n            return (reactionMap[id] = true);\n        });\n        return reactionMap;\n    };\n    var messageReactionTypes = getCurrentMessageReactionTypes();\n    var supportedReactionMap = getSupportedReactionMap();\n    var supportedReactionsArePresent = messageReactionTypes.some(function (type) { return supportedReactionMap[type]; });\n    if (!supportedReactionsArePresent)\n        return null;\n    return (React.createElement(\"div\", { className: \"str-chat__reaction-list \" + (reverse ? 'str-chat__reaction-list--reverse' : ''), \"data-testid\": 'reaction-list', onClick: onClick || onReactionListClick },\n        React.createElement(\"ul\", null,\n            messageReactionTypes.map(function (reactionType) {\n                var emojiObject = getEmojiByReactionType(reactionType);\n                return emojiObject ? (React.createElement(\"li\", { key: emojiObject.id },\n                    React.createElement(Suspense, { fallback: null },\n                        React.createElement(Emoji, __assign({ data: emojiData, emoji: emojiObject, size: 16 }, (reactionsAreCustom ? additionalEmojiProps : emojiSetDef)))),\n                    \"\\u00A0\")) : null;\n            }),\n            React.createElement(\"li\", null,\n                React.createElement(\"span\", { className: 'str-chat__reaction-list--counter' }, getTotalReactionCount())))));\n};\n/**\n * Component that displays a list of reactions on a message.\n */\nexport var ReactionsList = React.memo(UnMemoizedReactionsList);\n"]},"metadata":{},"sourceType":"module"}