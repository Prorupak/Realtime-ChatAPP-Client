{"ast":null,"code":"import React, { useCallback, useState } from 'react';\nimport { MESSAGE_ACTIONS } from '../Message/utils';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\n\nvar CustomMessageActionsList = function (props) {\n  var customMessageActions = props.customMessageActions,\n      message = props.message;\n  var customActionsArray = Object.keys(customMessageActions);\n  return React.createElement(React.Fragment, null, customActionsArray.map(function (customAction) {\n    var customHandler = customMessageActions[customAction];\n    return React.createElement(\"button\", {\n      key: customAction,\n      onClick: function (event) {\n        return customHandler(message, event);\n      }\n    }, React.createElement(\"li\", {\n      className: 'str-chat__message-actions-list-item'\n    }, customAction));\n  }));\n};\n\nvar UnMemoizedMessageActionsBox = function (props) {\n  var getMessageActions = props.getMessageActions,\n      handleDelete = props.handleDelete,\n      handleEdit = props.handleEdit,\n      handleFlag = props.handleFlag,\n      handleMute = props.handleMute,\n      handlePin = props.handlePin,\n      isUserMuted = props.isUserMuted,\n      mine = props.mine,\n      _a = props.open,\n      open = _a === void 0 ? false : _a;\n  var setQuotedMessage = useChannelActionContext('MessageActionsBox').setQuotedMessage;\n\n  var _b = useMessageContext('MessageActionsBox'),\n      customMessageActions = _b.customMessageActions,\n      message = _b.message,\n      messageListRect = _b.messageListRect;\n\n  var t = useTranslationContext('MessageActionsBox').t;\n\n  var _c = useState(false),\n      reverse = _c[0],\n      setReverse = _c[1];\n\n  var messageActions = getMessageActions();\n  var checkIfReverse = useCallback(function (containerElement) {\n    if (!containerElement) {\n      setReverse(false);\n      return;\n    }\n\n    if (open) {\n      var containerRect = containerElement.getBoundingClientRect();\n\n      if (mine) {\n        setReverse(!!messageListRect && containerRect.left < messageListRect.left);\n      } else {\n        setReverse(!!messageListRect && containerRect.right + 5 > messageListRect.right);\n      }\n    }\n  }, [messageListRect, mine, open]);\n\n  var handleQuote = function () {\n    setQuotedMessage(message);\n    var elements = document.getElementsByClassName('str-chat__textarea__textarea');\n    var textarea = elements.item(0);\n\n    if (textarea instanceof HTMLTextAreaElement) {\n      textarea.focus();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"str-chat__message-actions-box\\n        \" + (open ? 'str-chat__message-actions-box--open' : '') + \"\\n        \" + (mine ? 'str-chat__message-actions-box--mine' : '') + \"\\n        \" + (reverse ? 'str-chat__message-actions-box--reverse' : '') + \"\\n      \",\n    \"data-testid\": 'message-actions-box',\n    ref: checkIfReverse\n  }, React.createElement(\"ul\", {\n    className: 'str-chat__message-actions-list'\n  }, customMessageActions && React.createElement(CustomMessageActionsList, {\n    customMessageActions: customMessageActions,\n    message: message\n  }), messageActions.indexOf(MESSAGE_ACTIONS.quote) > -1 && !message.parent_id && !message.quoted_message && React.createElement(\"button\", {\n    onClick: handleQuote\n  }, React.createElement(\"li\", {\n    className: 'str-chat__message-actions-list-item'\n  }, t('Reply'))), messageActions.indexOf(MESSAGE_ACTIONS.pin) > -1 && !message.parent_id && React.createElement(\"button\", {\n    onClick: handlePin\n  }, React.createElement(\"li\", {\n    className: 'str-chat__message-actions-list-item'\n  }, !message.pinned ? t('Pin') : t('Unpin'))), messageActions.indexOf(MESSAGE_ACTIONS.flag) > -1 && React.createElement(\"button\", {\n    onClick: handleFlag\n  }, React.createElement(\"li\", {\n    className: 'str-chat__message-actions-list-item'\n  }, t('Flag'))), messageActions.indexOf(MESSAGE_ACTIONS.mute) > -1 && React.createElement(\"button\", {\n    onClick: handleMute\n  }, React.createElement(\"li\", {\n    className: 'str-chat__message-actions-list-item'\n  }, isUserMuted() ? t('Unmute') : t('Mute'))), messageActions.indexOf(MESSAGE_ACTIONS.edit) > -1 && React.createElement(\"button\", {\n    onClick: handleEdit\n  }, React.createElement(\"li\", {\n    className: 'str-chat__message-actions-list-item'\n  }, t('Edit Message'))), messageActions.indexOf(MESSAGE_ACTIONS.delete) > -1 && React.createElement(\"button\", {\n    onClick: handleDelete\n  }, React.createElement(\"li\", {\n    className: 'str-chat__message-actions-list-item'\n  }, t('Delete')))));\n};\n/**\n * A popup box that displays the available actions on a message, such edit, delete, pin, etc.\n */\n\n\nexport var MessageActionsBox = React.memo(UnMemoizedMessageActionsBox);","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/MessageActions/MessageActionsBox.js"],"names":["React","useCallback","useState","MESSAGE_ACTIONS","useChannelActionContext","useMessageContext","useTranslationContext","CustomMessageActionsList","props","customMessageActions","message","customActionsArray","Object","keys","createElement","Fragment","map","customAction","customHandler","key","onClick","event","className","UnMemoizedMessageActionsBox","getMessageActions","handleDelete","handleEdit","handleFlag","handleMute","handlePin","isUserMuted","mine","_a","open","setQuotedMessage","_b","messageListRect","t","_c","reverse","setReverse","messageActions","checkIfReverse","containerElement","containerRect","getBoundingClientRect","left","right","handleQuote","elements","document","getElementsByClassName","textarea","item","HTMLTextAreaElement","focus","ref","indexOf","quote","parent_id","quoted_message","pin","pinned","flag","mute","edit","delete","MessageActionsBox","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { MESSAGE_ACTIONS } from '../Message/utils';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useMessageContext, } from '../../context/MessageContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nvar CustomMessageActionsList = function (props) {\n    var customMessageActions = props.customMessageActions, message = props.message;\n    var customActionsArray = Object.keys(customMessageActions);\n    return (React.createElement(React.Fragment, null, customActionsArray.map(function (customAction) {\n        var customHandler = customMessageActions[customAction];\n        return (React.createElement(\"button\", { key: customAction, onClick: function (event) { return customHandler(message, event); } },\n            React.createElement(\"li\", { className: 'str-chat__message-actions-list-item' }, customAction)));\n    })));\n};\nvar UnMemoizedMessageActionsBox = function (props) {\n    var getMessageActions = props.getMessageActions, handleDelete = props.handleDelete, handleEdit = props.handleEdit, handleFlag = props.handleFlag, handleMute = props.handleMute, handlePin = props.handlePin, isUserMuted = props.isUserMuted, mine = props.mine, _a = props.open, open = _a === void 0 ? false : _a;\n    var setQuotedMessage = useChannelActionContext('MessageActionsBox').setQuotedMessage;\n    var _b = useMessageContext('MessageActionsBox'), customMessageActions = _b.customMessageActions, message = _b.message, messageListRect = _b.messageListRect;\n    var t = useTranslationContext('MessageActionsBox').t;\n    var _c = useState(false), reverse = _c[0], setReverse = _c[1];\n    var messageActions = getMessageActions();\n    var checkIfReverse = useCallback(function (containerElement) {\n        if (!containerElement) {\n            setReverse(false);\n            return;\n        }\n        if (open) {\n            var containerRect = containerElement.getBoundingClientRect();\n            if (mine) {\n                setReverse(!!messageListRect && containerRect.left < messageListRect.left);\n            }\n            else {\n                setReverse(!!messageListRect && containerRect.right + 5 > messageListRect.right);\n            }\n        }\n    }, [messageListRect, mine, open]);\n    var handleQuote = function () {\n        setQuotedMessage(message);\n        var elements = document.getElementsByClassName('str-chat__textarea__textarea');\n        var textarea = elements.item(0);\n        if (textarea instanceof HTMLTextAreaElement) {\n            textarea.focus();\n        }\n    };\n    return (React.createElement(\"div\", { className: \"str-chat__message-actions-box\\n        \" + (open ? 'str-chat__message-actions-box--open' : '') + \"\\n        \" + (mine ? 'str-chat__message-actions-box--mine' : '') + \"\\n        \" + (reverse ? 'str-chat__message-actions-box--reverse' : '') + \"\\n      \", \"data-testid\": 'message-actions-box', ref: checkIfReverse },\n        React.createElement(\"ul\", { className: 'str-chat__message-actions-list' },\n            customMessageActions && (React.createElement(CustomMessageActionsList, { customMessageActions: customMessageActions, message: message })),\n            messageActions.indexOf(MESSAGE_ACTIONS.quote) > -1 &&\n                !message.parent_id &&\n                !message.quoted_message && (React.createElement(\"button\", { onClick: handleQuote },\n                React.createElement(\"li\", { className: 'str-chat__message-actions-list-item' }, t('Reply')))),\n            messageActions.indexOf(MESSAGE_ACTIONS.pin) > -1 && !message.parent_id && (React.createElement(\"button\", { onClick: handlePin },\n                React.createElement(\"li\", { className: 'str-chat__message-actions-list-item' }, !message.pinned ? t('Pin') : t('Unpin')))),\n            messageActions.indexOf(MESSAGE_ACTIONS.flag) > -1 && (React.createElement(\"button\", { onClick: handleFlag },\n                React.createElement(\"li\", { className: 'str-chat__message-actions-list-item' }, t('Flag')))),\n            messageActions.indexOf(MESSAGE_ACTIONS.mute) > -1 && (React.createElement(\"button\", { onClick: handleMute },\n                React.createElement(\"li\", { className: 'str-chat__message-actions-list-item' }, isUserMuted() ? t('Unmute') : t('Mute')))),\n            messageActions.indexOf(MESSAGE_ACTIONS.edit) > -1 && (React.createElement(\"button\", { onClick: handleEdit },\n                React.createElement(\"li\", { className: 'str-chat__message-actions-list-item' }, t('Edit Message')))),\n            messageActions.indexOf(MESSAGE_ACTIONS.delete) > -1 && (React.createElement(\"button\", { onClick: handleDelete },\n                React.createElement(\"li\", { className: 'str-chat__message-actions-list-item' }, t('Delete')))))));\n};\n/**\n * A popup box that displays the available actions on a message, such edit, delete, pin, etc.\n */\nexport var MessageActionsBox = React.memo(UnMemoizedMessageActionsBox);\n"]},"metadata":{},"sourceType":"module"}