{"ast":null,"code":"var _curry2 = /*#__PURE__*/require(\"./internal/_curry2\");\n\nvar _equals = /*#__PURE__*/require(\"./internal/_equals\");\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nmodule.exports = equals;","map":{"version":3,"sources":["/home/rupak/Desktop/Project/Chat Application/chatApp_client/node_modules/ramda/src/equals.js"],"names":["_curry2","require","_equals","equals","a","b","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GACX,aACAC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,OAAO,GACX,aACAD,OAAO,CAAC,oBAAD,CAFP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIE,MAAM,GACV,aACAH,OAAO,CAAC,SAASG,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC5B,SAAOH,OAAO,CAACE,CAAD,EAAIC,CAAJ,EAAO,EAAP,EAAW,EAAX,CAAd;AACD,CAFM,CAFP;;AAMAC,MAAM,CAACC,OAAP,GAAiBJ,MAAjB","sourcesContent":["var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _equals =\n/*#__PURE__*/\nrequire(\"./internal/_equals\");\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nmodule.exports = equals;"]},"metadata":{},"sourceType":"script"}