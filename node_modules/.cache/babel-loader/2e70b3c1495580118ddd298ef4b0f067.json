{"ast":null,"code":"import React from 'react';\nimport { isDayOrMoment, useTranslationContext } from '../../context/TranslationContext';\n\nvar UnMemoizedDateSeparator = function UnMemoizedDateSeparator(props) {\n  var date = props.date,\n      formatDate = props.formatDate,\n      _a = props.position,\n      position = _a === void 0 ? 'right' : _a,\n      unread = props.unread;\n\n  var _b = useTranslationContext('DateSeparator'),\n      t = _b.t,\n      tDateTimeParser = _b.tDateTimeParser;\n\n  if (typeof date === 'string') return null;\n  var parsedDate = tDateTimeParser(date.toISOString());\n  var formattedDate = formatDate ? formatDate(date) : isDayOrMoment(parsedDate) ? parsedDate.calendar() : parsedDate;\n  return React.createElement(\"div\", {\n    className: 'str-chat__date-separator'\n  }, (position === 'right' || position === 'center') && React.createElement(\"hr\", {\n    className: 'str-chat__date-separator-line'\n  }), React.createElement(\"div\", {\n    className: 'str-chat__date-separator-date'\n  }, unread ? t('New') + \" - \" + formattedDate : formattedDate), (position === 'left' || position === 'center') && React.createElement(\"hr\", {\n    className: 'str-chat__date-separator-line'\n  }));\n};\n/**\n * A simple date separator between messages.\n */\n\n\nexport var DateSeparator = React.memo(UnMemoizedDateSeparator);","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/DateSeparator/DateSeparator.js"],"names":["React","isDayOrMoment","useTranslationContext","UnMemoizedDateSeparator","props","date","formatDate","_a","position","unread","_b","t","tDateTimeParser","parsedDate","toISOString","formattedDate","calendar","createElement","className","DateSeparator","memo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,qBAAxB,QAAqD,kCAArD;;AACA,IAAIC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAUC,KAAV,EAAiB;AAC3C,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AAAA,MAAuBC,UAAU,GAAGF,KAAK,CAACE,UAA1C;AAAA,MAAsDC,EAAE,GAAGH,KAAK,CAACI,QAAjE;AAAA,MAA2EA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAAhH;AAAA,MAAoHE,MAAM,GAAGL,KAAK,CAACK,MAAnI;;AACA,MAAIC,EAAE,GAAGR,qBAAqB,CAAC,eAAD,CAA9B;AAAA,MAAiDS,CAAC,GAAGD,EAAE,CAACC,CAAxD;AAAA,MAA2DC,eAAe,GAAGF,EAAE,CAACE,eAAhF;;AACA,MAAI,OAAOP,IAAP,KAAgB,QAApB,EACI,OAAO,IAAP;AACJ,MAAIQ,UAAU,GAAGD,eAAe,CAACP,IAAI,CAACS,WAAL,EAAD,CAAhC;AACA,MAAIC,aAAa,GAAGT,UAAU,GACxBA,UAAU,CAACD,IAAD,CADc,GAExBJ,aAAa,CAACY,UAAD,CAAb,GACIA,UAAU,CAACG,QAAX,EADJ,GAEIH,UAJV;AAKA,SAAQb,KAAK,CAACiB,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACJ,CAACV,QAAQ,KAAK,OAAb,IAAwBA,QAAQ,KAAK,QAAtC,KAAoDR,KAAK,CAACiB,aAAN,CAAoB,IAApB,EAA0B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA1B,CADhD,EAEJlB,KAAK,CAACiB,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3B,EAA2ET,MAAM,GAAGE,CAAC,CAAC,KAAD,CAAD,GAAW,KAAX,GAAmBI,aAAtB,GAAsCA,aAAvH,CAFI,EAGJ,CAACP,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,QAArC,KAAmDR,KAAK,CAACiB,aAAN,CAAoB,IAApB,EAA0B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA1B,CAH/C,CAAR;AAIH,CAfD;AAgBA;AACA;AACA;;;AACA,OAAO,IAAIC,aAAa,GAAGnB,KAAK,CAACoB,IAAN,CAAWjB,uBAAX,CAApB","sourcesContent":["import React from 'react';\nimport { isDayOrMoment, useTranslationContext } from '../../context/TranslationContext';\nvar UnMemoizedDateSeparator = function (props) {\n    var date = props.date, formatDate = props.formatDate, _a = props.position, position = _a === void 0 ? 'right' : _a, unread = props.unread;\n    var _b = useTranslationContext('DateSeparator'), t = _b.t, tDateTimeParser = _b.tDateTimeParser;\n    if (typeof date === 'string')\n        return null;\n    var parsedDate = tDateTimeParser(date.toISOString());\n    var formattedDate = formatDate\n        ? formatDate(date)\n        : isDayOrMoment(parsedDate)\n            ? parsedDate.calendar()\n            : parsedDate;\n    return (React.createElement(\"div\", { className: 'str-chat__date-separator' },\n        (position === 'right' || position === 'center') && (React.createElement(\"hr\", { className: 'str-chat__date-separator-line' })),\n        React.createElement(\"div\", { className: 'str-chat__date-separator-date' }, unread ? t('New') + \" - \" + formattedDate : formattedDate),\n        (position === 'left' || position === 'center') && (React.createElement(\"hr\", { className: 'str-chat__date-separator-line' }))));\n};\n/**\n * A simple date separator between messages.\n */\nexport var DateSeparator = React.memo(UnMemoizedDateSeparator);\n"]},"metadata":{},"sourceType":"module"}