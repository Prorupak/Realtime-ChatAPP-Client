{"ast":null,"code":"import React from 'react';\nimport { Avatar } from '../Avatar';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\n\nvar QuotedMessagePreviewHeader = function () {\n  var setQuotedMessage = useChannelActionContext('QuotedMessagePreview').setQuotedMessage;\n  var t = useTranslationContext('QuotedMessagePreview').t;\n  return React.createElement(\"div\", {\n    className: 'quoted-message-preview-header'\n  }, React.createElement(\"div\", null, t('Reply to Message')), React.createElement(\"button\", {\n    className: 'str-chat__square-button',\n    onClick: function () {\n      return setQuotedMessage(undefined);\n    }\n  }, React.createElement(\"svg\", {\n    height: '10',\n    width: '10',\n    xmlns: 'http://www.w3.org/2000/svg'\n  }, React.createElement(\"path\", {\n    d: 'M9.916 1.027L8.973.084 5 4.058 1.027.084l-.943.943L4.058 5 .084 8.973l.943.943L5 5.942l3.973 3.974.943-.943L5.942 5z',\n    fillRule: 'evenodd'\n  }))));\n};\n\nexport var QuotedMessagePreview = function (props) {\n  var _a;\n\n  var quotedMessage = props.quotedMessage;\n  var Attachment = useComponentContext('QuotedMessagePreview').Attachment;\n  var userLanguage = useTranslationContext('QuotedMessagePreview').userLanguage;\n  var quotedMessageText = ((_a = quotedMessage.i18n) === null || _a === void 0 ? void 0 : _a[userLanguage + \"_text\"]) || quotedMessage.text; // @ts-expect-error\n\n  var quotedMessageAttachment = quotedMessage.attachments.length ? // @ts-expect-error\n  quotedMessage.attachments[0] : null;\n  if (!quotedMessageText && !quotedMessageAttachment) return null;\n  return React.createElement(\"div\", {\n    className: 'quoted-message-preview'\n  }, React.createElement(QuotedMessagePreviewHeader, null), React.createElement(\"div\", {\n    className: 'quoted-message-preview-content'\n  }, quotedMessage.user && React.createElement(Avatar, {\n    image: quotedMessage.user.image,\n    name: quotedMessage.user.name || quotedMessage.user.id,\n    size: 20,\n    user: quotedMessage.user\n  }), React.createElement(\"div\", {\n    className: 'quoted-message-preview-content-inner'\n  }, quotedMessageAttachment && React.createElement(Attachment, {\n    attachments: [quotedMessageAttachment]\n  }), React.createElement(\"div\", null, quotedMessageText))));\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/MessageInput/QuotedMessagePreview.js"],"names":["React","Avatar","useChannelActionContext","useComponentContext","useTranslationContext","QuotedMessagePreviewHeader","setQuotedMessage","t","createElement","className","onClick","undefined","height","width","xmlns","d","fillRule","QuotedMessagePreview","props","_a","quotedMessage","Attachment","userLanguage","quotedMessageText","i18n","text","quotedMessageAttachment","attachments","length","user","image","name","id","size"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Avatar } from '../Avatar';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nvar QuotedMessagePreviewHeader = function () {\n    var setQuotedMessage = useChannelActionContext('QuotedMessagePreview').setQuotedMessage;\n    var t = useTranslationContext('QuotedMessagePreview').t;\n    return (React.createElement(\"div\", { className: 'quoted-message-preview-header' },\n        React.createElement(\"div\", null, t('Reply to Message')),\n        React.createElement(\"button\", { className: 'str-chat__square-button', onClick: function () { return setQuotedMessage(undefined); } },\n            React.createElement(\"svg\", { height: '10', width: '10', xmlns: 'http://www.w3.org/2000/svg' },\n                React.createElement(\"path\", { d: 'M9.916 1.027L8.973.084 5 4.058 1.027.084l-.943.943L4.058 5 .084 8.973l.943.943L5 5.942l3.973 3.974.943-.943L5.942 5z', fillRule: 'evenodd' })))));\n};\nexport var QuotedMessagePreview = function (props) {\n    var _a;\n    var quotedMessage = props.quotedMessage;\n    var Attachment = useComponentContext('QuotedMessagePreview').Attachment;\n    var userLanguage = useTranslationContext('QuotedMessagePreview').userLanguage;\n    var quotedMessageText = ((_a = quotedMessage.i18n) === null || _a === void 0 ? void 0 : _a[userLanguage + \"_text\"]) ||\n        quotedMessage.text;\n    // @ts-expect-error\n    var quotedMessageAttachment = quotedMessage.attachments.length\n        ? // @ts-expect-error\n            quotedMessage.attachments[0]\n        : null;\n    if (!quotedMessageText && !quotedMessageAttachment)\n        return null;\n    return (React.createElement(\"div\", { className: 'quoted-message-preview' },\n        React.createElement(QuotedMessagePreviewHeader, null),\n        React.createElement(\"div\", { className: 'quoted-message-preview-content' },\n            quotedMessage.user && (React.createElement(Avatar, { image: quotedMessage.user.image, name: quotedMessage.user.name || quotedMessage.user.id, size: 20, user: quotedMessage.user })),\n            React.createElement(\"div\", { className: 'quoted-message-preview-content-inner' },\n                quotedMessageAttachment && React.createElement(Attachment, { attachments: [quotedMessageAttachment] }),\n                React.createElement(\"div\", null, quotedMessageText)))));\n};\n"]},"metadata":{},"sourceType":"module"}