{"ast":null,"code":"import { EmoticonItem } from '../../EmoticonItem/EmoticonItem';\nexport var useEmojiTrigger = function (emojiIndex) {\n  return {\n    component: EmoticonItem,\n    dataProvider: function (query, _, onReady) {\n      if (query.length === 0 || query.charAt(0).match(/[^a-zA-Z0-9+-]/)) {\n        return [];\n      }\n\n      var emojis = (emojiIndex === null || emojiIndex === void 0 ? void 0 : emojiIndex.search(query)) || []; // emojiIndex.search sometimes returns undefined values, so filter those out first\n\n      var result = emojis.filter(Boolean).slice(0, 10);\n      if (onReady) onReady(result, query);\n      return result;\n    },\n    output: function (entity) {\n      return {\n        caretPosition: 'next',\n        key: entity.id,\n        text: \"\" + ('native' in entity ? entity.native : '')\n      };\n    }\n  };\n};","map":{"version":3,"sources":["/home/rupak/Music/project_medical_pager_chat-master/client/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useEmojiTrigger.js"],"names":["EmoticonItem","useEmojiTrigger","emojiIndex","component","dataProvider","query","_","onReady","length","charAt","match","emojis","search","result","filter","Boolean","slice","output","entity","caretPosition","key","id","text","native"],"mappings":"AAAA,SAASA,YAAT,QAA6B,iCAA7B;AACA,OAAO,IAAIC,eAAe,GAAG,UAAUC,UAAV,EAAsB;AAAE,SAAQ;AACzDC,IAAAA,SAAS,EAAEH,YAD8C;AAEzDI,IAAAA,YAAY,EAAE,UAAUC,KAAV,EAAiBC,CAAjB,EAAoBC,OAApB,EAA6B;AACvC,UAAIF,KAAK,CAACG,MAAN,KAAiB,CAAjB,IAAsBH,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgBC,KAAhB,CAAsB,gBAAtB,CAA1B,EAAmE;AAC/D,eAAO,EAAP;AACH;;AACD,UAAIC,MAAM,GAAG,CAACT,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACU,MAAX,CAAkBP,KAAlB,CAAzD,KAAsF,EAAnG,CAJuC,CAKvC;;AACA,UAAIQ,MAAM,GAAGF,MAAM,CAACG,MAAP,CAAcC,OAAd,EAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,EAAhC,CAAb;AACA,UAAIT,OAAJ,EACIA,OAAO,CAACM,MAAD,EAASR,KAAT,CAAP;AACJ,aAAOQ,MAAP;AACH,KAZwD;AAazDI,IAAAA,MAAM,EAAE,UAAUC,MAAV,EAAkB;AAAE,aAAQ;AAChCC,QAAAA,aAAa,EAAE,MADiB;AAEhCC,QAAAA,GAAG,EAAEF,MAAM,CAACG,EAFoB;AAGhCC,QAAAA,IAAI,EAAE,MAAM,YAAYJ,MAAZ,GAAqBA,MAAM,CAACK,MAA5B,GAAqC,EAA3C;AAH0B,OAAR;AAIvB;AAjBoD,GAAR;AAkBhD,CAlBE","sourcesContent":["import { EmoticonItem } from '../../EmoticonItem/EmoticonItem';\nexport var useEmojiTrigger = function (emojiIndex) { return ({\n    component: EmoticonItem,\n    dataProvider: function (query, _, onReady) {\n        if (query.length === 0 || query.charAt(0).match(/[^a-zA-Z0-9+-]/)) {\n            return [];\n        }\n        var emojis = (emojiIndex === null || emojiIndex === void 0 ? void 0 : emojiIndex.search(query)) || [];\n        // emojiIndex.search sometimes returns undefined values, so filter those out first\n        var result = emojis.filter(Boolean).slice(0, 10);\n        if (onReady)\n            onReady(result, query);\n        return result;\n    },\n    output: function (entity) { return ({\n        caretPosition: 'next',\n        key: entity.id,\n        text: \"\" + ('native' in entity ? entity.native : ''),\n    }); },\n}); };\n"]},"metadata":{},"sourceType":"module"}