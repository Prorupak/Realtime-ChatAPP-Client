import { FC, ComponentType } from 'react';
import { ConvertorType } from '../parser';
import { LoadingProps } from '../components/Loading';
import { ErrorProps } from '../components/Error';
import { SuccessProps } from '../components/Success';
export declare type MMLProps = {
    /** The MML string source to render */
    source: string;
    /** The convert config allows you to overwrite the MML to react conversion */
    converters?: Record<string, ConvertorType>;
    /** The submit callback whenever a form is submitted, submit is expected to return a promise */
    onSubmit?: (data: Record<string, any>) => Promise<any> | any;
    /** Select a theme from built in available themes, it will be added as a className to the container(root) div */
    theme?: 'base-dark' | 'messaging-light' | 'messaging-dark' | 'team-light' | 'team-dark' | 'commerce-light' | 'commerce-dark' | 'livestream-light' | 'livestream-dark' | string;
    /** Custom classname, appended to wrapper classname */
    className?: string;
    /** The Loading component, accepts null to render nothing */
    Loading?: ComponentType<LoadingProps> | null;
    /** The error component, accepts null to render nothing */
    Error?: ComponentType<ErrorProps> | null;
    /** The success message component, accepts null to render nothing */
    Success?: ComponentType<SuccessProps> | null;
};
/**
 * MML root component
 */
export declare const MML: FC<MMLProps>;
