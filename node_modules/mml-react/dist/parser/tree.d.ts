import { ReactElement } from 'react';
import { XmlElement } from '@rgrove/parse-xml';
import { MMLTag } from './MMLTag';
import { ConvertorType } from './converters';
/** The type attribute of <mml> determine how its inner content is visually displayed */
export declare type RootType = 'card';
/**
 * Tree - The tree object for MML tags
 */
export declare class Tree {
    converters: Record<string, ConvertorType>;
    node: XmlElement;
    children: MMLTag[];
    reactElements: ReactElement[];
    name?: string;
    type?: RootType;
    constructor(node: XmlElement, children: MMLTag[], customConvertors?: Record<string, ConvertorType>);
    /**
     * convert all nodes to react and maintain the hierarchy
     */
    toReact(parent?: Tree | MMLTag): ReactElement<any, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => import("react").Component<any, any, any>)>[];
}
